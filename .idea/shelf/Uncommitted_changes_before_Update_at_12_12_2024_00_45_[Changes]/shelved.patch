Index: ../Element-Battle-main-public - Kopie/src/main/resources/static/game.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"de\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <link rel=\"shortcut icon\" type=\"x-icon\" href=\"3104645.png\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Element Battle</title>\r\n    <link rel=\"stylesheet\" href=\"game.css\">\r\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" rel=\"stylesheet\">\r\n<body>\r\n<header>\r\n    <nav>\r\n        <div class=\"nav-left\">\r\n            <img src=\"3104645.png\" alt=\"Logo\" class=\"logo\">\r\n            <h1 class=\"nav-title\">Element Battle</h1>\r\n        </div>\r\n        <div class=\"nav-buttons\">\r\n            <button id=\"shopButton\" class=\"but\" onclick=\"window.location.href='shop.html'\">\r\n                <i class=\"fas fa-store\"></i> Shop\r\n            </button>\r\n            <button onclick=\"window.location.href='index.html'\" id=\"backbutton\" class=\"but\">\r\n                <i class=\"fas fa-users\"></i> Heldenverwaltung\r\n            </button>\r\n        </div>\r\n        <div class=\"nav-right\">\r\n            <span id=\"userInfo\" style=\"display: none;\">\r\n                <span id=\"username\"></span>\r\n            </span>\r\n            <div id=\"authButtons\">\r\n                <button class=\"but\" onclick=\"window.location.href='login.html#login'\" id=\"loginButton\">\r\n                    <i class=\"fas fa-sign-in-alt\"></i> Anmelden\r\n                </button>\r\n                <button class=\"but\" onclick=\"window.location.href='login.html#register'\" id=\"registerButton\">\r\n                    <i class=\"fas fa-user-plus\"></i> Registrieren\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n</header>\r\n\r\n<main>\r\n    <div class=\"game-container\">\r\n        <div class=\"side-panel left-panel\">\r\n            <div class=\"game-info\">\r\n                <h2>Spieler vs. Computer</h2>\r\n                <div class=\"hp-container\">\r\n                    <div class=\"hp-bar\">\r\n                        <div id=\"player-hp-bar\" class=\"hp-fill\"></div>\r\n                    </div>\r\n                    <p id=\"player-hp\">Spieler HP: <span id=\"player-hp-value\">25</span></p>\r\n                </div>\r\n                <div class=\"hp-container\">\r\n                    <div class=\"hp-bar\">\r\n                        <div id=\"computer-hp-bar\" class=\"hp-fill\"></div>\r\n                    </div>\r\n                    <p id=\"computer-hp\">Computer HP: <span id=\"computer-hp-value\">25</span></p>\r\n                </div>\r\n                <p id=\"turn-info\" class=\"turn-info\">WÃ¤hle eine Karte aus.</p>\r\n            </div>\r\n            <div class=\"element-info\">\r\n                <h3>Elementbeziehungen</h3>\r\n                <ul>\r\n                    <li><span class=\"element-relationship feuer\">Feuer</span> > <span class=\"element-relationship pflanze\">Pflanze</span></li>\r\n                    <li><span class=\"element-relationship wasser\">Wasser</span> > <span class=\"element-relationship feuer\">Feuer</span></li>\r\n                    <li><span class=\"element-relationship pflanze\">Pflanze</span> > <span class=\"element-relationship wasser\">Wasser</span></li>\r\n                    <li><span class=\"element-relationship elektro\">Elektro</span> > <span class=\"element-relationship wasser\">Wasser</span></li>\r\n                    <li><span class=\"element-relationship erde\">Erde</span> > <span class=\"element-relationship elektro\">Elektro</span></li>\r\n                    <li><span class=\"element-relationship luft\">Luft</span> > <span class=\"element-relationship erde\">Erde</span></li>\r\n                    <li><span class=\"element-relationship eis\">Eis</span> > <span class=\"element-relationship luft\">Luft</span></li>\r\n                </ul>\r\n\r\n\r\n                <h3>Schadensberechnung</h3>\r\n                <ul>\r\n                    <li>Effektiver Angriff: 1.5x Schaden</li>\r\n                    <li>Ineffektiver Angriff: 0.5x Schaden</li>\r\n                    <li>Normaler Angriff: 1x Schaden</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div class=\"center-panel\">\r\n            <div class=\"computer-cards\">\r\n\r\n            </div>\r\n            <div class=\"game-board\">\r\n                <div id=\"computer-field\" class=\"computer-field\">\r\n\r\n                </div>\r\n                <div id=\"player-field\" class=\"player-field\">\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"player-cards\">\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"side-panel right-panel\">\r\n            <h2>Kampfprotokoll</h2>\r\n            <div id=\"battle-log\"></div>\r\n        </div>\r\n    </div>\r\n</main>\r\n\r\n<script>\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n        const username = localStorage.getItem('username');\r\n        if (username) {\r\n            fetch('/getBackground', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ username })\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success && data.background) {\r\n                        const backgroundUrl = `url('${data.background}.gif')`;\r\n                        document.querySelector('.player-field').style.backgroundImage = backgroundUrl;\r\n                        document.querySelector('.computer-field').style.backgroundImage = backgroundUrl;\r\n                    } else {\r\n                        console.log('Kein Hintergrund gefunden oder Fehler:', data.message);\r\n                    }\r\n                })\r\n                .catch(error => console.error('Error:', error));\r\n        }\r\n    });\r\n</script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js\"></script>\r\n<script src=\"game.js\"></script>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/src/main/resources/static/game.html b/../Element-Battle-main-public - Kopie/src/main/resources/static/game.html
--- a/../Element-Battle-main-public - Kopie/src/main/resources/static/game.html	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/src/main/resources/static/game.html	(date 1721923098262)
@@ -84,7 +84,6 @@
             </div>
             <div class="game-board">
                 <div id="computer-field" class="computer-field">
-
                 </div>
                 <div id="player-field" class="player-field">
 
Index: ../Element-Battle-main-public - Kopie/src/main/resources/static/game.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@keyframes shake {\r\n    0%, 100% { transform: translateX(0); }\r\n    10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }\r\n    20%, 40%, 60%, 80% { transform: translateX(5px); }\r\n}\r\n\r\n@keyframes flash {\r\n    0%, 50%, 100% {\r\n        opacity: 1;\r\n    }\r\n    25%, 75% {\r\n        opacity: 0;\r\n    }\r\n}\r\n\r\n@keyframes fall {\r\n    to {\r\n        transform: translateY(100vh) rotate(720deg);\r\n    }\r\n}\r\n\r\n.elemental-sphere.fire { background-color: red; }\r\n.elemental-sphere.water { background-color: blue; }\r\n.elemental-sphere.lightning { background-color: yellow; }\r\n.elemental-sphere.earth { background-color: brown; }\r\n.elemental-sphere.air { background-color: white; }\r\n\r\nbody {\r\n    font-family: 'Roboto', sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: #f4f4f9;\r\n    color: #333;\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\nheader {\r\n    height: 45px;\r\n    width: 100%;\r\n    background-color: #4CAF50;\r\n    color: #fff;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1000;\r\n    padding: 8px 0;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nheader nav {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 20px;\r\n}\r\n\r\n.nav-left {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.logout-button {\r\n    margin-left: 15px;\r\n    background-color: #ff4136;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 15px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n}\r\n\r\n.logo {\r\n    height: 40px;\r\n    margin-right: 10px;\r\n}\r\n\r\n.nav-title {\r\n    margin: 0;\r\n    font-size: 1.5em;\r\n}\r\n\r\n.nav-buttons,\r\n.nav-right {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n.nav-buttons {\r\n    justify-content: center;\r\n}\r\n\r\n#userInfo {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 10px;\r\n}\r\n\r\n#authButtons {\r\n    display: flex;\r\n}\r\n\r\n.nav-buttons .but:hover,\r\n.nav-right .but:hover {\r\n    background-color: #e8f5e9;\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.nav-buttons .but i,\r\n.nav-right .but i {\r\n    margin-right: 5px;\r\n}\r\n\r\n#logoutButton {\r\n    background-color: #f44336;\r\n    color: #ffffff;\r\n}\r\n\r\n#logoutButton:hover {\r\n    background-color: #d32f2f;\r\n}\r\n\r\n.username-text {\r\n    margin-right: 15px;\r\n}\r\n\r\n#username, #coins {\r\n    margin-right: 10px;\r\n    font-weight: bold;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .nav-right {\r\n        flex-direction: column;\r\n        align-items: flex-end;\r\n    }\r\n\r\n    #userInfo, #authButtons {\r\n        margin-top: 5px;\r\n    }\r\n\r\n    .nav-buttons .but,\r\n    .nav-right .but {\r\n        font-size: 12px;\r\n        padding: 6px 12px;\r\n    }\r\n}\r\n\r\nmain {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    flex: 1;\r\n    display: flex;\r\n    padding-top: 40px;\r\n}\r\n\r\n.game-container {\r\n    display: flex;\r\n    width: 100%;\r\n    height: calc(100vh - 68px);\r\n}\r\n\r\n.side-panel {\r\n    width: 20%;\r\n    padding: 20px;\r\n    background-color: #fff;\r\n    box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n    overflow-y: auto;\r\n}\r\n\r\n.left-panel {\r\n    order: 1;\r\n}\r\n\r\n.right-panel {\r\n    order: 3;\r\n}\r\n\r\n.center-panel {\r\n    flex: 1;\r\n    order: 2;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    padding: 25px;\r\n}\r\n\r\n.game-info {\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.hp-container {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.hp-bar {\r\n    width: 100%;\r\n    height: 20px;\r\n    background-color: #e0e0e0;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n}\r\n\r\n.hp-fill {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #4CAF50;\r\n    transition: width 0.5s ease-in-out;\r\n}\r\n\r\n.turn-info {\r\n    font-size: 1.2em;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    margin-top: 20px;\r\n}\r\n\r\n.element-info {\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    margin-top: 20px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.element-info ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\n.element-info li {\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.element-relationship {\r\n    display: inline-block;\r\n    padding: 2px 5px;\r\n    border-radius: 3px;\r\n    margin: 2px;\r\n    font-weight: bold;\r\n}\r\n\r\n\r\n.computer-cards, .player-cards {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: nowrap;\r\n}\r\n\r\n.game-board {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex: 1;\r\n}\r\n\r\n@keyframes borderGradient {\r\n    0% {\r\n        border-color: #ff0000;\r\n        box-shadow: 0 0 10px #ff0000;\r\n    }\r\n    25% {\r\n        border-color: #00ff00;\r\n        box-shadow: 0 0 10px #00ff00;\r\n    }\r\n    50% {\r\n        border-color: #0000ff;\r\n        box-shadow: 0 0 10px #0000ff;\r\n    }\r\n    75% {\r\n        border-color: #ff00ff;\r\n        box-shadow: 0 0 10px #ff00ff;\r\n    }\r\n    100% {\r\n        border-color: #ff0000;\r\n        box-shadow: 0 0 10px #ff0000;\r\n    }\r\n}\r\n\r\n@keyframes shimmer {\r\n    0% {\r\n        border-image: linear-gradient(45deg, #ff0000, #00ff00, #0000ff, #ff00ff) 1;\r\n    }\r\n    100% {\r\n        border-image: linear-gradient(45deg, #ff00ff, #0000ff, #00ff00, #ff0000) 1;\r\n    }\r\n}\r\n\r\n.player-field, .computer-field {\r\n    width: 45%;\r\n    height: 250px;\r\n    background-color: #fff;\r\n    border: 2px solid;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    animation: borderGradient 3s infinite, shimmer 6s infinite linear;\r\n    border-image-slice: 1;\r\n}\r\n\r\n.card {\r\n    width: 7.5rem;\r\n    height: 11.25rem;\r\n    padding: 0.625rem;\r\n    margin: 0.625rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    font-size: 0.75rem;\r\n    border: 1px solid #ccc;\r\n    border-radius: 0.3125rem;\r\n    cursor: pointer;\r\n    box-shadow: 0 0.125rem 0.3125rem rgba(0,0,0,0.1);\r\n    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n}\r\n\r\n.card:hover {\r\n    transform: translateY(-0.125rem);\r\n    box-shadow: 0 0.25rem 0.5rem rgba(0,0,0,0.2);\r\n}\r\n\r\n.card-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    margin-bottom: 0.375rem;\r\n}\r\n\r\n.card-name {\r\n    font-size: 1.07em;\r\n    margin: 0;\r\n    max-width: 70%;\r\n    word-wrap: break-word;\r\n    line-height: 1.2;\r\n}\r\n\r\n.element-icon {\r\n    font-size: 1.4em;\r\n}\r\n\r\n.card-body {\r\n    flex-grow: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n}\r\n\r\n.stat {\r\n    font-size: 1.1em;\r\n    margin: 0.25rem 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n\r\n.stat-label {\r\n    font-weight: bold;\r\n}\r\n\r\n.stat-value {\r\n    font-weight: normal;\r\n}\r\n\r\n.card-footer {\r\n    margin-top: 0.375rem;\r\n}\r\n\r\n.description {\r\n    font-size: 1.1em;\r\n    text-align: left;\r\n    line-height: 1.2;\r\n}\r\n\r\n.card .element-icon.feuer { color: #fff; }\r\n.card .element-icon.wasser { color: #fff; }\r\n.card .element-icon.pflanze { color: #000; }\r\n.card .element-icon.elektro { color: #000; }\r\n.card .element-icon.erde { color: #fff; }\r\n.card .element-icon.eis { color: #000; }\r\n.card .element-icon.luft { color: #000; }\r\n\r\n.card.premium-design-1 .element-icon.feuer { color: #fff5f5; }\r\n.card.premium-design-1 .element-icon.wasser { color: #f0f8ff; }\r\n.card.premium-design-1 .element-icon.pflanze { color: #e0ffe0; }\r\n.card.premium-design-1 .element-icon.elektro { color: #804000; }\r\n.card.premium-design-1 .element-icon.erde { color: #ffcccb; }\r\n.card.premium-design-1 .element-icon.eis { color: #1e3d59; }\r\n.card.premium-design-1 .element-icon.luft { color: #4169e1; }\r\n\r\n.card.premium-design-2 .element-icon.feuer { color: #fff5f5; }\r\n.card.premium-design-2 .element-icon.wasser { color: #f0f8ff; }\r\n.card.premium-design-2 .element-icon.pflanze { color: #e0ffe0; }\r\n.card.premium-design-2 .element-icon.elektro { color: #804000; }\r\n.card.premium-design-2 .element-icon.erde { color: #ffcccb; }\r\n.card.premium-design-2 .element-icon.eis { color: #1e3d59; }\r\n.card.premium-design-2 .element-icon.luft { color: #4169e1; }\r\n\r\n.card.premium-design-3 .element-icon.feuer { color: #8b0000; }\r\n.card.premium-design-3 .element-icon.wasser { color: #00008b; }\r\n.card.premium-design-3 .element-icon.pflanze { color: #006400; }\r\n.card.premium-design-3 .element-icon.elektro { color: #ff8c00; }\r\n.card.premium-design-3 .element-icon.erde { color: #8b4513; }\r\n.card.premium-design-3 .element-icon.eis { color: #4682b4; }\r\n.card.premium-design-3 .element-icon.luft { color: #4169e1; }\r\n\r\n#battle-log {\r\n    height: calc(100% - 40px);\r\n    overflow-y: auto;\r\n    padding: 10px;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.battle-log-entry {\r\n    margin-bottom: 20px;\r\n    padding: 15px;\r\n    border-radius: 5px;\r\n    background-color: #f9f9f9;\r\n    border: 1px solid #ddd;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    white-space: pre-line;\r\n    font-family: 'Courier New', monospace;\r\n}\r\n\r\n.battle-log-entry.player {\r\n    border-left: 4px solid #4CAF50;\r\n}\r\n\r\n.battle-log-entry.computer {\r\n    border-left: 4px solid #f44336;\r\n}\r\n\r\n.damage-indicator {\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    color: red;\r\n    text-shadow: 1px 1px 1px black;\r\n    animation: fadeOut 1s forwards;\r\n    z-index: 10;\r\n}\r\n\r\n@keyframes fadeOut {\r\n    from { opacity: 1; transform: translateY(0) translateX(-50%); }\r\n    to { opacity: 0; transform: translateY(-20px) translateX(-50%); }\r\n}\r\n\r\n\r\n.card.selected {\r\n    transform: scale(1.05);\r\n    box-shadow: 0 0 20px rgba(0,0,0,0.2);\r\n}\r\n\r\n@keyframes cardAttack {\r\n    0% { transform: translateX(0); }\r\n    50% { transform: translateX(20px); }\r\n    100% { transform: translateX(0); }\r\n}\r\n\r\n.attack-animation {\r\n    animation: cardAttack 0.5s ease-in-out;\r\n}\r\n\r\n@keyframes cardDamage {\r\n    0% { transform: translateX(0); }\r\n    25% { transform: translateX(-5px); }\r\n    50% { transform: translateX(5px); }\r\n    75% { transform: translateX(-5px); }\r\n    100% { transform: translateX(0); }\r\n}\r\n\r\n.damage-animation {\r\n    animation: cardDamage 0.5s ease-in-out;\r\n}\r\n\r\n.card.feuer { background-color: #ff6b6b; color: #fff; }\r\n.card.wasser { background-color: #0077be; color: #fff; }\r\n.card.pflanze { background-color: #00ff87; color: #000; }\r\n.card.elektro { background-color: #ffeb3b; color: #000; }\r\n.card.erde { background-color: #a77979; color: #fff; }\r\n.card.eis { background-color: #00c9ff; color: #000; }\r\n.card.luft { background-color: #87cefa; color: #000; }\r\n\r\n.card.premium-design-1.feuer { background: radial-gradient(circle at top left, #ff5f6d, transparent), linear-gradient(135deg, #ff512f, #dd2476); color: #ffebeb; }\r\n.card.premium-design-1.wasser { background: radial-gradient(circle at bottom right, #00bfff, transparent), linear-gradient(135deg, #0077be, #001f3f); color: #e6f7ff; }\r\n.card.premium-design-1.pflanze { background: radial-gradient(circle at top right, #00e676, transparent), linear-gradient(135deg, #00ff87, #009245); color: #d0ffd0; }\r\n.card.premium-design-1.elektro { background: radial-gradient(circle at center, #ffef9f, transparent), linear-gradient(135deg, #ffd700, #f4c542); color: #805000; }\r\n.card.premium-design-1.erde { background: radial-gradient(circle at bottom left, #b5651d, transparent), linear-gradient(135deg, #a77979, #4b3832); color: #ffedcc; }\r\n.card.premium-design-1.eis { background: radial-gradient(circle at center, #00d4ff, transparent), linear-gradient(135deg, #00d4ff, #92fe9d); color: #1e3d59; }\r\n.card.premium-design-1.luft { background: radial-gradient(circle at top left, #87cefa, transparent), linear-gradient(135deg, #87cefa, #f0f8ff); color: #3a5fcd; }\r\n\r\n\r\n\r\n.card.premium-design-2.feuer { background: radial-gradient(circle, #ff6b6b, #ff1e56); color: #fff5f5; }\r\n.card.premium-design-2.wasser { background: radial-gradient(circle, #0077be, #001f3f); color: #f0f8ff; }\r\n.card.premium-design-2.pflanze { background: radial-gradient(circle, #00ff87, #009245); color: #e0ffe0; }\r\n.card.premium-design-2.elektro { background: radial-gradient(circle, #ffeb3b, #f4d03f); color: #804000; }\r\n.card.premium-design-2.erde { background: radial-gradient(circle, #a77979, #4b3832); color: #ffcccb; }\r\n.card.premium-design-2.eis { background: radial-gradient(circle, #00c9ff, #92fe9d); color: #1e3d59; }\r\n.card.premium-design-2.luft { background: radial-gradient(circle, #87cefa, #f0f8ff); color: #4169e1; }\r\n\r\n.card.premium-design-3.feuer { background: linear-gradient(135deg, #dc9593, #e02828); color: #8b0000; }\r\n.card.premium-design-3.wasser { background: linear-gradient(135deg, #e6f3ff, #b3e0ff); color: #00008b; }\r\n.card.premium-design-3.pflanze { background: linear-gradient(135deg, #90ee90, #32cd32); color: #006400; }\r\n.card.premium-design-3.elektro { background: linear-gradient(135deg, #ffff99, #ffeb3b); color: #ff8c00; }\r\n.card.premium-design-3.erde { background: linear-gradient(135deg, #d2b48c, #c19a6b); color: #8b4513; }\r\n.card.premium-design-3.eis { background: linear-gradient(135deg, #b0e0e6, #87ceeb); color: #4682b4; }\r\n.card.premium-design-3.luft { background: linear-gradient(135deg, #f0f8ff, #87ceeb); color: #4169e1; }\r\n\r\n.element-relationship.feuer { background-color: #ff6b6b; color: #fff; }\r\n.element-relationship.wasser { background-color: #0077be; color: #fff; }\r\n.element-relationship.pflanze { background-color: #00ff87; color: #000; }\r\n.element-relationship.elektro { background-color: #ffeb3b; color: #000; }\r\n.element-relationship.erde { background-color: #a77979; color: #fff; }\r\n.element-relationship.eis { background-color: #00c9ff; color: #000; }\r\n.element-relationship.luft { background-color: #87cefa; color: #000; }\r\n\r\n.element-relationship.premium-design-1.feuer { background: linear-gradient(135deg, #ff6b6b, #ff1e56); color: #fff5f5; }\r\n.element-relationship.premium-design-1.wasser { background: linear-gradient(135deg, #0077be, #001f3f); color: #f0f8ff; }\r\n.element-relationship.premium-design-1.pflanze { background: linear-gradient(135deg, #00ff87, #009245); color: #e0ffe0; }\r\n.element-relationship.premium-design-1.elektro { background: linear-gradient(135deg, #ffeb3b, #f4d03f); color: #804000; }\r\n.element-relationship.premium-design-1.erde { background: linear-gradient(135deg, #a77979, #4b3832); color: #ffcccb; }\r\n.element-relationship.premium-design-1.eis { background: linear-gradient(135deg, #00c9ff, #92fe9d); color: #1e3d59; }\r\n.element-relationship.premium-design-1.luft { background: linear-gradient(135deg, #87cefa, #f0f8ff); color: #4169e1; }\r\n\r\n.element-relationship.premium-design-2.feuer { background: radial-gradient(circle, #ff6b6b, #ff1e56); color: #fff5f5; }\r\n.element-relationship.premium-design-2.wasser { background: radial-gradient(circle, #0077be, #001f3f); color: #f0f8ff; }\r\n.element-relationship.premium-design-2.pflanze { background: radial-gradient(circle, #00ff87, #009245); color: #e0ffe0; }\r\n.element-relationship.premium-design-2.elektro { background: radial-gradient(circle, #ffeb3b, #f4d03f); color: #804000; }\r\n.element-relationship.premium-design-2.erde { background: radial-gradient(circle, #a77979, #4b3832); color: #ffcccb; }\r\n.element-relationship.premium-design-2.eis { background: radial-gradient(circle, #00c9ff, #92fe9d); color: #1e3d59; }\r\n.element-relationship.premium-design-2.luft { background: radial-gradient(circle, #87cefa, #f0f8ff); color: #4169e1; }\r\n\r\n.element-relationship.premium-design-3.feuer { background: linear-gradient(135deg, #dc9593, #e02828); color: #8b0000; }\r\n.element-relationship.premium-design-3.wasser { background: linear-gradient(135deg, #e6f3ff, #b3e0ff); color: #00008b; }\r\n.element-relationship.premium-design-3.pflanze { background: linear-gradient(135deg, #90ee90, #32cd32); color: #006400; }\r\n.element-relationship.premium-design-3.elektro { background: linear-gradient(135deg, #ffff99, #ffeb3b); color: #ff8c00; }\r\n.element-relationship.premium-design-3.erde { background: linear-gradient(135deg, #d2b48c, #c19a6b); color: #8b4513; }\r\n.element-relationship.premium-design-3.eis { background: linear-gradient(135deg, #b0e0e6, #87ceeb); color: #4682b4; }\r\n.element-relationship.premium-design-3.luft { background: linear-gradient(135deg, #f0f8ff, #87ceeb); color: #4169e1; }\r\n\r\n\r\n\r\n@media (max-width: 600px) {\r\n    .card {\r\n        width: 80px;\r\n        height: 120px;\r\n        font-size: 10px;\r\n    }\r\n\r\n    .player-field, .computer-field {\r\n        height: 150px;\r\n    }\r\n}\r\n\r\n.form-container {\r\n    background-color: #fff;\r\n    border: 2px solid #4CAF50;\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    margin-top: 20px;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n\r\n.input-group {\r\n    margin-bottom: 20px;\r\n    width: 100%;\r\n}\r\n\r\n.input-group label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    font-weight: bold;\r\n}\r\n\r\n.input-group input,\r\n.input-group select {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n    background-color: #4CAF50;\r\n    width: 100%;\r\n    color: #fff;\r\n    margin: 0;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 25px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease, transform 0.3s ease;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nbutton[type=\"submit\"]:hover {\r\n    background-color: #45a049;\r\n    transform: translateY(-2px);\r\n}\r\n\r\n#showRegister, #showLogin {\r\n    color: #4CAF50;\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n}\r\n\r\n#showRegister:hover, #showLogin:hover {\r\n    color: #45a049;\r\n}\r\n\r\n.nav-buttons .but,\r\n.nav-right .but {\r\n    background-color: #ffffff;\r\n    color: #4CAF50;\r\n    border: none;\r\n    padding: 8px 15px;\r\n    border-radius: 20px;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 5px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.nav-buttons .but:hover,\r\n.nav-right .but:hover {\r\n    background-color: #e8f5e9;\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.nav-buttons .but i,\r\n.nav-right .but i {\r\n    margin-right: 5px;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/src/main/resources/static/game.css b/../Element-Battle-main-public - Kopie/src/main/resources/static/game.css
--- a/../Element-Battle-main-public - Kopie/src/main/resources/static/game.css	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/src/main/resources/static/game.css	(date 1722105048322)
@@ -218,6 +218,7 @@
     font-weight: bold;
     text-align: center;
     margin-top: 20px;
+    display: grid;
 }
 
 .element-info {
Index: ../Element-Battle-main-public - Kopie/src/main/resources/static/game.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>document.addEventListener('DOMContentLoaded', function() {\r\n    updateCardDesign();\r\n    updateElementRelationships();\r\n    const playerField = document.querySelector('.player-field');\r\n    const computerField = document.querySelector('.computer-field');\r\n    const playerCardsContainer = document.querySelector('.player-cards');\r\n    const computerCardsContainer = document.querySelector('.computer-cards');\r\n    const turnInfo = document.getElementById('turn-info');\r\n    const playerHpValue = document.getElementById('player-hp-value');\r\n    const computerHpValue = document.getElementById('computer-hp-value');\r\n    const playerHpBar = document.getElementById('player-hp-bar');\r\n    const computerHpBar = document.getElementById('computer-hp-bar');\r\n    const userInfo = document.getElementById('userInfo');\r\n    const usernameSpan = document.getElementById('username');\r\n    const coinsSpan = document.getElementById('coins');\r\n    const loginButton = document.getElementById('loginButton');\r\n    const registerButton = document.getElementById('registerButton');\r\n\r\n    let playerHP = 25;\r\n    let computerHP = 25;\r\n    let allHeroes = [];\r\n    let playerHand = [];\r\n    let computerHand = [];\r\n    let isPlayerFirstAttacker = true;\r\n    let roundCounter = 1;\r\n\r\n    const battleLog = document.getElementById('battle-log');\r\n\r\n    let isBattleInProgress = false;\r\n\r\n    function loadCoins() {\r\n        const coins = parseInt(localStorage.getItem('coins')) || 0;\r\n        coinsSpan.textContent = coins.toString();\r\n    }\r\n\r\n    window.onload = function() {\r\n        loadCoins();\r\n        updateUserInfo();\r\n    };\r\n\r\n    function updateCoins(amount) {\r\n        const currentCoins = parseInt(localStorage.getItem('coins')) || 0;\r\n        const newCoins = currentCoins + amount;\r\n\r\n        localStorage.setItem('coins', newCoins);\r\n        if (coinsSpan) {\r\n            coinsSpan.textContent = newCoins;\r\n        }\r\n\r\n        const username = localStorage.getItem('username');\r\n        if (username) {\r\n            fetch('/updateCoins', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: username,\r\n                    coins: newCoins\r\n                })\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        console.log('MÃ¼nzen erfolgreich aktualisiert');\r\n                    } else {\r\n                        console.error('Fehler beim Aktualisieren der MÃ¼nzen');\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Fehler beim Senden der Anfrage:', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    function updateUserInfo() {\r\n        const username = localStorage.getItem('username');\r\n        const coins = localStorage.getItem('coins');\r\n        const userInfo = document.getElementById('userInfo');\r\n        const authButtons = document.getElementById('authButtons');\r\n        const usernameSpan = document.getElementById('username');\r\n        const loginButton = document.getElementById('loginButton');\r\n        const registerButton = document.getElementById('registerButton');\r\n        const navButtons = document.querySelector('.nav-buttons');\r\n\r\n        if (username && coins !== null) {\r\n            userInfo.style.display = 'flex';\r\n            usernameSpan.innerHTML = `\r\n            <span class=\"username-text\"><i class=\"fas fa-user\"></i> ${username}</span>\r\n            <span class=\"coins-info\"><i class=\"fas fa-coins\"></i> ${coins}</span>\r\n        `;\r\n\r\n            if (loginButton) loginButton.style.display = 'none';\r\n            if (registerButton) registerButton.style.display = 'none';\r\n\r\n            let logoutButton = document.getElementById('logoutButton');\r\n            if (!logoutButton) {\r\n                logoutButton = document.createElement('button');\r\n                logoutButton.id = 'logoutButton';\r\n                logoutButton.className = 'but logout-button';\r\n                logoutButton.innerHTML = '<i class=\"fas fa-sign-out-alt\"></i> Abmelden';\r\n                logoutButton.style.backgroundColor = '#ff4136';\r\n                logoutButton.addEventListener('click', logout);\r\n                authButtons.insertBefore(logoutButton, authButtons.firstChild);\r\n            }\r\n            logoutButton.style.display = 'inline-block';\r\n\r\n            if (registerButton) {\r\n                registerButton.innerHTML = '<i class=\"fas fa-user\"></i> Account';\r\n                registerButton.onclick = function() {\r\n                    window.location.href = 'account.html';\r\n                };\r\n                registerButton.style.display = 'inline-block';\r\n            }\r\n\r\n            if (navButtons) {\r\n                navButtons.style.position = 'absolute';\r\n                navButtons.style.left = '50%';\r\n                navButtons.style.transform = 'translateX(-50%)';\r\n            }\r\n        } else {\r\n            userInfo.style.display = 'none';\r\n\r\n            if (loginButton) {\r\n                loginButton.style.display = 'inline-block';\r\n                loginButton.innerHTML = '<i class=\"fas fa-sign-in-alt\"></i> Anmelden';\r\n                loginButton.onclick = function() {\r\n                    window.location.href = 'login.html#login';\r\n                };\r\n            }\r\n            if (registerButton) {\r\n                registerButton.style.display = 'inline-block';\r\n                registerButton.innerHTML = '<i class=\"fas fa-user-plus\"></i> Registrieren';\r\n                registerButton.onclick = function() {\r\n                    window.location.href = 'login.html#register';\r\n                };\r\n            }\r\n\r\n            const logoutButton = document.getElementById('logoutButton');\r\n            if (logoutButton) logoutButton.style.display = 'none';\r\n\r\n            if (navButtons) {\r\n                navButtons.style.position = '';\r\n                navButtons.style.left = '';\r\n                navButtons.style.transform = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    updateUserInfo();\r\n\r\n    function logout() {\r\n        localStorage.removeItem('username');\r\n        localStorage.removeItem('coins');\r\n        updateUserInfo();\r\n        window.location.reload();\r\n\r\n    }\r\n\r\n    function selectCard(card, field, nextTurn) {\r\n        if (isBattleInProgress) return;\r\n        isBattleInProgress = true;\r\n\r\n\r\n        field.innerHTML = '';\r\n        const selectedCard = createCard(card.name, card.HP, card.Damage, card.type, card.extra);\r\n        selectedCard.classList.add('selected');\r\n        field.appendChild(selectedCard);\r\n\r\n        if (field === playerField) {\r\n            playerHand = playerHand.filter(c => c.name !== card.name);\r\n            displayPlayerCards();\r\n        } else {\r\n            computerHand = computerHand.filter(c => c.name !== card.name);\r\n            displayComputerCards();\r\n        }\r\n\r\n        selectedCard.style.animation = 'none';\r\n        selectedCard.offsetHeight;\r\n        selectedCard.style.animation = null;\r\n        selectedCard.classList.add('attack-animation');\r\n\r\n        setTimeout(async () => {\r\n            selectedCard.classList.remove('attack-animation');\r\n            if (playerField.querySelector('.card') && computerField.querySelector('.card')) {\r\n                await battle();\r\n            } else {\r\n                isBattleInProgress = false;\r\n                nextTurn();\r\n            }\r\n        }, 500);\r\n    }\r\n    function createConfetti() {\r\n        const confettiCount = 300;\r\n        const confettiContainer = document.createElement('div');\r\n        confettiContainer.style.position = 'fixed';\r\n        confettiContainer.style.top = '0';\r\n        confettiContainer.style.left = '0';\r\n        confettiContainer.style.width = '100%';\r\n        confettiContainer.style.height = '100%';\r\n        confettiContainer.style.pointerEvents = 'none';\r\n        confettiContainer.style.zIndex = '9999';\r\n\r\n        for (let i = 0; i < confettiCount; i++) {\r\n            const confetti = document.createElement('div');\r\n            confetti.style.position = 'absolute';\r\n            confetti.style.width = '10px';\r\n            confetti.style.height = '10px';\r\n            confetti.style.backgroundColor = getRandomColor();\r\n            confetti.style.left = Math.random() * 100 + 'vw';\r\n            confetti.style.top = '-10px';\r\n            confetti.style.borderRadius = '50%';\r\n            confetti.style.transform = `rotate(${Math.random() * 360}deg)`;\r\n            confetti.style.animation = `fall ${Math.random() * 3 + 2}s linear`;\r\n            confettiContainer.appendChild(confetti);\r\n        }\r\n\r\n        document.body.appendChild(confettiContainer);\r\n\r\n        setTimeout(() => {\r\n            document.body.removeChild(confettiContainer);\r\n        }, 5000);\r\n    }\r\n\r\n    function getRandomColor() {\r\n        const letters = '0123456789ABCDEF';\r\n        let color = '#';\r\n        for (let i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    }\r\n\r\n    async function battle() {\r\n        const playerCard = playerField.querySelector('.card');\r\n        const computerCard = computerField.querySelector('.card');\r\n\r\n        if (!playerCard || !computerCard) {\r\n            console.error('Cards not found in the fields');\r\n            isBattleInProgress = false;\r\n            endTurn();\r\n            return;\r\n        }\r\n\r\n        const playerCardName = playerCard.querySelector('h3').textContent;\r\n        const computerCardName = computerCard.querySelector('h3').textContent;\r\n\r\n        const playerCardData = allHeroes.find(card => card.name === playerCardName);\r\n        const computerCardData = allHeroes.find(card => card.name === computerCardName);\r\n\r\n        if (!playerCardData || !computerCardData) {\r\n            console.error('Card data not found');\r\n            isBattleInProgress = false;\r\n            endTurn();\r\n            return;\r\n        }\r\n\r\n        let firstAttacker, secondAttacker;\r\n        if (isPlayerFirstAttacker) {\r\n            firstAttacker = { card: { ...playerCardData }, name: 'Spieler', field: playerField };\r\n            secondAttacker = { card: { ...computerCardData }, name: 'Computer', field: computerField };\r\n        } else {\r\n            firstAttacker = { card: { ...computerCardData }, name: 'Computer', field: computerField };\r\n            secondAttacker = { card: { ...playerCardData }, name: 'Spieler', field: playerField };\r\n        }\r\n\r\n        console.log('Battle started between:', firstAttacker, secondAttacker);\r\n\r\n        firstAttacker.field.querySelector('.card').style.zIndex = '10';\r\n        secondAttacker.field.querySelector('.card').style.zIndex = '5';\r\n\r\n        const firstDamage = calculateDamage(firstAttacker.card, secondAttacker.card);\r\n        const firstDirectDamage = Math.max(0, firstDamage - secondAttacker.card.HP);\r\n        const isFirstAttackEffective = calculateDamageMultiplier(firstAttacker.card.type, secondAttacker.card.type) > 1;\r\n        const isFirstAttackEffective2 = calculateDamageMultiplier(firstAttacker.card.type, secondAttacker.card.type);\r\n        displayBattleResult(firstAttacker.card, secondAttacker.card, firstDamage, firstDirectDamage, firstAttacker.name, roundCounter, isFirstAttackEffective2);\r\n\r\n        await showDamage(\r\n            firstAttacker.field,\r\n            secondAttacker.field,\r\n            firstDamage,\r\n            isFirstAttackEffective,\r\n            (damage) => {\r\n                secondAttacker.card.HP = Math.max(0, secondAttacker.card.HP - damage);\r\n                updateCardHP(secondAttacker.field, secondAttacker.card.HP);\r\n\r\n                if (firstDirectDamage > 0) {\r\n                    if (secondAttacker.name === 'Spieler') {\r\n                        playerHP = Math.max(0, playerHP - firstDirectDamage);\r\n                        showDirectDamageMessage('Spieler', firstDirectDamage);\r\n                    } else {\r\n                        computerHP = Math.max(0, computerHP - firstDirectDamage);\r\n                        showDirectDamageMessage('Computer', firstDirectDamage);\r\n                    }\r\n                    updateHP();\r\n                }\r\n            }\r\n        );\r\n\r\n        await new Promise(resolve => setTimeout(resolve, 800));\r\n\r\n        if (playerHP <= 0 || computerHP <= 0) {\r\n            await endBattleRound(true);\r\n            return;\r\n        }\r\n\r\n        if (secondAttacker.card.HP > 0) {\r\n            secondAttacker.field.querySelector('.card').style.zIndex = '10';\r\n            firstAttacker.field.querySelector('.card').style.zIndex = '5';\r\n\r\n            const secondDamage = calculateDamage(secondAttacker.card, firstAttacker.card);\r\n            const secondDirectDamage = Math.max(0, secondDamage - firstAttacker.card.HP);\r\n            const isSecondAttackEffective = calculateDamageMultiplier(secondAttacker.card.type, firstAttacker.card.type) > 1;\r\n            const isSecondAttackEffective2 = calculateDamageMultiplier(secondAttacker.card.type, firstAttacker.card.type);\r\n            displayBattleResult(secondAttacker.card, firstAttacker.card, secondDamage, secondDirectDamage, secondAttacker.name, roundCounter, isSecondAttackEffective2);\r\n\r\n            await showDamage(\r\n                secondAttacker.field,\r\n                firstAttacker.field,\r\n                secondDamage,\r\n                isSecondAttackEffective,\r\n                (damage) => {\r\n                    firstAttacker.card.HP = Math.max(0, firstAttacker.card.HP - damage);\r\n                    updateCardHP(firstAttacker.field, firstAttacker.card.HP);\r\n\r\n                    if (secondDirectDamage > 0) {\r\n                        if (firstAttacker.name === 'Spieler') {\r\n                            playerHP = Math.max(0, playerHP - secondDirectDamage);\r\n                            showDirectDamageMessage('Spieler', secondDirectDamage);\r\n                        } else {\r\n                            computerHP = Math.max(0, computerHP - secondDirectDamage);\r\n                            showDirectDamageMessage('Computer', secondDirectDamage);\r\n                        }\r\n                        updateHP();\r\n                    }\r\n                }\r\n            );\r\n            await new Promise(resolve => setTimeout(resolve, 500));\r\n        }\r\n\r\n        await endBattleRound(false);\r\n    }\r\n\r\n    async function endBattleRound(isQuickEnd) {\r\n        const fadeOutDuration = isQuickEnd ? 1000 : 1000;\r\n\r\n        await Promise.all([\r\n            anime({\r\n                targets: playerField.querySelector('.card'),\r\n                opacity: 0,\r\n                scale: 0.8,\r\n                duration: fadeOutDuration,\r\n                easing: 'easeOutQuad'\r\n            }).finished,\r\n            anime({\r\n                targets: computerField.querySelector('.card'),\r\n                opacity: 0,\r\n                scale: 0.8,\r\n                duration: fadeOutDuration,\r\n                easing: 'easeOutQuad'\r\n            }).finished\r\n        ]);\r\n\r\n        playerField.innerHTML = '';\r\n        computerField.innerHTML = '';\r\n\r\n        isPlayerFirstAttacker = !isPlayerFirstAttacker;\r\n        roundCounter++;\r\n\r\n        isBattleInProgress = false;\r\n        console.log('Battle ended, starting next turn.');\r\n        endTurn();\r\n    }\r\n\r\n\r\n    function endTurn() {\r\n        if (playerHP <= 0 || computerHP <= 0) {\r\n            endGame();\r\n            return;\r\n        }\r\n\r\n        if (playerHand.length === 0) {\r\n            refillPlayerHand();\r\n        }\r\n        if (computerHand.length === 0) {\r\n            refillComputerHand();\r\n        }\r\n        displayPlayerCards();\r\n        displayComputerCards();\r\n\r\n        const firstAttacker = isPlayerFirstAttacker ? \"Spieler\" : \"Computer\";\r\n        turnInfo.textContent = `WÃ¤hle deine nÃ¤chste Karte. ${firstAttacker} greift zuerst an.`;\r\n\r\n        playerCardsContainer.style.pointerEvents = 'auto';\r\n        computerCardsContainer.style.pointerEvents = 'auto';\r\n    }\r\n\r\n    function showDirectDamageMessage(player, damage) {\r\n        const message = `${player} hat ${damage} HP verloren!`;\r\n        const color = player === 'Spieler' ? 'red' : 'blue';\r\n\r\n        const damageMessage = document.createElement('div');\r\n        damageMessage.textContent = message;\r\n        damageMessage.style.position = 'absolute';\r\n        damageMessage.style.top = '50%';\r\n        damageMessage.style.left = '50%';\r\n        damageMessage.style.transform = 'translate(-50%, -50%)';\r\n        damageMessage.style.fontSize = '20px';\r\n        damageMessage.style.fontWeight = 'bold';\r\n        damageMessage.style.color = color;\r\n        damageMessage.style.backgroundColor = 'rgba(255, 255, 255, 0.8)';\r\n        damageMessage.style.padding = '10px 20px';\r\n        damageMessage.style.borderRadius = '10px';\r\n        damageMessage.style.opacity = '0';\r\n        damageMessage.style.transition = 'opacity 0.5s ease-in-out';\r\n        damageMessage.style.zIndex = '1000';\r\n\r\n        document.body.appendChild(damageMessage);\r\n        setTimeout(() => {\r\n            damageMessage.style.opacity = '1';\r\n        }, 100);\r\n\r\n        setTimeout(() => {\r\n            damageMessage.style.opacity = '0';\r\n        }, 1500);\r\n\r\n        setTimeout(() => {\r\n            document.body.removeChild(damageMessage);\r\n        }, 2000);\r\n    }\r\n\r\n    function calculateDamage(attacker, defender) {\r\n        const damageMultiplier = calculateDamageMultiplier(attacker.type, defender.type);\r\n        return Math.round(attacker.Damage * damageMultiplier);\r\n    }\r\n\r\n    function displayBattleResult(attackerCard, defenderCard, damage, directDamage, attacker, roundNumber, isEffective) {\r\n        const resultElement = document.createElement('div');\r\n        resultElement.className = 'battle-log-entry';\r\n        let resultText = '';\r\n\r\n        resultText += `Runde ${roundNumber}: ${attacker} ist am Zug\\n\\n`;\r\n\r\n        resultText += `${attackerCard.name} (${attackerCard.HP} HP)\\ngreift\\n${defenderCard.name} (${defenderCard.HP} HP) an.\\n\\n`;\r\n\r\n        let effectivenessText = '';\r\n        if (isEffective > 1) {\r\n            effectivenessText = 'Der Angriff ist sehr effektiv!';\r\n        } else if (isEffective < 1) {\r\n            effectivenessText = 'Der Angriff ist nicht sehr effektiv...';\r\n        }\r\n        if (effectivenessText) {\r\n            resultText += effectivenessText + '\\n\\n';\r\n        }\r\n\r\n        resultText += `${defenderCard.name} erleidet ${damage} Schaden.\\n\\n`;\r\n\r\n        // Ergebnis\r\n        const remainingHP = Math.max(0, defenderCard.HP - damage);\r\n        if (remainingHP > 0) {\r\n            resultText += `${defenderCard.name} hat noch ${remainingHP} HP Ã¼brig.\\n`;\r\n        } else {\r\n            resultText += `${defenderCard.name} wurde besiegt!\\n`;\r\n        }\r\n\r\n        if (directDamage > 0) {\r\n            resultText += `\\nZusÃ¤tzlich erleidet der ${attacker === 'Spieler' ? 'Computer' : 'Spieler'}\\n${directDamage} direkten Schaden!\\n`;\r\n        }\r\n\r\n        resultElement.innerText = resultText;\r\n        battleLog.appendChild(resultElement);\r\n        battleLog.scrollTop = battleLog.scrollHeight;\r\n    }\r\n\r\n    function createCard(name, hp, damage, element, description) {\r\n        const card = document.createElement('div');\r\n        card.classList.add('card', element.toLowerCase());\r\n\r\n        const activeDesign = localStorage.getItem('activeCardDesign');\r\n        if (activeDesign && activeDesign !== 'default') {\r\n            card.classList.add(`premium-design-${activeDesign}`);\r\n        }\r\n\r\n        const elementIcon = getElementIcon(element);\r\n\r\n        card.innerHTML = `\r\n            <div class=\"card-header\">\r\n                <h3 class=\"card-name\">${name}</h3>\r\n                <i class=\"${elementIcon} element-icon ${element.toLowerCase()} ${activeDesign ? `premium-design-${activeDesign}` : ''}\"></i>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <p class=\"stat\"><span class=\"stat-label\">HP:</span> <span class=\"stat-value\">${hp}</span></p>\r\n                <p class=\"stat\"><span class=\"stat-label\">Damage:</span> <span class=\"stat-value\">${damage}</span></p>\r\n                <p class=\"stat\"><span class=\"stat-label\">Element:</span> <span class=\"stat-value\">${element}</span></p>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <p class=\"description\">${description}</p>\r\n            </div>\r\n            `;\r\n        card.draggable = true;\r\n        return card;\r\n    }\r\n\r\n    function getElementIcon(element) {\r\n        const icons = {\r\n            'Feuer': 'fas fa-fire',\r\n            'Wasser': 'fas fa-tint',\r\n            'Pflanze': 'fas fa-leaf',\r\n            'Elektro': 'fas fa-bolt',\r\n            'Erde': 'fas fa-mountain',\r\n            'Luft': 'fas fa-wind',\r\n            'Eis': 'far fa-snowflake'\r\n        };\r\n        return icons[element] || 'fas fa-question';\r\n    }\r\n\r\n    function displayPlayerCards() {\r\n        playerCardsContainer.innerHTML = '';\r\n        playerHand.forEach(card => {\r\n            const cardElement = createCard(card.name, card.HP, card.Damage, card.type, card.extra);\r\n            cardElement.addEventListener('click', () => selectCard(card, playerField, computerTurn));\r\n\r\n            cardElement.addEventListener('dragstart', dragStart);\r\n            cardElement.addEventListener('dragend', dragEnd);\r\n\r\n            playerCardsContainer.appendChild(cardElement);\r\n        });\r\n        updateCardDesign();\r\n    }\r\n\r\n    function displayComputerCards() {\r\n        computerCardsContainer.innerHTML = '';\r\n        computerHand.forEach(() => {\r\n            const cardElement = createCard('-', '-', '-', '-', '-');\r\n            cardElement.style.backgroundImage = 'url(\"KartenrÃ¼ckseite.png\")';\r\n            cardElement.style.backgroundSize = 'cover';\r\n            computerCardsContainer.appendChild(cardElement);\r\n        });\r\n        updateCardDesign();\r\n    }\r\n\r\n    function updateCardDesign() {\r\n        const activeDesign = localStorage.getItem('activeCardDesign');\r\n        const allCards = document.querySelectorAll('.card');\r\n        const allElementRelationships = document.querySelectorAll('.element-relationship');\r\n\r\n        allCards.forEach(card => {\r\n            card.classList.remove('premium-design-1', 'premium-design-2', 'premium-design-3');\r\n            if (activeDesign && activeDesign !== 'default') {\r\n                card.classList.add(`premium-design-${activeDesign}`);\r\n            }\r\n        });\r\n\r\n        allElementRelationships.forEach(element => {\r\n            element.classList.remove('premium-design-1', 'premium-design-2', 'premium-design-3');\r\n            if (activeDesign && activeDesign !== 'default') {\r\n                element.classList.add(`premium-design-${activeDesign}`);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    function updateElementRelationships() {\r\n        const elementInfo = document.querySelector('.element-info');\r\n        if (elementInfo) {\r\n            const elements = elementInfo.querySelectorAll('span');\r\n            elements.forEach(element => {\r\n                const elementType = element.textContent.toLowerCase();\r\n                element.className = `element-relationship ${elementType}`;\r\n                if (localStorage.getItem('premiumCardDesign') === 'active') {\r\n                    element.classList.add('premium-card-design');\r\n                } else {\r\n                    element.classList.remove('premium-card-design');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function computerTurn() {\r\n        if (computerHand.length === 0) {\r\n            refillComputerHand();\r\n        }\r\n        const randomCard = computerHand[Math.floor(Math.random() * computerHand.length)];\r\n        selectCard(randomCard, computerField, () => {\r\n            turnInfo.textContent = 'WÃ¤hle deine nÃ¤chste Karte.';\r\n        });\r\n    }\r\n\r\n    function calculateDamageMultiplier(attackerElement, defenderElement) {\r\n        const strengths = {\r\n            'Feuer': 'Pflanze',\r\n            'Wasser': 'Feuer',\r\n            'Pflanze': 'Wasser',\r\n            'Elektro': 'Wasser',\r\n            'Erde': 'Elektro',\r\n            'Luft': 'Erde',\r\n            'Eis' : 'Luft'\r\n        };\r\n\r\n        if (strengths[attackerElement] === defenderElement) {\r\n            return 1.5;\r\n        } else if (strengths[defenderElement] === attackerElement) {\r\n            return 0.5;\r\n        }\r\n        return 1;\r\n    }\r\n\r\n\r\n    function updateHP() {\r\n        playerHP = Math.max(0, playerHP);\r\n        computerHP = Math.max(0, computerHP);\r\n        playerHpValue.textContent = String(playerHP);\r\n        computerHpValue.textContent = String(computerHP);\r\n        playerHpBar.style.width = `${(playerHP / 25) * 100}%`;\r\n        computerHpBar.style.width = `${(computerHP / 25) * 100}%`;\r\n    }\r\n    function updateCardHP(field, newHP) {\r\n        const hpElement = field.querySelector('.card-body .stat:nth-child(1) .stat-value');\r\n        if (hpElement) {\r\n            hpElement.textContent = newHP;\r\n        }\r\n    }\r\n\r\n    function endGame() {\r\n        let message;\r\n        let color;\r\n\r\n        if (playerHP <= 0 && computerHP <= 0) {\r\n            message = 'Unentschieden!';\r\n            color = 'blue';\r\n        } else if (playerHP <= 0) {\r\n            message = 'Computer gewinnt!';\r\n            color = 'red';\r\n        } else {\r\n            message = 'Spieler gewinnt!';\r\n            color = 'green';\r\n            setTimeout(() => {\r\n                createConfetti();\r\n                updateCoins(5);\r\n            }, 0);\r\n        }\r\n\r\n        turnInfo.textContent = message;\r\n        playerCardsContainer.innerHTML = '';\r\n        computerCardsContainer.innerHTML = '';\r\n        document.getElementById('computer-field').innerHTML = '';\r\n        document.getElementById('player-field').innerHTML = '';\r\n\r\n        const winMessage = document.createElement('div');\r\n        winMessage.textContent = message;\r\n        winMessage.style.position = 'absolute';\r\n        winMessage.style.top = '50%';\r\n        winMessage.style.left = '50%';\r\n        winMessage.style.transform = 'translate(-50%, -50%)';\r\n        winMessage.style.fontSize = '24px';\r\n        winMessage.style.fontWeight = 'bold';\r\n        winMessage.style.color = color;\r\n        winMessage.style.backgroundColor = 'rgba(255, 255, 255, 0.8)';\r\n        winMessage.style.padding = '10px 20px';\r\n        winMessage.style.borderRadius = '10px';\r\n        winMessage.style.opacity = '0';\r\n        winMessage.style.transition = 'opacity 0.5s ease-in-out';\r\n        winMessage.style.zIndex = '1000';\r\n\r\n        document.body.appendChild(winMessage);\r\n        setTimeout(() => {\r\n            winMessage.style.opacity = '1';\r\n        }, 100);\r\n\r\n        setTimeout(() => {\r\n            winMessage.style.opacity = '0';\r\n        }, 2000);\r\n\r\n        setTimeout(() => {\r\n            document.body.removeChild(winMessage);\r\n        }, 2500);\r\n\r\n        playerCardsContainer.style.pointerEvents = 'none';\r\n        computerCardsContainer.style.pointerEvents = 'none';\r\n\r\n        const restartButton = document.createElement('button');\r\n        restartButton.innerHTML = '<i class=\"fas fa-redo\"></i> Neu starten';\r\n        restartButton.style.margin = '10px 0';\r\n        restartButton.style.padding = '10px 20px';\r\n        restartButton.style.backgroundColor = '#4CAF50';\r\n        restartButton.style.color = '#fff';\r\n        restartButton.style.border = 'none';\r\n        restartButton.style.borderRadius = '25px';\r\n        restartButton.style.cursor = 'pointer';\r\n        restartButton.style.transition = 'background-color 0.3s ease, transform 0.3s ease';\r\n        restartButton.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';\r\n        restartButton.style.display = 'inline-flex';\r\n        restartButton.style.alignItems = 'center';\r\n        restartButton.style.justifyContent = 'center';\r\n        restartButton.style.fontSize = '16px';\r\n        restartButton.style.fontWeight = 'bold';\r\n\r\n        restartButton.addEventListener('mouseover', function() {\r\n            this.style.backgroundColor = '#45a049';\r\n            this.style.transform = 'scale(1.05)';\r\n        });\r\n        restartButton.addEventListener('mouseout', function() {\r\n            this.style.backgroundColor = '#4CAF50';\r\n            this.style.transform = 'scale(1)';\r\n        });\r\n        restartButton.addEventListener('click', restartGame);\r\n\r\n        const icon = restartButton.querySelector('i');\r\n        icon.style.marginRight = '8px';\r\n\r\n        turnInfo.appendChild(restartButton);\r\n    }\r\n\r\n    function restartGame() {\r\n        playerHP = 25;\r\n        computerHP = 25;\r\n        updateHP();\r\n        playerHand = [];\r\n        computerHand = [];\r\n        playerCardsContainer.style.pointerEvents = 'auto';\r\n        computerCardsContainer.style.pointerEvents = 'auto';\r\n        initializeGame();\r\n        turnInfo.textContent = 'Neues Spiel gestartet. WÃ¤hle deine erste Karte.';\r\n        roundCounter = 1;\r\n        battleLog.innerHTML = '';\r\n    }\r\n\r\n    function refillPlayerHand() {\r\n        const remainingHeroes = allHeroes.filter(hero => !playerHand.includes(hero) && !computerHand.includes(hero));\r\n        shuffleArray(remainingHeroes);\r\n        playerHand = remainingHeroes.slice(0, 5);\r\n    }\r\n\r\n    function refillComputerHand() {\r\n        const remainingHeroes = allHeroes.filter(hero => !playerHand.includes(hero) && !computerHand.includes(hero));\r\n        shuffleArray(remainingHeroes);\r\n        computerHand = remainingHeroes.slice(0, 5);\r\n    }\r\n\r\n    function shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n\r\n    async function showDamage(attackerField, defenderField, damage, isEffective, updateHP) {\r\n        const attackerCard = attackerField.querySelector('.card');\r\n        const defenderCard = defenderField.querySelector('.card');\r\n        if (!attackerCard || !defenderCard) return;\r\n\r\n        const defenderCardBody = defenderCard.querySelector('.card-body');\r\n        if (!defenderCardBody) return;\r\n\r\n        attackerCard.style.zIndex = '10';\r\n        defenderCard.style.zIndex = '5';\r\n\r\n        await anime({\r\n            targets: attackerCard,\r\n            scale: 1.2,\r\n            duration: 300,\r\n            easing: 'easeOutQuad'\r\n        }).finished;\r\n\r\n        const originalPosition = attackerCard.getBoundingClientRect();\r\n        const targetPosition = defenderCard.getBoundingClientRect();\r\n\r\n        const moveX = targetPosition.left - originalPosition.left;\r\n        const moveY = targetPosition.top - originalPosition.top;\r\n\r\n        await anime({\r\n            targets: attackerCard,\r\n            translateX: moveX,\r\n            translateY: moveY,\r\n            duration: 500,\r\n            easing: 'easeInOutQuad'\r\n        }).finished;\r\n\r\n\r\n        if (isEffective) {\r\n            await showElementalExplosion(attackerCard, defenderCard, 0.5);\r\n        }\r\n\r\n        updateHP(damage);\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            const damageElement = document.createElement('div');\r\n            damageElement.classList.add('damage-indicator');\r\n            damageElement.textContent = `-${damage}`;\r\n\r\n            const randomX = Math.random() * 100 - 50;\r\n            const randomY = Math.random() * 100 - 50;\r\n\r\n            damageElement.style.position = 'absolute';\r\n            damageElement.style.top = `calc(50% + ${randomY}px)`;\r\n            damageElement.style.left = `calc(50% + ${randomX}px)`;\r\n            damageElement.style.transform = 'translate(-50%, -50%)';\r\n            damageElement.style.opacity = '0';\r\n            damageElement.style.fontSize = '24px';\r\n            damageElement.style.fontWeight = 'bold';\r\n            damageElement.style.color = isEffective ? 'yellow' : 'red';\r\n            damageElement.style.textShadow = '2px 2px 4px rgba(0,0,0,0.5)';\r\n            damageElement.style.zIndex = '15';\r\n\r\n            defenderCardBody.appendChild(damageElement);\r\n\r\n            anime({\r\n                targets: damageElement,\r\n                opacity: [0, 1, 0],\r\n                translateY: '-=30',\r\n                duration: 2000,\r\n                easing: 'easeOutQuad',\r\n                delay: i * 100,\r\n                complete: () => damageElement.remove()\r\n            });\r\n        }\r\n\r\n        await anime({\r\n            targets: document.body,\r\n            translateX: [\r\n                {value: -10},\r\n                {value: 10},\r\n                {value: -10},\r\n                {value: 10},\r\n                {value: 0}\r\n            ],\r\n            duration: 500,\r\n            easing: 'easeInOutQuad'\r\n        }).finished;\r\n\r\n        await anime({\r\n            targets: attackerCard,\r\n            translateX: 0,\r\n            translateY: 0,\r\n            scale: 1,\r\n            duration: 500,\r\n            easing: 'easeOutQuad'\r\n        }).finished;\r\n\r\n        attackerCard.style.zIndex = '';\r\n        defenderCard.style.zIndex = '';\r\n    }\r\n\r\n    function showElementalExplosion(attackerCard, defenderCard, speedFactor = 1) {\r\n        return new Promise((resolve) => {\r\n            const container = document.createElement('div');\r\n            container.style.position = 'fixed';\r\n            container.style.top = '0';\r\n            container.style.left = '0';\r\n            container.style.width = '100%';\r\n            container.style.height = '100%';\r\n            container.style.pointerEvents = 'none';\r\n            container.style.zIndex = '1000';\r\n            document.body.appendChild(container);\r\n\r\n            const adjustDuration = (duration) => duration * speedFactor;\r\n\r\n            anime({\r\n                targets: attackerCard,\r\n                scale: 1.2,\r\n                duration: adjustDuration(300),\r\n                easing: 'easeOutQuad',\r\n                complete: () => {\r\n                    const flash = document.createElement('div');\r\n                    flash.style.position = 'absolute';\r\n                    flash.style.top = '0';\r\n                    flash.style.left = '0';\r\n                    flash.style.width = '100%';\r\n                    flash.style.height = '100%';\r\n                    flash.style.backgroundColor = 'white';\r\n                    flash.style.opacity = '0';\r\n                    attackerCard.appendChild(flash);\r\n\r\n                    anime({\r\n                        targets: flash,\r\n                        opacity: [0, 1, 0],\r\n                        duration: adjustDuration(300),\r\n                        easing: 'easeOutQuad',\r\n                        complete: () => {\r\n                            flash.remove();\r\n                            createElementalSpheres();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            function createElementalSpheres() {\r\n                const elements = ['fire', 'water', 'lightning', 'earth', 'air'];\r\n                const spheres = elements.map(element => {\r\n                    const sphere = document.createElement('div');\r\n                    sphere.classList.add('elemental-sphere', element);\r\n                    sphere.style.position = 'absolute';\r\n                    sphere.style.width = '20px';\r\n                    sphere.style.height = '20px';\r\n                    sphere.style.borderRadius = '50%';\r\n                    sphere.style.opacity = '0';\r\n                    container.appendChild(sphere);\r\n                    return sphere;\r\n                });\r\n\r\n                const attackerRect = attackerCard.getBoundingClientRect();\r\n                const centerX = attackerRect.left + attackerRect.width / 2;\r\n                const centerY = attackerRect.top + attackerRect.height / 2;\r\n\r\n                anime({\r\n                    targets: spheres,\r\n                    translateX: (el, i) => [\r\n                        {value: centerX + Math.cos(i * Math.PI * 2 / 5) * 50},\r\n                        {value: centerX}\r\n                    ],\r\n                    translateY: (el, i) => [\r\n                        {value: centerY + Math.sin(i * Math.PI * 2 / 5) * 50},\r\n                        {value: centerY}\r\n                    ],\r\n                    scale: [0, 1],\r\n                    opacity: [0, 1],\r\n                    duration: adjustDuration(100),\r\n                    easing: 'easeOutQuad',\r\n                    complete: chargeSpheres\r\n                });\r\n            }\r\n\r\n            function chargeSpheres() {\r\n                const spheres = container.querySelectorAll('.elemental-sphere');\r\n                anime({\r\n                    targets: spheres,\r\n                    scale: [1, 1.2, 1],\r\n                    opacity: [1, 0.8, 1],\r\n                    duration: adjustDuration(1000),\r\n                    easing: 'easeInOutQuad',\r\n                    loop: 2,\r\n                    complete: triggerExplosion\r\n                });\r\n            }\r\n\r\n            function triggerExplosion() {\r\n                const explosion = document.createElement('div');\r\n                explosion.style.position = 'absolute';\r\n                explosion.style.top = '50%';\r\n                explosion.style.left = '50%';\r\n                explosion.style.width = '0';\r\n                explosion.style.height = '0';\r\n                explosion.style.borderRadius = '50%';\r\n                explosion.style.backgroundColor = 'white';\r\n                explosion.style.transform = 'translate(-50%, -50%)';\r\n                container.appendChild(explosion);\r\n\r\n                anime({\r\n                    targets: explosion,\r\n                    width: '300%',\r\n                    height: '300%',\r\n                    opacity: [1, 0],\r\n                    duration: adjustDuration(1000),\r\n                    easing: 'easeOutQuad',\r\n                    complete: () => {\r\n                        container.remove();\r\n                        resolve();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    function dragStart(e) {\r\n        e.dataTransfer.setData('text/plain', e.target.querySelector('h3').textContent);\r\n        setTimeout(() => {\r\n            e.target.style.opacity = '0.5';\r\n        }, 0);\r\n    }\r\n\r\n    function dragEnd(e) {\r\n        e.target.style.opacity = '1';\r\n    }\r\n\r\n    playerField.addEventListener('dragover', dragOver);\r\n    playerField.addEventListener('dragenter', dragEnter);\r\n    playerField.addEventListener('dragleave', dragLeave);\r\n    playerField.addEventListener('drop', drop);\r\n\r\n    function dragOver(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    function dragEnter(e) {\r\n        e.preventDefault();\r\n        playerField.classList.add('drag-over');\r\n    }\r\n\r\n    function dragLeave(e) {\r\n        playerField.classList.remove('drag-over');\r\n    }\r\n\r\n    function drop(e) {\r\n        e.preventDefault();\r\n        playerField.classList.remove('drag-over');\r\n        const cardName = e.dataTransfer.getData('text');\r\n        const card = playerHand.find(c => c.name === cardName);\r\n        if (card) {\r\n            selectCard(card, playerField, computerTurn);\r\n        }\r\n    }\r\n\r\n    function initializeDragAndDrop() {\r\n        const playerCards = document.querySelectorAll('.player-card');\r\n        playerCards.forEach(card => {\r\n            card.setAttribute('draggable', true);\r\n            card.addEventListener('dragstart', dragStart);\r\n            card.addEventListener('dragend', dragEnd);\r\n        });\r\n\r\n        playerField.addEventListener('dragover', dragOver);\r\n        playerField.addEventListener('dragenter', dragEnter);\r\n        playerField.addEventListener('dragleave', dragLeave);\r\n        playerField.addEventListener('drop', drop);\r\n    }\r\n\r\n    function initializeGame() {\r\n        fetch('/heroshow')\r\n            .then(response => response.json())\r\n            .then(heroes => {\r\n                allHeroes = heroes;\r\n                playerHand = allHeroes.sort(() => 0.5 - Math.random()).slice(0, 5);\r\n                computerHand = allHeroes.sort(() => 0.5 - Math.random()).slice(0, 5);\r\n                displayPlayerCards();\r\n                displayComputerCards();\r\n                updateHP();\r\n                isPlayerFirstAttacker = true;\r\n                turnInfo.textContent = 'Neues Spiel gestartet. WÃ¤hle deine erste Karte.';\r\n                updateUserInfo();\r\n                initializeDragAndDrop();\r\n            })\r\n            .catch(error => console.error('Error:', error));\r\n    }\r\n\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n    .drag-over {\r\n        border: 2px dashed #000;\r\n        background-color: grey;\r\n    }\r\n`;\r\n    document.head.appendChild(style);\r\n\r\n    const backButton = document.getElementById('backbutton');\r\n    backButton.addEventListener('click', function() {\r\n        window.location.href = 'index.html';\r\n    });\r\n\r\n    initializeGame();\r\n});\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/src/main/resources/static/game.js b/../Element-Battle-main-public - Kopie/src/main/resources/static/game.js
--- a/../Element-Battle-main-public - Kopie/src/main/resources/static/game.js	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/src/main/resources/static/game.js	(date 1722142596465)
@@ -10,11 +10,9 @@
     const computerHpValue = document.getElementById('computer-hp-value');
     const playerHpBar = document.getElementById('player-hp-bar');
     const computerHpBar = document.getElementById('computer-hp-bar');
-    const userInfo = document.getElementById('userInfo');
-    const usernameSpan = document.getElementById('username');
     const coinsSpan = document.getElementById('coins');
-    const loginButton = document.getElementById('loginButton');
-    const registerButton = document.getElementById('registerButton');
+    let totalDamageDealt = 0;
+    let totalDirectDamageDealt = 0;
 
     let playerHP = 25;
     let computerHP = 25;
@@ -63,6 +61,7 @@
                 .then(data => {
                     if (data.success) {
                         console.log('MÃ¼nzen erfolgreich aktualisiert');
+                        updateUserInfo();
                     } else {
                         console.error('Fehler beim Aktualisieren der MÃ¼nzen');
                     }
@@ -122,6 +121,16 @@
             userInfo.style.display = 'none';
 
             if (loginButton) {
+                const allCards = document.querySelectorAll('.card');
+                const allElementRelationships = document.querySelectorAll('.element-relationship');
+
+                allCards.forEach(card => {
+                    card.classList.remove('premium-design-1', 'premium-design-2', 'premium-design-3');
+                });
+
+                allElementRelationships.forEach(element => {
+                    element.classList.remove('premium-design-1', 'premium-design-2', 'premium-design-3');
+                });
                 loginButton.style.display = 'inline-block';
                 loginButton.innerHTML = '<i class="fas fa-sign-in-alt"></i> Anmelden';
                 loginButton.onclick = function() {
@@ -275,6 +284,11 @@
         const isFirstAttackEffective2 = calculateDamageMultiplier(firstAttacker.card.type, secondAttacker.card.type);
         displayBattleResult(firstAttacker.card, secondAttacker.card, firstDamage, firstDirectDamage, firstAttacker.name, roundCounter, isFirstAttackEffective2);
 
+        if (firstAttacker.name === 'Spieler') {
+            totalDamageDealt += firstDamage;
+            totalDirectDamageDealt += firstDirectDamage;
+        }
+
         await showDamage(
             firstAttacker.field,
             secondAttacker.field,
@@ -314,6 +328,11 @@
             const isSecondAttackEffective2 = calculateDamageMultiplier(secondAttacker.card.type, firstAttacker.card.type);
             displayBattleResult(secondAttacker.card, firstAttacker.card, secondDamage, secondDirectDamage, secondAttacker.name, roundCounter, isSecondAttackEffective2);
 
+            if (secondAttacker.name === 'Spieler') {
+                totalDamageDealt += secondDamage;
+                totalDirectDamageDealt += secondDirectDamage;
+            }
+
             await showDamage(
                 secondAttacker.field,
                 firstAttacker.field,
@@ -441,7 +460,8 @@
 
         resultText += `Runde ${roundNumber}: ${attacker} ist am Zug\n\n`;
 
-        resultText += `${attackerCard.name} (${attackerCard.HP} HP)\ngreift\n${defenderCard.name} (${defenderCard.HP} HP) an.\n\n`;
+        resultText += `${attackerCard.name} \n(${attackerCard.HP} HP) / (${attackerCard.Damage} Damage)
+        \ngreift\n${defenderCard.name}\n(${defenderCard.HP} HP) / (${defenderCard.Damage} Damage) an.\n\n`;
 
         let effectivenessText = '';
         if (isEffective > 1) {
@@ -455,7 +475,6 @@
 
         resultText += `${defenderCard.name} erleidet ${damage} Schaden.\n\n`;
 
-        // Ergebnis
         const remainingHP = Math.max(0, defenderCard.HP - damage);
         if (remainingHP > 0) {
             resultText += `${defenderCard.name} hat noch ${remainingHP} HP Ã¼brig.\n`;
@@ -621,9 +640,37 @@
         }
     }
 
-    function endGame() {
+    async function updateStats(username, isWinner, damageDealt, directDamageDealt) {
+        try {
+            const response = await fetch('/updateStats', {
+                method: 'POST',
+                headers: {
+                    'Content-Type': 'application/json',
+                },
+                body: JSON.stringify({
+                    username: username,
+                    win: isWinner ? 1 : 0,
+                    lose: isWinner ? 0 : 1,
+                    damage: damageDealt,
+                    directDamage: directDamageDealt
+                }),
+            });
+
+            if (!response.ok) {
+                console.log('Fehler beim Aktualisieren der Statistiken');
+            }
+
+            const result = await response.json();
+            console.log('Statistiken aktualisiert:', result);
+        } catch (error) {
+            console.error('Fehler beim Aktualisieren der Statistiken:', error);
+        }
+    }
+
+    async function endGame() {
         let message;
         let color;
+        let isPlayerWinner = false;
 
         if (playerHP <= 0 && computerHP <= 0) {
             message = 'Unentschieden!';
@@ -631,15 +678,29 @@
         } else if (playerHP <= 0) {
             message = 'Computer gewinnt!';
             color = 'red';
+            isPlayerWinner = false;
         } else {
             message = 'Spieler gewinnt!';
             color = 'green';
+            isPlayerWinner = true;
             setTimeout(() => {
                 createConfetti();
                 updateCoins(5);
             }, 0);
         }
 
+        const playerUsername = localStorage.getItem('username');
+
+        if (playerUsername !== '' || playerUsername !== null) {
+            // Aktualisiere die Statistiken
+            await updateStats(
+                playerUsername,
+                isPlayerWinner,
+                totalDamageDealt,
+                totalDirectDamageDealt
+            );
+        }
+
         turnInfo.textContent = message;
         playerCardsContainer.innerHTML = '';
         computerCardsContainer.innerHTML = '';
@@ -720,7 +781,7 @@
         playerCardsContainer.style.pointerEvents = 'auto';
         computerCardsContainer.style.pointerEvents = 'auto';
         initializeGame();
-        turnInfo.textContent = 'Neues Spiel gestartet. WÃ¤hle deine erste Karte.';
+        turnInfo.textContent = 'WÃ¤hle deine erste Karte. Spieler greift als erstes an!';
         roundCounter = 1;
         battleLog.innerHTML = '';
     }
@@ -986,7 +1047,7 @@
         playerField.classList.add('drag-over');
     }
 
-    function dragLeave(e) {
+    function dragLeave() {
         playerField.classList.remove('drag-over');
     }
 
@@ -1025,7 +1086,7 @@
                 displayComputerCards();
                 updateHP();
                 isPlayerFirstAttacker = true;
-                turnInfo.textContent = 'Neues Spiel gestartet. WÃ¤hle deine erste Karte.';
+                turnInfo.textContent = 'WÃ¤hle deine erste Karte. Spieler greift als erstes an!';
                 updateUserInfo();
                 initializeDragAndDrop();
             })
Index: ../Element-Battle-main-public - Kopie/src/main/resources/static/heroshow.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"de\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <link rel=\"shortcut icon\" type=\"x-icon\" href=\"1721923.png\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Heldenliste</title>\r\n    <link rel=\"stylesheet\" href=\"style.css\">\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\r\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n<div id=\"overlay\"></div>\r\n<header>\r\n    <nav>\r\n        <div class=\"nav-left\">\r\n            <img src=\"oie_91221183fDov5el.png\" alt=\"Logo\" class=\"logo\">\r\n            <h1 class=\"nav-title\">Heldenverwaltung</h1>\r\n        </div>\r\n        <div class=\"nav-buttons\">\r\n            <button onclick=\"window.location.href='index.html'\" id=\"button\" class=\"but\">\r\n                <i class=\"fas fa-arrow-left\"></i>\r\n                <i class=\"fas fa-users\"></i> ZurÃ¼ck zur Heldenverwaltung\r\n            </button>\r\n        </div>\r\n    </nav>\r\n</header>\r\n<main>\r\n    <div id=\"hero-list\">\r\n        <h2>Heldenliste</h2>\r\n        <button id=\"delete-all-button\" class=\"but\">Alles LÃ¶schen & ZurÃ¼cksetzten</button>\r\n        <label for=\"search-bar\"></label><input type=\"text\" id=\"search-bar\" placeholder=\"Suche Helden...\">\r\n        <ul id=\"heroes\"></ul>\r\n    </div>\r\n</main>\r\n<script src=\"heroshow.js\"></script>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/src/main/resources/static/heroshow.html b/../Element-Battle-main-public - Kopie/src/main/resources/static/heroshow.html
--- a/../Element-Battle-main-public - Kopie/src/main/resources/static/heroshow.html	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/src/main/resources/static/heroshow.html	(date 1721302845979)
@@ -4,7 +4,7 @@
     <meta charset="UTF-8">
     <link rel="shortcut icon" type="x-icon" href="1721923.png">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
-    <title>Heldenliste</title>
+    <title>Kartenliste</title>
     <link rel="stylesheet" href="style.css">
     <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
     <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
@@ -15,19 +15,19 @@
     <nav>
         <div class="nav-left">
             <img src="oie_91221183fDov5el.png" alt="Logo" class="logo">
-            <h1 class="nav-title">Heldenverwaltung</h1>
+            <h1 class="nav-title">Kartenverwaltung</h1>
         </div>
         <div class="nav-buttons">
             <button onclick="window.location.href='index.html'" id="button" class="but">
                 <i class="fas fa-arrow-left"></i>
-                <i class="fas fa-users"></i> ZurÃ¼ck zur Heldenverwaltung
+                <i class="fas fa-users"></i> ZurÃ¼ck zur Kartenerstellung
             </button>
         </div>
     </nav>
 </header>
 <main>
     <div id="hero-list">
-        <h2>Heldenliste</h2>
+        <h2>Kartenliste</h2>
         <button id="delete-all-button" class="but">Alles LÃ¶schen & ZurÃ¼cksetzten</button>
         <label for="search-bar"></label><input type="text" id="search-bar" placeholder="Suche Helden...">
         <ul id="heroes"></ul>
Index: LICENSE
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LICENSE b/LICENSE
new file mode 100644
--- /dev/null	(date 1743414963452)
+++ b/LICENSE	(date 1743414963452)
@@ -0,0 +1,674 @@
+                    GNU GENERAL PUBLIC LICENSE
+                       Version 3, 29 June 2007
+
+ Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The GNU General Public License is a free, copyleft license for
+software and other kinds of works.
+
+  The licenses for most software and other practical works are designed
+to take away your freedom to share and change the works.  By contrast,
+the GNU General Public License is intended to guarantee your freedom to
+share and change all versions of a program--to make sure it remains free
+software for all its users.  We, the Free Software Foundation, use the
+GNU General Public License for most of our software; it applies also to
+any other work released this way by its authors.  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+them if you wish), that you receive source code or can get it if you
+want it, that you can change the software or use pieces of it in new
+free programs, and that you know you can do these things.
+
+  To protect your rights, we need to prevent others from denying you
+these rights or asking you to surrender the rights.  Therefore, you have
+certain responsibilities if you distribute copies of the software, or if
+you modify it: responsibilities to respect the freedom of others.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must pass on to the recipients the same
+freedoms that you received.  You must make sure that they, too, receive
+or can get the source code.  And you must show them these terms so they
+know their rights.
+
+  Developers that use the GNU GPL protect your rights with two steps:
+(1) assert copyright on the software, and (2) offer you this License
+giving you legal permission to copy, distribute and/or modify it.
+
+  For the developers' and authors' protection, the GPL clearly explains
+that there is no warranty for this free software.  For both users' and
+authors' sake, the GPL requires that modified versions be marked as
+changed, so that their problems will not be attributed erroneously to
+authors of previous versions.
+
+  Some devices are designed to deny users access to install or run
+modified versions of the software inside them, although the manufacturer
+can do so.  This is fundamentally incompatible with the aim of
+protecting users' freedom to change the software.  The systematic
+pattern of such abuse occurs in the area of products for individuals to
+use, which is precisely where it is most unacceptable.  Therefore, we
+have designed this version of the GPL to prohibit the practice for those
+products.  If such problems arise substantially in other domains, we
+stand ready to extend this provision to those domains in future versions
+of the GPL, as needed to protect the freedom of users.
+
+  Finally, every program is threatened constantly by software patents.
+States should not allow patents to restrict development and use of
+software on general-purpose computers, but in those that do, we wish to
+avoid the special danger that patents applied to a free program could
+make it effectively proprietary.  To prevent this, the GPL assures that
+patents cannot be used to render the program non-free.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                       TERMS AND CONDITIONS
+
+  0. Definitions.
+
+  "This License" refers to version 3 of the GNU General Public License.
+
+  "Copyright" also means copyright-like laws that apply to other kinds of
+works, such as semiconductor masks.
+
+  "The Program" refers to any copyrightable work licensed under this
+License.  Each licensee is addressed as "you".  "Licensees" and
+"recipients" may be individuals or organizations.
+
+  To "modify" a work means to copy from or adapt all or part of the work
+in a fashion requiring copyright permission, other than the making of an
+exact copy.  The resulting work is called a "modified version" of the
+earlier work or a work "based on" the earlier work.
+
+  A "covered work" means either the unmodified Program or a work based
+on the Program.
+
+  To "propagate" a work means to do anything with it that, without
+permission, would make you directly or secondarily liable for
+infringement under applicable copyright law, except executing it on a
+computer or modifying a private copy.  Propagation includes copying,
+distribution (with or without modification), making available to the
+public, and in some countries other activities as well.
+
+  To "convey" a work means any kind of propagation that enables other
+parties to make or receive copies.  Mere interaction with a user through
+a computer network, with no transfer of a copy, is not conveying.
+
+  An interactive user interface displays "Appropriate Legal Notices"
+to the extent that it includes a convenient and prominently visible
+feature that (1) displays an appropriate copyright notice, and (2)
+tells the user that there is no warranty for the work (except to the
+extent that warranties are provided), that licensees may convey the
+work under this License, and how to view a copy of this License.  If
+the interface presents a list of user commands or options, such as a
+menu, a prominent item in the list meets this criterion.
+
+  1. Source Code.
+
+  The "source code" for a work means the preferred form of the work
+for making modifications to it.  "Object code" means any non-source
+form of a work.
+
+  A "Standard Interface" means an interface that either is an official
+standard defined by a recognized standards body, or, in the case of
+interfaces specified for a particular programming language, one that
+is widely used among developers working in that language.
+
+  The "System Libraries" of an executable work include anything, other
+than the work as a whole, that (a) is included in the normal form of
+packaging a Major Component, but which is not part of that Major
+Component, and (b) serves only to enable use of the work with that
+Major Component, or to implement a Standard Interface for which an
+implementation is available to the public in source code form.  A
+"Major Component", in this context, means a major essential component
+(kernel, window system, and so on) of the specific operating system
+(if any) on which the executable work runs, or a compiler used to
+produce the work, or an object code interpreter used to run it.
+
+  The "Corresponding Source" for a work in object code form means all
+the source code needed to generate, install, and (for an executable
+work) run the object code and to modify the work, including scripts to
+control those activities.  However, it does not include the work's
+System Libraries, or general-purpose tools or generally available free
+programs which are used unmodified in performing those activities but
+which are not part of the work.  For example, Corresponding Source
+includes interface definition files associated with source files for
+the work, and the source code for shared libraries and dynamically
+linked subprograms that the work is specifically designed to require,
+such as by intimate data communication or control flow between those
+subprograms and other parts of the work.
+
+  The Corresponding Source need not include anything that users
+can regenerate automatically from other parts of the Corresponding
+Source.
+
+  The Corresponding Source for a work in source code form is that
+same work.
+
+  2. Basic Permissions.
+
+  All rights granted under this License are granted for the term of
+copyright on the Program, and are irrevocable provided the stated
+conditions are met.  This License explicitly affirms your unlimited
+permission to run the unmodified Program.  The output from running a
+covered work is covered by this License only if the output, given its
+content, constitutes a covered work.  This License acknowledges your
+rights of fair use or other equivalent, as provided by copyright law.
+
+  You may make, run and propagate covered works that you do not
+convey, without conditions so long as your license otherwise remains
+in force.  You may convey covered works to others for the sole purpose
+of having them make modifications exclusively for you, or provide you
+with facilities for running those works, provided that you comply with
+the terms of this License in conveying all material for which you do
+not control copyright.  Those thus making or running the covered works
+for you must do so exclusively on your behalf, under your direction
+and control, on terms that prohibit them from making any copies of
+your copyrighted material outside their relationship with you.
+
+  Conveying under any other circumstances is permitted solely under
+the conditions stated below.  Sublicensing is not allowed; section 10
+makes it unnecessary.
+
+  3. Protecting Users' Legal Rights From Anti-Circumvention Law.
+
+  No covered work shall be deemed part of an effective technological
+measure under any applicable law fulfilling obligations under article
+11 of the WIPO copyright treaty adopted on 20 December 1996, or
+similar laws prohibiting or restricting circumvention of such
+measures.
+
+  When you convey a covered work, you waive any legal power to forbid
+circumvention of technological measures to the extent such circumvention
+is effected by exercising rights under this License with respect to
+the covered work, and you disclaim any intention to limit operation or
+modification of the work as a means of enforcing, against the work's
+users, your or third parties' legal rights to forbid circumvention of
+technological measures.
+
+  4. Conveying Verbatim Copies.
+
+  You may convey verbatim copies of the Program's source code as you
+receive it, in any medium, provided that you conspicuously and
+appropriately publish on each copy an appropriate copyright notice;
+keep intact all notices stating that this License and any
+non-permissive terms added in accord with section 7 apply to the code;
+keep intact all notices of the absence of any warranty; and give all
+recipients a copy of this License along with the Program.
+
+  You may charge any price or no price for each copy that you convey,
+and you may offer support or warranty protection for a fee.
+
+  5. Conveying Modified Source Versions.
+
+  You may convey a work based on the Program, or the modifications to
+produce it from the Program, in the form of source code under the
+terms of section 4, provided that you also meet all of these conditions:
+
+    a) The work must carry prominent notices stating that you modified
+    it, and giving a relevant date.
+
+    b) The work must carry prominent notices stating that it is
+    released under this License and any conditions added under section
+    7.  This requirement modifies the requirement in section 4 to
+    "keep intact all notices".
+
+    c) You must license the entire work, as a whole, under this
+    License to anyone who comes into possession of a copy.  This
+    License will therefore apply, along with any applicable section 7
+    additional terms, to the whole of the work, and all its parts,
+    regardless of how they are packaged.  This License gives no
+    permission to license the work in any other way, but it does not
+    invalidate such permission if you have separately received it.
+
+    d) If the work has interactive user interfaces, each must display
+    Appropriate Legal Notices; however, if the Program has interactive
+    interfaces that do not display Appropriate Legal Notices, your
+    work need not make them do so.
+
+  A compilation of a covered work with other separate and independent
+works, which are not by their nature extensions of the covered work,
+and which are not combined with it such as to form a larger program,
+in or on a volume of a storage or distribution medium, is called an
+"aggregate" if the compilation and its resulting copyright are not
+used to limit the access or legal rights of the compilation's users
+beyond what the individual works permit.  Inclusion of a covered work
+in an aggregate does not cause this License to apply to the other
+parts of the aggregate.
+
+  6. Conveying Non-Source Forms.
+
+  You may convey a covered work in object code form under the terms
+of sections 4 and 5, provided that you also convey the
+machine-readable Corresponding Source under the terms of this License,
+in one of these ways:
+
+    a) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by the
+    Corresponding Source fixed on a durable physical medium
+    customarily used for software interchange.
+
+    b) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by a
+    written offer, valid for at least three years and valid for as
+    long as you offer spare parts or customer support for that product
+    model, to give anyone who possesses the object code either (1) a
+    copy of the Corresponding Source for all the software in the
+    product that is covered by this License, on a durable physical
+    medium customarily used for software interchange, for a price no
+    more than your reasonable cost of physically performing this
+    conveying of source, or (2) access to copy the
+    Corresponding Source from a network server at no charge.
+
+    c) Convey individual copies of the object code with a copy of the
+    written offer to provide the Corresponding Source.  This
+    alternative is allowed only occasionally and noncommercially, and
+    only if you received the object code with such an offer, in accord
+    with subsection 6b.
+
+    d) Convey the object code by offering access from a designated
+    place (gratis or for a charge), and offer equivalent access to the
+    Corresponding Source in the same way through the same place at no
+    further charge.  You need not require recipients to copy the
+    Corresponding Source along with the object code.  If the place to
+    copy the object code is a network server, the Corresponding Source
+    may be on a different server (operated by you or a third party)
+    that supports equivalent copying facilities, provided you maintain
+    clear directions next to the object code saying where to find the
+    Corresponding Source.  Regardless of what server hosts the
+    Corresponding Source, you remain obligated to ensure that it is
+    available for as long as needed to satisfy these requirements.
+
+    e) Convey the object code using peer-to-peer transmission, provided
+    you inform other peers where the object code and Corresponding
+    Source of the work are being offered to the general public at no
+    charge under subsection 6d.
+
+  A separable portion of the object code, whose source code is excluded
+from the Corresponding Source as a System Library, need not be
+included in conveying the object code work.
+
+  A "User Product" is either (1) a "consumer product", which means any
+tangible personal property which is normally used for personal, family,
+or household purposes, or (2) anything designed or sold for incorporation
+into a dwelling.  In determining whether a product is a consumer product,
+doubtful cases shall be resolved in favor of coverage.  For a particular
+product received by a particular user, "normally used" refers to a
+typical or common use of that class of product, regardless of the status
+of the particular user or of the way in which the particular user
+actually uses, or expects or is expected to use, the product.  A product
+is a consumer product regardless of whether the product has substantial
+commercial, industrial or non-consumer uses, unless such uses represent
+the only significant mode of use of the product.
+
+  "Installation Information" for a User Product means any methods,
+procedures, authorization keys, or other information required to install
+and execute modified versions of a covered work in that User Product from
+a modified version of its Corresponding Source.  The information must
+suffice to ensure that the continued functioning of the modified object
+code is in no case prevented or interfered with solely because
+modification has been made.
+
+  If you convey an object code work under this section in, or with, or
+specifically for use in, a User Product, and the conveying occurs as
+part of a transaction in which the right of possession and use of the
+User Product is transferred to the recipient in perpetuity or for a
+fixed term (regardless of how the transaction is characterized), the
+Corresponding Source conveyed under this section must be accompanied
+by the Installation Information.  But this requirement does not apply
+if neither you nor any third party retains the ability to install
+modified object code on the User Product (for example, the work has
+been installed in ROM).
+
+  The requirement to provide Installation Information does not include a
+requirement to continue to provide support service, warranty, or updates
+for a work that has been modified or installed by the recipient, or for
+the User Product in which it has been modified or installed.  Access to a
+network may be denied when the modification itself materially and
+adversely affects the operation of the network or violates the rules and
+protocols for communication across the network.
+
+  Corresponding Source conveyed, and Installation Information provided,
+in accord with this section must be in a format that is publicly
+documented (and with an implementation available to the public in
+source code form), and must require no special password or key for
+unpacking, reading or copying.
+
+  7. Additional Terms.
+
+  "Additional permissions" are terms that supplement the terms of this
+License by making exceptions from one or more of its conditions.
+Additional permissions that are applicable to the entire Program shall
+be treated as though they were included in this License, to the extent
+that they are valid under applicable law.  If additional permissions
+apply only to part of the Program, that part may be used separately
+under those permissions, but the entire Program remains governed by
+this License without regard to the additional permissions.
+
+  When you convey a copy of a covered work, you may at your option
+remove any additional permissions from that copy, or from any part of
+it.  (Additional permissions may be written to require their own
+removal in certain cases when you modify the work.)  You may place
+additional permissions on material, added by you to a covered work,
+for which you have or can give appropriate copyright permission.
+
+  Notwithstanding any other provision of this License, for material you
+add to a covered work, you may (if authorized by the copyright holders of
+that material) supplement the terms of this License with terms:
+
+    a) Disclaiming warranty or limiting liability differently from the
+    terms of sections 15 and 16 of this License; or
+
+    b) Requiring preservation of specified reasonable legal notices or
+    author attributions in that material or in the Appropriate Legal
+    Notices displayed by works containing it; or
+
+    c) Prohibiting misrepresentation of the origin of that material, or
+    requiring that modified versions of such material be marked in
+    reasonable ways as different from the original version; or
+
+    d) Limiting the use for publicity purposes of names of licensors or
+    authors of the material; or
+
+    e) Declining to grant rights under trademark law for use of some
+    trade names, trademarks, or service marks; or
+
+    f) Requiring indemnification of licensors and authors of that
+    material by anyone who conveys the material (or modified versions of
+    it) with contractual assumptions of liability to the recipient, for
+    any liability that these contractual assumptions directly impose on
+    those licensors and authors.
+
+  All other non-permissive additional terms are considered "further
+restrictions" within the meaning of section 10.  If the Program as you
+received it, or any part of it, contains a notice stating that it is
+governed by this License along with a term that is a further
+restriction, you may remove that term.  If a license document contains
+a further restriction but permits relicensing or conveying under this
+License, you may add to a covered work material governed by the terms
+of that license document, provided that the further restriction does
+not survive such relicensing or conveying.
+
+  If you add terms to a covered work in accord with this section, you
+must place, in the relevant source files, a statement of the
+additional terms that apply to those files, or a notice indicating
+where to find the applicable terms.
+
+  Additional terms, permissive or non-permissive, may be stated in the
+form of a separately written license, or stated as exceptions;
+the above requirements apply either way.
+
+  8. Termination.
+
+  You may not propagate or modify a covered work except as expressly
+provided under this License.  Any attempt otherwise to propagate or
+modify it is void, and will automatically terminate your rights under
+this License (including any patent licenses granted under the third
+paragraph of section 11).
+
+  However, if you cease all violation of this License, then your
+license from a particular copyright holder is reinstated (a)
+provisionally, unless and until the copyright holder explicitly and
+finally terminates your license, and (b) permanently, if the copyright
+holder fails to notify you of the violation by some reasonable means
+prior to 60 days after the cessation.
+
+  Moreover, your license from a particular copyright holder is
+reinstated permanently if the copyright holder notifies you of the
+violation by some reasonable means, this is the first time you have
+received notice of violation of this License (for any work) from that
+copyright holder, and you cure the violation prior to 30 days after
+your receipt of the notice.
+
+  Termination of your rights under this section does not terminate the
+licenses of parties who have received copies or rights from you under
+this License.  If your rights have been terminated and not permanently
+reinstated, you do not qualify to receive new licenses for the same
+material under section 10.
+
+  9. Acceptance Not Required for Having Copies.
+
+  You are not required to accept this License in order to receive or
+run a copy of the Program.  Ancillary propagation of a covered work
+occurring solely as a consequence of using peer-to-peer transmission
+to receive a copy likewise does not require acceptance.  However,
+nothing other than this License grants you permission to propagate or
+modify any covered work.  These actions infringe copyright if you do
+not accept this License.  Therefore, by modifying or propagating a
+covered work, you indicate your acceptance of this License to do so.
+
+  10. Automatic Licensing of Downstream Recipients.
+
+  Each time you convey a covered work, the recipient automatically
+receives a license from the original licensors, to run, modify and
+propagate that work, subject to this License.  You are not responsible
+for enforcing compliance by third parties with this License.
+
+  An "entity transaction" is a transaction transferring control of an
+organization, or substantially all assets of one, or subdividing an
+organization, or merging organizations.  If propagation of a covered
+work results from an entity transaction, each party to that
+transaction who receives a copy of the work also receives whatever
+licenses to the work the party's predecessor in interest had or could
+give under the previous paragraph, plus a right to possession of the
+Corresponding Source of the work from the predecessor in interest, if
+the predecessor has it or can get it with reasonable efforts.
+
+  You may not impose any further restrictions on the exercise of the
+rights granted or affirmed under this License.  For example, you may
+not impose a license fee, royalty, or other charge for exercise of
+rights granted under this License, and you may not initiate litigation
+(including a cross-claim or counterclaim in a lawsuit) alleging that
+any patent claim is infringed by making, using, selling, offering for
+sale, or importing the Program or any portion of it.
+
+  11. Patents.
+
+  A "contributor" is a copyright holder who authorizes use under this
+License of the Program or a work on which the Program is based.  The
+work thus licensed is called the contributor's "contributor version".
+
+  A contributor's "essential patent claims" are all patent claims
+owned or controlled by the contributor, whether already acquired or
+hereafter acquired, that would be infringed by some manner, permitted
+by this License, of making, using, or selling its contributor version,
+but do not include claims that would be infringed only as a
+consequence of further modification of the contributor version.  For
+purposes of this definition, "control" includes the right to grant
+patent sublicenses in a manner consistent with the requirements of
+this License.
+
+  Each contributor grants you a non-exclusive, worldwide, royalty-free
+patent license under the contributor's essential patent claims, to
+make, use, sell, offer for sale, import and otherwise run, modify and
+propagate the contents of its contributor version.
+
+  In the following three paragraphs, a "patent license" is any express
+agreement or commitment, however denominated, not to enforce a patent
+(such as an express permission to practice a patent or covenant not to
+sue for patent infringement).  To "grant" such a patent license to a
+party means to make such an agreement or commitment not to enforce a
+patent against the party.
+
+  If you convey a covered work, knowingly relying on a patent license,
+and the Corresponding Source of the work is not available for anyone
+to copy, free of charge and under the terms of this License, through a
+publicly available network server or other readily accessible means,
+then you must either (1) cause the Corresponding Source to be so
+available, or (2) arrange to deprive yourself of the benefit of the
+patent license for this particular work, or (3) arrange, in a manner
+consistent with the requirements of this License, to extend the patent
+license to downstream recipients.  "Knowingly relying" means you have
+actual knowledge that, but for the patent license, your conveying the
+covered work in a country, or your recipient's use of the covered work
+in a country, would infringe one or more identifiable patents in that
+country that you have reason to believe are valid.
+
+  If, pursuant to or in connection with a single transaction or
+arrangement, you convey, or propagate by procuring conveyance of, a
+covered work, and grant a patent license to some of the parties
+receiving the covered work authorizing them to use, propagate, modify
+or convey a specific copy of the covered work, then the patent license
+you grant is automatically extended to all recipients of the covered
+work and works based on it.
+
+  A patent license is "discriminatory" if it does not include within
+the scope of its coverage, prohibits the exercise of, or is
+conditioned on the non-exercise of one or more of the rights that are
+specifically granted under this License.  You may not convey a covered
+work if you are a party to an arrangement with a third party that is
+in the business of distributing software, under which you make payment
+to the third party based on the extent of your activity of conveying
+the work, and under which the third party grants, to any of the
+parties who would receive the covered work from you, a discriminatory
+patent license (a) in connection with copies of the covered work
+conveyed by you (or copies made from those copies), or (b) primarily
+for and in connection with specific products or compilations that
+contain the covered work, unless you entered into that arrangement,
+or that patent license was granted, prior to 28 March 2007.
+
+  Nothing in this License shall be construed as excluding or limiting
+any implied license or other defenses to infringement that may
+otherwise be available to you under applicable patent law.
+
+  12. No Surrender of Others' Freedom.
+
+  If conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot convey a
+covered work so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you may
+not convey it at all.  For example, if you agree to terms that obligate you
+to collect a royalty for further conveying from those to whom you convey
+the Program, the only way you could satisfy both those terms and this
+License would be to refrain entirely from conveying the Program.
+
+  13. Use with the GNU Affero General Public License.
+
+  Notwithstanding any other provision of this License, you have
+permission to link or combine any covered work with a work licensed
+under version 3 of the GNU Affero General Public License into a single
+combined work, and to convey the resulting work.  The terms of this
+License will continue to apply to the part which is the covered work,
+but the special requirements of the GNU Affero General Public License,
+section 13, concerning interaction through a network will apply to the
+combination as such.
+
+  14. Revised Versions of this License.
+
+  The Free Software Foundation may publish revised and/or new versions of
+the GNU General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+  Each version is given a distinguishing version number.  If the
+Program specifies that a certain numbered version of the GNU General
+Public License "or any later version" applies to it, you have the
+option of following the terms and conditions either of that numbered
+version or of any later version published by the Free Software
+Foundation.  If the Program does not specify a version number of the
+GNU General Public License, you may choose any version ever published
+by the Free Software Foundation.
+
+  If the Program specifies that a proxy can decide which future
+versions of the GNU General Public License can be used, that proxy's
+public statement of acceptance of a version permanently authorizes you
+to choose that version for the Program.
+
+  Later license versions may give you additional or different
+permissions.  However, no additional obligations are imposed on any
+author or copyright holder as a result of your choosing to follow a
+later version.
+
+  15. Disclaimer of Warranty.
+
+  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
+APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
+HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
+OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
+IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
+ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. Limitation of Liability.
+
+  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
+THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
+GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
+USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
+DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
+PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
+EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
+SUCH DAMAGES.
+
+  17. Interpretation of Sections 15 and 16.
+
+  If the disclaimer of warranty and limitation of liability provided
+above cannot be given local legal effect according to their terms,
+reviewing courts shall apply local law that most closely approximates
+an absolute waiver of all civil liability in connection with the
+Program, unless a warranty or assumption of liability accompanies a
+copy of the Program in return for a fee.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+state the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program.  If not, see <https://www.gnu.org/licenses/>.
+
+Also add information on how to contact you by electronic and paper mail.
+
+  If the program does terminal interaction, make it output a short
+notice like this when it starts in an interactive mode:
+
+    <program>  Copyright (C) <year>  <name of author>
+    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, your program's commands
+might be different; for a GUI interface, you would use an "about box".
+
+  You should also get your employer (if you work as a programmer) or school,
+if any, to sign a "copyright disclaimer" for the program, if necessary.
+For more information on this, and how to apply and follow the GNU GPL, see
+<https://www.gnu.org/licenses/>.
+
+  The GNU General Public License does not permit incorporating your program
+into proprietary programs.  If your program is a subroutine library, you
+may consider it more useful to permit linking proprietary applications with
+the library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.  But first, please read
+<https://www.gnu.org/licenses/why-not-lgpl.html>.
Index: ../Element-Battle-main-public - Kopie/src/main/resources/static/shop.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>document.addEventListener('DOMContentLoaded', function() {\r\n    loadUserInfo();\r\n    loadPurchasedBackgrounds();\r\n    loadCardDesignStatus();\r\n\r\n    const buyAllBackgroundsButton = document.getElementById('buyAllBackgrounds');\r\n    if (buyAllBackgroundsButton) {\r\n        addIconToButton(buyAllBackgroundsButton, 'fas fa-images');\r\n        buyAllBackgroundsButton.addEventListener('click', buyAllBackgrounds);\r\n    }\r\n});\r\n\r\nfunction updateUserDisplay(username, coins) {\r\n    const userInfoElement = document.getElementById('userInfo');\r\n    const authButtonsElement = document.getElementById('authButtons');\r\n    const usernameElement = document.getElementById('username');\r\n    const logoutButton = document.getElementById('logoutButton');\r\n\r\n    if (username) {\r\n        usernameElement.innerHTML = `\r\n            <span class=\"username-text\"><i class=\"fas fa-user\"></i> ${username}</span>\r\n            <span class=\"coins-info\"><i class=\"fas fa-coins\"></i> ${coins}</span>\r\n        `;\r\n        userInfoElement.style.display = 'flex';\r\n        userInfoElement.style.alignItems = 'center';\r\n        authButtonsElement.style.display = 'none';\r\n        if (logoutButton) {\r\n            logoutButton.style.display = 'inline-block';\r\n            logoutButton.style.backgroundColor = '#ff4136';\r\n            logoutButton.innerHTML = '<i class=\"fas fa-sign-out-alt\"></i> Abmelden';\r\n            logoutButton.classList.add('icon-button', 'logout-button');\r\n        }\r\n    } else {\r\n        userInfoElement.style.display = 'none';\r\n        authButtonsElement.style.display = 'flex';\r\n        authButtonsElement.style.alignItems = 'center';\r\n        if (logoutButton) {\r\n            logoutButton.style.display = 'none';\r\n        }\r\n    }\r\n}\r\n\r\nfunction loadUserInfo() {\r\n    const username = localStorage.getItem('username');\r\n    if (!username) {\r\n        updateUserDisplay(null, null);\r\n        return;\r\n    }\r\n\r\n    fetch('/getUserInfo', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                updateUserDisplay(data.username, data.coins);\r\n            } else {\r\n                console.error('Fehler beim Laden der Benutzerinformationen:', data.message);\r\n                updateUserDisplay(null, null);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            updateUserDisplay(null, null);\r\n        });\r\n}\r\n\r\nfunction logout() {\r\n    localStorage.removeItem('username');\r\n    updateUserDisplay(null, null);\r\n    window.location.reload();\r\n}\r\n\r\nfunction loadPurchasedBackgrounds() {\r\n    const username = localStorage.getItem('username');\r\n    if (!username) {\r\n        console.error('Kein Benutzer angemeldet');\r\n        hideAllBackgroundButtons();\r\n        return;\r\n    }\r\n\r\n    fetch('/checkUserBackground', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('Received background data:', data);\r\n            if (data.exists) {\r\n                enableAllBackgrounds();\r\n                const buyButton = document.getElementById('buyAllBackgrounds');\r\n                if (buyButton) {\r\n                    buyButton.style.display = 'none';\r\n                }\r\n                if (data.activeBackground) {\r\n                    updateBackgroundToggleButtons(data.activeBackground);\r\n                    localStorage.setItem('activeBackground', data.activeBackground);\r\n                }\r\n            } else {\r\n                const buyButton = document.getElementById('buyAllBackgrounds');\r\n                if (buyButton) {\r\n                    buyButton.style.display = 'block';\r\n                }\r\n                disableAllBackgrounds();\r\n                hideAllToggleButtons();\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n}\r\n\r\nfunction hideAllBackgroundButtons() {\r\n    const backgroundButtons = document.querySelectorAll('[id^=\"background-toggle-button\"]');\r\n    backgroundButtons.forEach(button => {\r\n        button.style.display = 'none';\r\n    });\r\n}\r\n\r\nfunction hideAllToggleButtons() {\r\n    const toggleButtons = document.querySelectorAll('.toggle-background');\r\n    toggleButtons.forEach(button => {\r\n        button.style.display = 'none';\r\n    });\r\n}\r\n\r\nfunction disableAllBackgrounds() {\r\n    document.querySelectorAll('[id^=\"background-toggle-button\"]').forEach(button => {\r\n        button.style.display = 'none';\r\n    });\r\n}\r\n\r\nfunction enableAllBackgrounds() {\r\n    document.querySelectorAll('[id^=\"background-toggle-button\"]').forEach(button => {\r\n        button.style.display = 'inline-block';\r\n        button.classList.add('background-toggle-button', 'icon-button');\r\n        button.removeEventListener('click', handleBackgroundToggle);\r\n        button.addEventListener('click', handleBackgroundToggle);\r\n    });\r\n}\r\n\r\nfunction handleBackgroundToggle(event) {\r\n    const backgroundId = event.target.getAttribute('data-background');\r\n    toggleBackground(backgroundId);\r\n}\r\n\r\nfunction updateBackgroundToggleButtons(activeBackground) {\r\n    document.querySelectorAll('[id^=\"background-toggle-button\"]').forEach(button => {\r\n        const backgroundId = button.getAttribute('data-background');\r\n        if (backgroundId === activeBackground) {\r\n            button.innerHTML = '<i class=\"fas fa-toggle-on\"></i> Deaktivieren';\r\n            button.classList.add('active', 'deactivate');\r\n        } else {\r\n            button.innerHTML = '<i class=\"fas fa-toggle-off\"></i> Aktivieren';\r\n            button.classList.remove('active', 'deactivate');\r\n        }\r\n        button.classList.add('icon-button');\r\n    });\r\n}\r\n\r\nfunction toggleBackground(backgroundId) {\r\n    const username = localStorage.getItem('username');\r\n    if (!username) {\r\n        console.error('Kein Benutzer angemeldet');\r\n        return;\r\n    }\r\n\r\n    fetch('/toggleBackground', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username, background: backgroundId })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                const newActiveBackground = data.isActive ? backgroundId : '';\r\n                updateBackgroundToggleButtons(newActiveBackground);\r\n                localStorage.setItem('activeBackground', newActiveBackground);\r\n\r\n                const button = document.querySelector(`[data-background=\"${backgroundId}\"]`);\r\n                if (data.isActive) {\r\n                    button.innerHTML = '<i class=\"fas fa-toggle-on\"></i> Deaktivieren';\r\n                } else {\r\n                    button.innerHTML = '<i class=\"fas fa-toggle-off\"></i> Aktivieren';\r\n                }\r\n            } else {\r\n                console.error('Fehler beim Ãndern des Hintergrunds:', data.message);\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n}\r\n\r\nfunction buyAllBackgrounds() {\r\n    const username = localStorage.getItem('username');\r\n    const buyButton = document.getElementById('buyAllBackgrounds');\r\n\r\n    if (!username) {\r\n        flashButtonRed(buyButton);\r\n        console.error('Bitte melden Sie sich an, um HintergrÃ¼nde zu kaufen.');\r\n        return;\r\n    }\r\n\r\n    const cost = 2;\r\n    const requestBody = { username, background: 'all', cost };\r\n    console.log('Sending buyBackground request:', requestBody);\r\n\r\n    fetch('/buyBackground', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(requestBody)\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('Received buyBackground response:', data);\r\n            if (data.success) {\r\n                console.log('Alle HintergrÃ¼nde gekauft');\r\n                enableAllBackgrounds();\r\n                if (buyButton) {\r\n                    buyButton.style.display = 'none';\r\n                }\r\n                updateCoins(data.coins);\r\n                loadPurchasedBackgrounds();\r\n            } else {\r\n                throw new Error(data.message || 'Unbekannter Fehler beim Kauf der HintergrÃ¼nde');\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Fehler:', error.message);\r\n            flashButtonRed(buyButton);\r\n        });\r\n}\r\n\r\nfunction updateCoins(newCoins) {\r\n    localStorage.setItem('coins', newCoins);\r\n    updateUserDisplay(localStorage.getItem('username'), newCoins);\r\n}\r\n\r\nfunction updateCoinsDisplay() {\r\n    const coinsElement = document.getElementById('coins');\r\n    if (coinsElement) {\r\n        const coins = localStorage.getItem('coins') || '0';\r\n        coinsElement.textContent = coins;\r\n    }\r\n}\r\n\r\nfunction loadCardDesignStatus() {\r\n    const username = localStorage.getItem('username');\r\n    if (!username) {\r\n        console.error('Kein Benutzer angemeldet');\r\n        return;\r\n    }\r\n\r\n    fetch('/checkUserCardDesign', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            const buyButton = document.getElementById('buyCardDesign');\r\n            const togglesContainer = document.getElementById('cardDesignToggles');\r\n\r\n            if (data.purchased) {\r\n                buyButton.style.display = 'none';\r\n                togglesContainer.style.display = 'block';\r\n                updateToggleButtons(data.activeDesign);\r\n            } else {\r\n                buyButton.style.display = 'inline-block';\r\n                togglesContainer.style.display = 'none';\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n}\r\n\r\nfunction updateToggleButtons(activeDesign) {\r\n    const designs = ['default', '1', '2', '3'];\r\n    designs.forEach(designId => {\r\n        const button = document.getElementById(`toggleCardDesign${designId === 'default' ? 'Default' : designId}`);\r\n        if (button) {\r\n            if (designId === activeDesign) {\r\n                button.textContent = ' Deaktivieren';\r\n                button.classList.add('active', 'deactivate');\r\n                addIconToButton(button, 'fas fa-toggle-on');\r\n            } else {\r\n                button.textContent = ' Aktivieren';\r\n                button.classList.remove('active', 'deactivate');\r\n                addIconToButton(button, 'fas fa-toggle-off');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction toggleCardDesign(designId) {\r\n    const username = localStorage.getItem('username');\r\n    if (!username) {\r\n        console.error('Kein Benutzer angemeldet');\r\n        return;\r\n    }\r\n\r\n    fetch('/toggleCardDesign', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username, designId })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                updateToggleButtons(data.activeDesign);\r\n                localStorage.setItem('activeCardDesign', data.activeDesign);\r\n                if (typeof updateCardDesign === 'function') {\r\n                    updateCardDesign();\r\n                }\r\n            } else {\r\n                console.error('Fehler beim Ãndern des Kartendesigns:', data.message);\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n}\r\n\r\nfunction buyCardDesign() {\r\n    const username = localStorage.getItem('username');\r\n    const buyButton = document.getElementById('buyCardDesign');\r\n\r\n    // Verhindere doppelte Klicks\r\n    if (buyButton.disabled) return;\r\n    buyButton.disabled = true;\r\n\r\n    fetch('/buyCardDesign', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('Server response:', data);\r\n            if (data.success) {\r\n                console.log('Kartendesigns gekauft. Neue MÃ¼nzanzahl:', data.coins);\r\n                buyButton.style.display = 'none';\r\n\r\n                document.querySelectorAll('.toggle-button2').forEach(button => {\r\n                    button.style.display = 'block';\r\n                });\r\n\r\n                updateCoins(data.coins);\r\n                updateToggleButtons(data.activeDesign);\r\n                localStorage.setItem('activeCardDesign', data.activeDesign);\r\n            } else {\r\n                throw new Error(data.message || 'Unbekannter Fehler beim Kauf der Kartendesigns');\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Fehler:', error.message);\r\n            flashButtonRed(buyButton);\r\n        })\r\n        .finally(() => {\r\n            buyButton.disabled = false;\r\n        });\r\n}\r\n\r\nfunction flashButtonRed(button) {\r\n    const originalColor = '#4CAF50';\r\n    const originalTransition = button.style.transition;\r\n\r\n    button.style.backgroundColor = 'red';\r\n    button.style.transition = 'background-color 0.5s';\r\n\r\n    setTimeout(() => {\r\n        button.style.backgroundColor = originalColor;\r\n        button.style.transition = originalTransition;\r\n    }, 500);\r\n}\r\n\r\nfunction createPreviewCards() {\r\n    const designs = ['default', '1', '2', '3'];\r\n    designs.forEach(design => {\r\n        const previewContainer = document.getElementById(`preview${design === 'default' ? 'Default' : design}`);\r\n        if (previewContainer) {\r\n            const fireCard = createPreviewCard('Feuer', design);\r\n            const iceCard = createPreviewCard('Eis', design);\r\n            previewContainer.appendChild(fireCard);\r\n            previewContainer.appendChild(iceCard);\r\n        }\r\n    });\r\n}\r\n\r\nfunction createPreviewCard(element, design) {\r\n    const card = document.createElement('div');\r\n    card.classList.add('preview-card', 'card', element.toLowerCase());\r\n    if (design !== 'default') {\r\n        card.classList.add(`premium-design-${design}`);\r\n    }\r\n\r\n    const elementIcon = element === 'Feuer' ? 'fas fa-fire' : 'fas fa-snowflake';\r\n    const cardName = element === 'Feuer' ? 'Feuersturm' : 'Eisschlag';\r\n    const description = element === 'Feuer' ? 'Verbrennt Gegner' : 'Friert Gegner ein';\r\n\r\n    card.innerHTML = `\r\n        <div class=\"card-header\">\r\n            <h3>${cardName}</h3>\r\n            <i class=\"${elementIcon} element-icon ${element.toLowerCase()} ${design !== 'default' ? `premium-design-${design}` : ''}\"></i>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <p><span class=\"stat-label\">HP:</span> <span class=\"stat-value\">100</span></p>\r\n            <p><span class=\"stat-label\">Damage:</span> <span class=\"stat-value\">50</span></p>\r\n            <p><span class=\"stat-label\">Element:</span> <span>${element}</span></p>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n            <p>${description}</p>\r\n        </div>\r\n    `;\r\n    return card;\r\n}\r\n\r\nfunction addIconToButton(button, iconClass) {\r\n    const icon = document.createElement('i');\r\n    icon.className = iconClass;\r\n    button.prepend(icon);\r\n    button.classList.add('icon-button');\r\n}\r\n\r\nfunction checkPurchaseStatus() {\r\n    const username = localStorage.getItem('username');\r\n\r\n    fetch('/checkUserCardDesign', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.purchased) {\r\n\r\n                document.querySelectorAll('.toggle-button2').forEach(button => {\r\n                    button.style.display = 'block';\r\n                });\r\n                document.getElementById('buyCardDesign').style.display = 'none';\r\n\r\n\r\n                updateToggleButtons(data.activeDesign);\r\n                localStorage.setItem('activeCardDesign', data.activeDesign);\r\n            } else {\r\n                document.getElementById('buyCardDesign').style.display = 'block';\r\n                document.querySelectorAll('.toggle-button2').forEach(button => {\r\n                    button.style.display = 'none';\r\n                });\r\n                localStorage.setItem('activeCardDesign', 'default');\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            alert('Ein Fehler ist beim ÃberprÃ¼fen des Kaufstatus aufgetreten: ' + error.message);\r\n        });\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const buyButton = document.getElementById('buyCardDesign');\r\n    if (buyButton) {\r\n        buyButton.addEventListener('click', buyCardDesign);\r\n        addIconToButton(buyButton, 'fas fa-paint-brush');\r\n    }\r\n\r\n    const toggleButtons = document.querySelectorAll('.toggle-button2');\r\n    toggleButtons.forEach(button => {\r\n        button.addEventListener('click', function() {\r\n            const designId = this.getAttribute('data-design');\r\n            toggleCardDesign(designId);\r\n        });\r\n    });\r\n    checkPurchaseStatus();\r\n    createPreviewCards();\r\n    loadCardDesignStatus();\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/src/main/resources/static/shop.js b/../Element-Battle-main-public - Kopie/src/main/resources/static/shop.js
--- a/../Element-Battle-main-public - Kopie/src/main/resources/static/shop.js	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/src/main/resources/static/shop.js	(date 1721826823150)
@@ -207,6 +207,9 @@
         return;
     }
 
+    if (buyButton.disabled) return;
+    buyButton.disabled = true;
+
     const cost = 2;
     const requestBody = { username, background: 'all', cost };
     console.log('Sending buyBackground request:', requestBody);
@@ -244,14 +247,6 @@
     updateUserDisplay(localStorage.getItem('username'), newCoins);
 }
 
-function updateCoinsDisplay() {
-    const coinsElement = document.getElementById('coins');
-    if (coinsElement) {
-        const coins = localStorage.getItem('coins') || '0';
-        coinsElement.textContent = coins;
-    }
-}
-
 function loadCardDesignStatus() {
     const username = localStorage.getItem('username');
     if (!username) {
@@ -334,7 +329,6 @@
     const username = localStorage.getItem('username');
     const buyButton = document.getElementById('buyCardDesign');
 
-    // Verhindere doppelte Klicks
     if (buyButton.disabled) return;
     buyButton.disabled = true;
 
Index: ../Element-Battle-main-public - Kopie/src/main/resources/static/script.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>document.addEventListener(\"DOMContentLoaded\", function() {\r\n    const createProfilesButton = document.getElementById(\"create-profiles-button\");\r\n\r\n    createProfilesButton.addEventListener(\"click\", function() {\r\n        fetch(\"/createProfiles\")\r\n            .then(response => response.text())\r\n            .then(data => {\r\n                createProfilesButton.classList.add('blink-success');\r\n                setTimeout(() => createProfilesButton.classList.remove('blink-success'), 1000);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Fehler beim Erstellen der Profile:\", error);\r\n            });\r\n    });\r\n\r\n    document.getElementById('hero-form').addEventListener('submit', function(event) {\r\n        event.preventDefault();\r\n\r\n        const nameInput = document.getElementById('name');\r\n        const name = nameInput.value;\r\n        const HP = document.getElementById('HP').value;\r\n        const Damage = document.getElementById('Damage').value;\r\n        const type = document.getElementById('type').value;\r\n        const extra = document.getElementById('extra').value;\r\n\r\n        if (!name) {\r\n            alert('Name darf nicht leer sein!');\r\n            nameInput.classList.add('blink-error');\r\n            setTimeout(() => nameInput.classList.remove('blink-error'), 1000);\r\n            return;\r\n        }\r\n\r\n        const hero = {\r\n            name: name,\r\n            HP: parseInt(HP) || 0,\r\n            Damage: parseInt(Damage) || 0,\r\n            type: type,\r\n            extra: extra\r\n        };\r\n        if (hero.HP <= 0){\r\n            hero.HP = 0;\r\n        }\r\n\r\n        fetch('/hero', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(hero)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok ' + response.statusText);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log('Success:', data);\r\n                document.getElementById('hero-form').reset();\r\n                const formContainer = document.querySelector('.form-container');\r\n                formContainer.classList.remove('blink-error');\r\n                formContainer.classList.add('blink-success');\r\n                setTimeout(() => formContainer.classList.remove('blink-success'), 1000);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                const formContainer = document.querySelector('.form-container');\r\n                formContainer.classList.remove('blink-success');\r\n                formContainer.classList.add('blink-error');\r\n                setTimeout(() => formContainer.classList.remove('blink-error'), 1000);\r\n            });\r\n    });\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/src/main/resources/static/script.js b/../Element-Battle-main-public - Kopie/src/main/resources/static/script.js
--- a/../Element-Battle-main-public - Kopie/src/main/resources/static/script.js	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/src/main/resources/static/script.js	(date 1721826938894)
@@ -4,7 +4,8 @@
     createProfilesButton.addEventListener("click", function() {
         fetch("/createProfiles")
             .then(response => response.text())
-            .then(data => {
+            .then(data=> {
+                data.includes("");//Nur damit keine Fehler angezeigt werden ;D
                 createProfilesButton.classList.add('blink-success');
                 setTimeout(() => createProfilesButton.classList.remove('blink-success'), 1000);
             })
Index: ../Element-Battle-main-public - Kopie/src/main/resources/static/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"de\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <link rel=\"shortcut icon\" type=\"x-icon\" href=\"1721923.png\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Heldenverwaltung</title>\r\n    <link rel=\"stylesheet\" href=\"style.css\">\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\r\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n<header>\r\n    <nav>\r\n        <div class=\"nav-left\">\r\n            <img src=\"oie_91221183fDov5el.png\" alt=\"Logo\" class=\"logo\">\r\n            <h1 class=\"nav-title\">Heldenverwaltung</h1>\r\n        </div>\r\n        <div class=\"nav-center\">\r\n            <div class=\"nav-buttons\">\r\n                <button id=\"create-profiles-button\" class=\"but\">\r\n                    <i class=\"fas fa-user-plus\"></i> Standard Heros Generieren\r\n                </button>\r\n                <button onclick=\"window.location.href='heroshow.html'\" class=\"but\">\r\n                    <i class=\"fas fa-list-alt\"></i> Heros anzeigen\r\n                </button>\r\n                <button onclick=\"window.location.href='game.html'\" class=\"but\">\r\n                    <i class=\"fas fa-gamepad\"></i> Spielen!\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n</header>\r\n<br><br><br>\r\n<main>\r\n    <form id=\"hero-form\" class=\"form-container\">\r\n        <div class=\"input-group\">\r\n            <label for=\"name\">Name:</label>\r\n            <input type=\"text\" id=\"name\" name=\"name\" required>\r\n        </div>\r\n        <div class=\"input-group\">\r\n            <label for=\"HP\">HP:</label>\r\n            <input type=\"number\" id=\"HP\" name=\"HP\" min=\"0\" max=\"15\" value=\"0\">\r\n        </div>\r\n        <div class=\"input-group\">\r\n            <label for=\"Damage\">Schaden:</label>\r\n            <input type=\"number\" id=\"Damage\" name=\"Damage\" min=\"0\" max=\"15\" value=\"0\">\r\n        </div>\r\n        <div class=\"input-group\">\r\n            <label for=\"type\">Element:</label>\r\n            <select id=\"type\" name=\"type\" required>\r\n                <option value=\"Feuer\">Feuer</option>\r\n                <option value=\"Wasser\">Wasser</option>\r\n                <option value=\"Pflanze\">Pflanze</option>\r\n                <option value=\"Elektro\">Elektro</option>\r\n                <option value=\"Erde\">Erde</option>\r\n                <option value=\"Eis\">Eis</option>\r\n                <option value=\"Luft\">Luft</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"input-group\">\r\n            <label for=\"extra\">Extra:</label>\r\n            <input type=\"text\" id=\"extra\" name=\"extra\">\r\n        </div>\r\n        <button type=\"submit\" class=\"but\">Helden erstellen</button>\r\n    </form>\r\n\r\n    <script src=\"script.js\"></script>\r\n</main>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/src/main/resources/static/index.html b/../Element-Battle-main-public - Kopie/src/main/resources/static/index.html
--- a/../Element-Battle-main-public - Kopie/src/main/resources/static/index.html	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/src/main/resources/static/index.html	(date 1721302884141)
@@ -4,7 +4,7 @@
     <meta charset="UTF-8">
     <link rel="shortcut icon" type="x-icon" href="1721923.png">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
-    <title>Heldenverwaltung</title>
+    <title>Kartenerstellung</title>
     <link rel="stylesheet" href="style.css">
     <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
     <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
@@ -14,15 +14,15 @@
     <nav>
         <div class="nav-left">
             <img src="oie_91221183fDov5el.png" alt="Logo" class="logo">
-            <h1 class="nav-title">Heldenverwaltung</h1>
+            <h1 class="nav-title">Kartenverwaltung</h1>
         </div>
         <div class="nav-center">
             <div class="nav-buttons">
                 <button id="create-profiles-button" class="but">
-                    <i class="fas fa-user-plus"></i> Standard Heros Generieren
+                    <i class="fas fa-user-plus"></i> Standard Karten Generieren
                 </button>
                 <button onclick="window.location.href='heroshow.html'" class="but">
-                    <i class="fas fa-list-alt"></i> Heros anzeigen
+                    <i class="fas fa-list-alt"></i> Karten anzeigen
                 </button>
                 <button onclick="window.location.href='game.html'" class="but">
                     <i class="fas fa-gamepad"></i> Spielen!
@@ -62,7 +62,7 @@
             <label for="extra">Extra:</label>
             <input type="text" id="extra" name="extra">
         </div>
-        <button type="submit" class="but">Helden erstellen</button>
+        <button type="submit" class="but">Karte erstellen</button>
     </form>
 
     <script src="script.js"></script>
Index: ../Element-Battle-main-public - Kopie/build/libs/acc.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"Tilljan\":{\"username\":\"Tilljan\",\"password\":\"tilljan\",\"coins\":5},\"Dombo\":{\"username\":\"Dombo\",\"password\":\"dombo\",\"coins\":15},\"Felix\":{\"username\":\"Felix\",\"password\":\"felix\",\"coins\":5}}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/build/libs/acc.json b/../Element-Battle-main-public - Kopie/build/libs/acc.json
--- a/../Element-Battle-main-public - Kopie/build/libs/acc.json	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/build/libs/acc.json	(date 1721896596363)
@@ -1,1 +1,1 @@
-{"Tilljan":{"username":"Tilljan","password":"tilljan","coins":5},"Dombo":{"username":"Dombo","password":"dombo","coins":15},"Felix":{"username":"Felix","password":"felix","coins":5}}
\ No newline at end of file
+{}
\ No newline at end of file
Index: ../Element-Battle-main-public - Kopie/build/resources/main/static/account.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"de\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <link rel=\"shortcut icon\" type=\"x-icon\" href=\"1721923.png\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Account - Element Battle</title>\r\n    <link rel=\"stylesheet\" href=\"account.css\">\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\r\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n<header>\r\n    <nav>\r\n        <div class=\"nav-left\">\r\n            <img src=\"3104645.png\" alt=\"Logo\" class=\"logo\">\r\n            <h1 class=\"nav-title\">Account Management Element Battle</h1>\r\n        </div>\r\n        <div class=\"nav-buttons\">\r\n            <button onclick=\"window.location.href='game.html'\" class=\"but back-btn\">\r\n               <i class=\"fa fa-arrow-left\"></i>\r\n                <i class=\"fas fa-gamepad\"></i> ZurÃ¼ck zum Spiel\r\n            </button>\r\n        </div>\r\n    </nav>\r\n</header>\r\n<main>\r\n    <div class=\"form-container account-container\">\r\n        <h2>Konto Informationen</h2>\r\n        <form id=\"accountForm\">\r\n            <div class=\"input-group\">\r\n                <label for=\"username\">Benutzername</label>\r\n                <div class=\"input-wrapper\">\r\n                    <i class=\"fas fa-user input-icon\"></i>\r\n                    <input type=\"text\" id=\"username\" name=\"username\" readonly>\r\n                    <button type=\"button\" class=\"edit-btn\" data-target=\"username\">\r\n                        <i class=\"fas fa-edit\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"input-group\">\r\n                <label for=\"password\">Passwort</label>\r\n                <div class=\"input-wrapper\">\r\n                    <i class=\"fas fa-lock input-icon\"></i>\r\n                    <input type=\"password\" id=\"password\" name=\"password\" readonly>\r\n                    <button type=\"button\" class=\"edit-btn\" data-target=\"password\">\r\n                        <i class=\"fas fa-edit\"></i>\r\n                    </button>\r\n                    <button type=\"button\" class=\"toggle-password\" id=\"togglePassword\">\r\n                        <i class=\"fas fa-eye\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <button type=\"submit\" class=\"but save-btn\" disabled>Ãnderungen speichern</button>\r\n        </form>\r\n    </div>\r\n</main>\r\n\r\n<script src=\"account.js\"></script>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/build/resources/main/static/account.html b/../Element-Battle-main-public - Kopie/build/resources/main/static/account.html
--- a/../Element-Battle-main-public - Kopie/build/resources/main/static/account.html	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/build/resources/main/static/account.html	(date 1722152682115)
@@ -6,53 +6,77 @@
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <title>Account - Element Battle</title>
     <link rel="stylesheet" href="account.css">
-    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
+    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;700&display=swap" rel="stylesheet">
     <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
 </head>
 <body>
+<div class="particles"></div>
 <header>
     <nav>
         <div class="nav-left">
             <img src="3104645.png" alt="Logo" class="logo">
-            <h1 class="nav-title">Account Management Element Battle</h1>
+            <h1 class="nav-title">Element Battle</h1>
         </div>
         <div class="nav-buttons">
             <button onclick="window.location.href='game.html'" class="but back-btn">
-               <i class="fa fa-arrow-left"></i>
-                <i class="fas fa-gamepad"></i> ZurÃ¼ck zum Spiel
+                <i class="fas fa-arrow-left"></i>
+                <i class="fas fa-gamepad"></i>
+                ZurÃ¼ck zum Spiel
             </button>
         </div>
     </nav>
 </header>
 <main>
-    <div class="form-container account-container">
-        <h2>Konto Informationen</h2>
-        <form id="accountForm">
-            <div class="input-group">
-                <label for="username">Benutzername</label>
-                <div class="input-wrapper">
-                    <i class="fas fa-user input-icon"></i>
-                    <input type="text" id="username" name="username" readonly>
-                    <button type="button" class="edit-btn" data-target="username">
-                        <i class="fas fa-edit"></i>
-                    </button>
-                </div>
-            </div>
-            <div class="input-group">
-                <label for="password">Passwort</label>
-                <div class="input-wrapper">
-                    <i class="fas fa-lock input-icon"></i>
-                    <input type="password" id="password" name="password" readonly>
-                    <button type="button" class="edit-btn" data-target="password">
-                        <i class="fas fa-edit"></i>
-                    </button>
-                    <button type="button" class="toggle-password" id="togglePassword">
-                        <i class="fas fa-eye"></i>
-                    </button>
-                </div>
-            </div>
-            <button type="submit" class="but save-btn" disabled>Ãnderungen speichern</button>
-        </form>
+    <div class="content-wrapper">
+        <div class="form-container account-container">
+            <h2><i class="fas fa-user-circle"></i> Konto Informationen</h2>
+            <form id="accountForm">
+                <div class="input-group">
+                    <label for="username">Benutzername</label>
+                    <div class="input-wrapper">
+                        <i class="fas fa-user input-icon"></i>
+                        <input type="text" id="username" name="username" readonly>
+                        <button type="button" class="edit-btn" data-target="username">
+                            <i class="fas fa-edit"></i>
+                        </button>
+                    </div>
+                </div>
+                <div class="input-group">
+                    <label for="password">Passwort</label>
+                    <div class="input-wrapper">
+                        <i class="fas fa-lock input-icon"></i>
+                        <input type="password" id="password" name="password" readonly>
+                        <button type="button" class="edit-btn" data-target="password">
+                            <i class="fas fa-edit"></i>
+                        </button>
+                        <button type="button" class="toggle-password" id="togglePassword">
+                            <i class="fas fa-eye"></i>
+                        </button>
+                    </div>
+                </div>
+                <button type="submit" class="but save-btn" disabled>Ãnderungen speichern</button>
+            </form>
+        </div>
+        <div class="stats-container">
+            <h2><i class="fas fa-chart-bar"></i> Spielstatistiken</h2>
+            <div id="statsContent" class="stats-grid">
+                <p>Lade Statistiken...</p>
+            </div>
+        </div>
+        <div class="leaderboard-container">
+            <h2><i class="fas fa-trophy"></i> Leaderboard</h2>
+            <table id="leaderboardTable">
+                <thead>
+                <tr>
+                    <th>Rang</th>
+                    <th>Benutzername</th>
+                    <th>Siege</th>
+                </tr>
+                </thead>
+                <tbody>
+                </tbody>
+            </table>
+        </div>
     </div>
 </main>
 
Index: ../Element-Battle-main-public - Kopie/build/resources/main/static/heroshow.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"de\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <link rel=\"shortcut icon\" type=\"x-icon\" href=\"1721923.png\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Heldenliste</title>\r\n    <link rel=\"stylesheet\" href=\"style.css\">\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\r\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n<div id=\"overlay\"></div>\r\n<header>\r\n    <nav>\r\n        <div class=\"nav-left\">\r\n            <img src=\"oie_91221183fDov5el.png\" alt=\"Logo\" class=\"logo\">\r\n            <h1 class=\"nav-title\">Heldenverwaltung</h1>\r\n        </div>\r\n        <div class=\"nav-buttons\">\r\n            <button onclick=\"window.location.href='index.html'\" id=\"button\" class=\"but\">\r\n                <i class=\"fas fa-arrow-left\"></i>\r\n                <i class=\"fas fa-users\"></i> ZurÃ¼ck zur Heldenverwaltung\r\n            </button>\r\n        </div>\r\n    </nav>\r\n</header>\r\n<main>\r\n    <div id=\"hero-list\">\r\n        <h2>Heldenliste</h2>\r\n        <button id=\"delete-all-button\" class=\"but\">Alles LÃ¶schen & ZurÃ¼cksetzten</button>\r\n        <label for=\"search-bar\"></label><input type=\"text\" id=\"search-bar\" placeholder=\"Suche Helden...\">\r\n        <ul id=\"heroes\"></ul>\r\n    </div>\r\n</main>\r\n<script src=\"heroshow.js\"></script>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/build/resources/main/static/heroshow.html b/../Element-Battle-main-public - Kopie/build/resources/main/static/heroshow.html
--- a/../Element-Battle-main-public - Kopie/build/resources/main/static/heroshow.html	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/build/resources/main/static/heroshow.html	(date 1722152682140)
@@ -4,7 +4,7 @@
     <meta charset="UTF-8">
     <link rel="shortcut icon" type="x-icon" href="1721923.png">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
-    <title>Heldenliste</title>
+    <title>Kartenliste</title>
     <link rel="stylesheet" href="style.css">
     <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
     <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
@@ -15,19 +15,19 @@
     <nav>
         <div class="nav-left">
             <img src="oie_91221183fDov5el.png" alt="Logo" class="logo">
-            <h1 class="nav-title">Heldenverwaltung</h1>
+            <h1 class="nav-title">Kartenverwaltung</h1>
         </div>
         <div class="nav-buttons">
             <button onclick="window.location.href='index.html'" id="button" class="but">
                 <i class="fas fa-arrow-left"></i>
-                <i class="fas fa-users"></i> ZurÃ¼ck zur Heldenverwaltung
+                <i class="fas fa-users"></i> ZurÃ¼ck zur Kartenerstellung
             </button>
         </div>
     </nav>
 </header>
 <main>
     <div id="hero-list">
-        <h2>Heldenliste</h2>
+        <h2>Kartenliste</h2>
         <button id="delete-all-button" class="but">Alles LÃ¶schen & ZurÃ¼cksetzten</button>
         <label for="search-bar"></label><input type="text" id="search-bar" placeholder="Suche Helden...">
         <ul id="heroes"></ul>
Index: stats.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"Tilljan\":{\"wins\":1,\"damage\":433,\"winrate\":50.0,\"coins\":6,\"direkt-damage\":61,\"lose\":1},\"Yassin\":{\"wins\":3,\"damage\":522,\"winrate\":100.0,\"coins\":0,\"direkt-damage\":107,\"lose\":0},\"Felix\":{\"wins\":0,\"damage\":0,\"winrate\":0.0,\"coins\":0,\"direkt-damage\":0,\"lose\":0},\"Dombo\":{\"wins\":0,\"damage\":0,\"winrate\":0.0,\"coins\":0,\"direkt-damage\":0,\"lose\":0},\"Tilljan2\":{\"wins\":0,\"damage\":0,\"winrate\":0.0,\"coins\":0,\"direkt-damage\":0,\"lose\":0}}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/stats.json b/stats.json
--- a/stats.json	(revision ea6c4e756a913b707d5b0a49546ec2ad78ba9bdb)
+++ b/stats.json	(date 1743415008476)
@@ -1,1 +1,1 @@
-{"Tilljan":{"wins":1,"damage":433,"winrate":50.0,"coins":6,"direkt-damage":61,"lose":1},"Yassin":{"wins":3,"damage":522,"winrate":100.0,"coins":0,"direkt-damage":107,"lose":0},"Felix":{"wins":0,"damage":0,"winrate":0.0,"coins":0,"direkt-damage":0,"lose":0},"Dombo":{"wins":0,"damage":0,"winrate":0.0,"coins":0,"direkt-damage":0,"lose":0},"Tilljan2":{"wins":0,"damage":0,"winrate":0.0,"coins":0,"direkt-damage":0,"lose":0}}
\ No newline at end of file
+{"Tilljan":{"wins":0,"damage":0,"winrate":0.0,"coins":0,"direkt-damage":0,"lose":0},"Yassin":{"wins":0,"damage":0,"winrate":0.0,"coins":0,"direkt-damage":0,"lose":0},"Felix":{"wins":0,"damage":0,"winrate":0.0,"coins":0,"direkt-damage":0,"lose":0},"Dombo":{"wins":0,"damage":0,"winrate":0.0,"coins":0,"direkt-damage":0,"lose":0}}
\ No newline at end of file
Index: back.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"Yassin\":\"background2\",\"Tilljan\":\"background2\",\"Tilljan2\":\"background2\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/back.json b/back.json
--- a/back.json	(revision ea6c4e756a913b707d5b0a49546ec2ad78ba9bdb)
+++ b/back.json	(date 1743415003372)
@@ -1,1 +1,1 @@
-{"Yassin":"background2","Tilljan":"background2","Tilljan2":"background2"}
\ No newline at end of file
+{"Tilljan":"background2"}
\ No newline at end of file
Index: ../Element-Battle-main-public - Kopie/build/resources/main/static/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"de\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <link rel=\"shortcut icon\" type=\"x-icon\" href=\"1721923.png\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Heldenverwaltung</title>\r\n    <link rel=\"stylesheet\" href=\"style.css\">\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\r\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n<header>\r\n    <nav>\r\n        <div class=\"nav-left\">\r\n            <img src=\"oie_91221183fDov5el.png\" alt=\"Logo\" class=\"logo\">\r\n            <h1 class=\"nav-title\">Heldenverwaltung</h1>\r\n        </div>\r\n        <div class=\"nav-center\">\r\n            <div class=\"nav-buttons\">\r\n                <button id=\"create-profiles-button\" class=\"but\">\r\n                    <i class=\"fas fa-user-plus\"></i> Standard Heros Generieren\r\n                </button>\r\n                <button onclick=\"window.location.href='heroshow.html'\" class=\"but\">\r\n                    <i class=\"fas fa-list-alt\"></i> Heros anzeigen\r\n                </button>\r\n                <button onclick=\"window.location.href='game.html'\" class=\"but\">\r\n                    <i class=\"fas fa-gamepad\"></i> Spielen!\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n</header>\r\n<br><br><br>\r\n<main>\r\n    <form id=\"hero-form\" class=\"form-container\">\r\n        <div class=\"input-group\">\r\n            <label for=\"name\">Name:</label>\r\n            <input type=\"text\" id=\"name\" name=\"name\" required>\r\n        </div>\r\n        <div class=\"input-group\">\r\n            <label for=\"HP\">HP:</label>\r\n            <input type=\"number\" id=\"HP\" name=\"HP\" min=\"0\" max=\"15\" value=\"0\">\r\n        </div>\r\n        <div class=\"input-group\">\r\n            <label for=\"Damage\">Schaden:</label>\r\n            <input type=\"number\" id=\"Damage\" name=\"Damage\" min=\"0\" max=\"15\" value=\"0\">\r\n        </div>\r\n        <div class=\"input-group\">\r\n            <label for=\"type\">Element:</label>\r\n            <select id=\"type\" name=\"type\" required>\r\n                <option value=\"Feuer\">Feuer</option>\r\n                <option value=\"Wasser\">Wasser</option>\r\n                <option value=\"Pflanze\">Pflanze</option>\r\n                <option value=\"Elektro\">Elektro</option>\r\n                <option value=\"Erde\">Erde</option>\r\n                <option value=\"Eis\">Eis</option>\r\n                <option value=\"Luft\">Luft</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"input-group\">\r\n            <label for=\"extra\">Extra:</label>\r\n            <input type=\"text\" id=\"extra\" name=\"extra\">\r\n        </div>\r\n        <button type=\"submit\" class=\"but\">Helden erstellen</button>\r\n    </form>\r\n\r\n    <script src=\"script.js\"></script>\r\n</main>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/build/resources/main/static/index.html b/../Element-Battle-main-public - Kopie/build/resources/main/static/index.html
--- a/../Element-Battle-main-public - Kopie/build/resources/main/static/index.html	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/build/resources/main/static/index.html	(date 1722152682145)
@@ -4,7 +4,7 @@
     <meta charset="UTF-8">
     <link rel="shortcut icon" type="x-icon" href="1721923.png">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
-    <title>Heldenverwaltung</title>
+    <title>Kartenerstellung</title>
     <link rel="stylesheet" href="style.css">
     <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
     <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
@@ -14,15 +14,15 @@
     <nav>
         <div class="nav-left">
             <img src="oie_91221183fDov5el.png" alt="Logo" class="logo">
-            <h1 class="nav-title">Heldenverwaltung</h1>
+            <h1 class="nav-title">Kartenverwaltung</h1>
         </div>
         <div class="nav-center">
             <div class="nav-buttons">
                 <button id="create-profiles-button" class="but">
-                    <i class="fas fa-user-plus"></i> Standard Heros Generieren
+                    <i class="fas fa-user-plus"></i> Standard Karten Generieren
                 </button>
                 <button onclick="window.location.href='heroshow.html'" class="but">
-                    <i class="fas fa-list-alt"></i> Heros anzeigen
+                    <i class="fas fa-list-alt"></i> Karten anzeigen
                 </button>
                 <button onclick="window.location.href='game.html'" class="but">
                     <i class="fas fa-gamepad"></i> Spielen!
@@ -62,7 +62,7 @@
             <label for="extra">Extra:</label>
             <input type="text" id="extra" name="extra">
         </div>
-        <button type="submit" class="but">Helden erstellen</button>
+        <button type="submit" class="but">Karte erstellen</button>
     </form>
 
     <script src="script.js"></script>
Index: ../Element-Battle-main-public - Kopie/build/resources/main/static/account.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>document.addEventListener('DOMContentLoaded', function() {\r\n    const usernameInput = document.getElementById('username');\r\n    const passwordInput = document.getElementById('password');\r\n    const editButtons = document.querySelectorAll('.edit-btn');\r\n    const saveButton = document.querySelector('.save-btn');\r\n    const accountForm = document.getElementById('accountForm');\r\n    const togglePasswordButton = document.getElementById('togglePassword');\r\n    const formContainer = document.querySelector('.form-container');\r\n\r\n    let originalUsername = '';\r\n    let originalPassword = '';\r\n    let actualPassword = '';\r\n\r\n    loadUserInfo();\r\n\r\n    editButtons.forEach(button => {\r\n        button.addEventListener('click', function() {\r\n            const targetId = this.getAttribute('data-target');\r\n            const targetInput = document.getElementById(targetId);\r\n            if (targetInput.readOnly) {\r\n                targetInput.readOnly = false;\r\n                this.innerHTML = '<i class=\"fas fa-times\"></i>';\r\n                this.title = 'Abbrechen';\r\n                targetInput.classList.add('editing');\r\n                if (targetId === 'password') {\r\n                    targetInput.value = actualPassword;\r\n                    targetInput.type = 'text';\r\n                    togglePasswordButton.querySelector('i').classList.replace('fa-eye', 'fa-eye-slash');\r\n                }\r\n            } else {\r\n                targetInput.readOnly = true;\r\n                this.innerHTML = '<i class=\"fas fa-edit\"></i>';\r\n                this.title = 'Bearbeiten';\r\n                targetInput.classList.remove('editing');\r\n                if (targetId === 'username') {\r\n                    targetInput.value = originalUsername;\r\n                } else if (targetId === 'password') {\r\n                    targetInput.value = '*'.repeat(actualPassword.length);\r\n                    targetInput.type = 'password';\r\n                    togglePasswordButton.querySelector('i').classList.replace('fa-eye-slash', 'fa-eye');\r\n                }\r\n            }\r\n            updateSaveButtonState();\r\n        });\r\n    });\r\n\r\n    function createConfetti() {\r\n        const confettiCount = 300;\r\n        const confettiContainer = document.createElement('div');\r\n        confettiContainer.style.position = 'fixed';\r\n        confettiContainer.style.top = '0';\r\n        confettiContainer.style.left = '0';\r\n        confettiContainer.style.width = '100%';\r\n        confettiContainer.style.height = '100%';\r\n        confettiContainer.style.pointerEvents = 'none';\r\n        confettiContainer.style.zIndex = '9999';\r\n\r\n        for (let i = 0; i < confettiCount; i++) {\r\n            const confetti = document.createElement('div');\r\n            confetti.style.position = 'absolute';\r\n            confetti.style.width = '10px';\r\n            confetti.style.height = '10px';\r\n            confetti.style.backgroundColor = getRandomColor();\r\n            confetti.style.left = Math.random() * 100 + 'vw';\r\n            confetti.style.top = '-10px';\r\n            confetti.style.borderRadius = '50%';\r\n            confetti.style.transform = `rotate(${Math.random() * 360}deg)`;\r\n            confetti.style.animation = `fall ${Math.random() * 3 + 2}s linear`;\r\n            confettiContainer.appendChild(confetti);\r\n        }\r\n\r\n        document.body.appendChild(confettiContainer);\r\n\r\n        setTimeout(() => {\r\n            document.body.removeChild(confettiContainer);\r\n        }, 5000);\r\n    }\r\n\r\n    function getRandomColor() {\r\n        const letters = '0123456789ABCDEF';\r\n        let color = '#';\r\n        for (let i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    }\r\n\r\n    accountForm.addEventListener('submit', function(e) {\r\n        e.preventDefault();\r\n        saveChanges();\r\n    });\r\n\r\n    togglePasswordButton.addEventListener('click', function() {\r\n        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';\r\n        passwordInput.setAttribute('type', type);\r\n        this.querySelector('i').classList.toggle('fa-eye');\r\n        this.querySelector('i').classList.toggle('fa-eye-slash');\r\n        if (type === 'text' && passwordInput.readOnly) {\r\n            passwordInput.value = actualPassword;\r\n        } else if (type === 'password' && passwordInput.readOnly) {\r\n            passwordInput.value = '*'.repeat(actualPassword.length);\r\n        }\r\n    });\r\n\r\n    function loadUserInfo() {\r\n        const username = localStorage.getItem('username');\r\n        if (!username) {\r\n            alert('Bitte melden Sie sich an, um Ihre Kontoinformationen zu sehen.');\r\n            window.location.href = 'login.html';\r\n            return;\r\n        }\r\n\r\n        fetch('/getUserInfo', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username: username })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success) {\r\n                    usernameInput.value = data.username;\r\n                    originalUsername = data.username;\r\n                    actualPassword = data.password;\r\n                    passwordInput.value = '*'.repeat(actualPassword.length);\r\n                    originalPassword = '*'.repeat(actualPassword.length);\r\n                } else {\r\n                    alert('Fehler beim Laden der Benutzerinformationen.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n                alert('Ein Fehler ist aufgetreten. Bitte versuchen Sie es spÃ¤ter erneut.');\r\n            });\r\n    }\r\n\r\n    function updateSaveButtonState() {\r\n        const isUsernameChanged = usernameInput.value !== originalUsername && !usernameInput.readOnly;\r\n        const isPasswordChanged = passwordInput.value !== '' && passwordInput.value !== '*'.repeat(actualPassword.length) && !passwordInput.readOnly;\r\n        saveButton.disabled = !(isUsernameChanged || isPasswordChanged);\r\n    }\r\n\r\n    function saveChanges() {\r\n        const newUsername = usernameInput.value;\r\n        const newPassword = passwordInput.value;\r\n\r\n        if (newUsername === originalUsername && (newPassword === '' || newPassword === '*'.repeat(actualPassword.length))) {\r\n            alert('Keine Ãnderungen vorgenommen.');\r\n            return;\r\n        }\r\n\r\n        const updateData = {\r\n            oldUsername: originalUsername,\r\n            newUsername: newUsername,\r\n            newPassword: (newPassword !== '' && newPassword !== '*'.repeat(actualPassword.length)) ? newPassword : null\r\n        };\r\n\r\n        fetch('/updateAccount', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(updateData)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success) {\r\n                    createConfetti();\r\n\r\n                    originalUsername = newUsername;\r\n                    if (newPassword !== '' && newPassword !== '*'.repeat(actualPassword.length)) {\r\n                        actualPassword = newPassword;\r\n                    }\r\n                    localStorage.setItem('username', newUsername);\r\n                    resetInputs();\r\n                    loadUserInfo();\r\n\r\n                    const successMessage = document.createElement('div');\r\n                    successMessage.textContent = 'Ãnderungen erfolgreich gespeichert!';\r\n                    successMessage.style.position = 'fixed';\r\n                    successMessage.style.top = '20px';\r\n                    successMessage.style.left = '50%';\r\n                    successMessage.style.transform = 'translateX(-50%)';\r\n                    successMessage.style.backgroundColor = '#4CAF50';\r\n                    successMessage.style.color = 'white';\r\n                    successMessage.style.padding = '10px 20px';\r\n                    successMessage.style.borderRadius = '5px';\r\n                    successMessage.style.zIndex = '10000';\r\n                    document.body.appendChild(successMessage);\r\n\r\n                    setTimeout(() => {\r\n                        document.body.removeChild(successMessage);\r\n                    }, 3000);\r\n                } else {\r\n                    alert('Fehler beim Aktualisieren der Kontoinformationen: ' + data.message);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n                alert('Ein Fehler ist aufgetreten. Bitte versuchen Sie es spÃ¤ter erneut.');\r\n            });\r\n    }\r\n\r\n    function resetInputs() {\r\n        usernameInput.value = originalUsername;\r\n        passwordInput.value = '*'.repeat(actualPassword.length);\r\n        passwordInput.type = 'password';\r\n        togglePasswordButton.querySelector('i').classList.replace('fa-eye-slash', 'fa-eye');\r\n        editButtons.forEach(button => {\r\n            button.innerHTML = '<i class=\"fas fa-edit\"></i>';\r\n            button.title = 'Bearbeiten';\r\n        });\r\n        usernameInput.readOnly = true;\r\n        passwordInput.readOnly = true;\r\n        updateSaveButtonState();\r\n    }\r\n\r\n    usernameInput.addEventListener('input', updateSaveButtonState);\r\n    passwordInput.addEventListener('input', updateSaveButtonState);\r\n});
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/build/resources/main/static/account.js b/../Element-Battle-main-public - Kopie/build/resources/main/static/account.js
--- a/../Element-Battle-main-public - Kopie/build/resources/main/static/account.js	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/build/resources/main/static/account.js	(date 1722152682117)
@@ -5,7 +5,8 @@
     const saveButton = document.querySelector('.save-btn');
     const accountForm = document.getElementById('accountForm');
     const togglePasswordButton = document.getElementById('togglePassword');
-    const formContainer = document.querySelector('.form-container');
+
+    loadLeaderboard();
 
     let originalUsername = '';
     let originalPassword = '';
@@ -123,15 +124,88 @@
                     usernameInput.value = data.username;
                     originalUsername = data.username;
                     actualPassword = data.password;
-                    passwordInput.value = '*'.repeat(actualPassword.length);
-                    originalPassword = '*'.repeat(actualPassword.length);
+                    passwordInput.value = '*'.repeat(data.password.length);
+                    originalPassword = passwordInput.value;
+
+                    loadUserStats();
+                } else {
+                    console.error('Fehler beim Laden der Benutzerinformationen:', data.message);
+                }
+            })
+            .catch(error => {
+                console.error('Fehler beim Laden der Benutzerinformationen:', error);
+            });
+    }
+
+    function loadUserStats() {
+        const username = localStorage.getItem('username');
+        if (!username) return;
+
+        fetch('/getUserStats', {
+            method: 'POST',
+            headers: {
+                'Content-Type': 'application/json',
+            },
+            body: JSON.stringify({ username: username })
+        })
+            .then(response => response.json())
+            .then(data => {
+                if (data.success) {
+                    const statsContent = document.getElementById('statsContent');
+                    const stats = data.stats;
+                    statsContent.innerHTML = `
+                    <div class="stat-item">
+                        <div class="stat-label">Siege</div>
+                        <div class="stat-value">${stats.wins || 0}</div>
+                    </div>
+                    <div class="stat-item">
+                        <div class="stat-label">Niederlagen</div>
+                        <div class="stat-value">${stats.lose || 0}</div>
+                    </div>
+                    <div class="stat-item">
+                        <div class="stat-label">Schaden</div>
+                        <div class="stat-value">${stats.damage || 0}</div>
+                    </div>
+                    <div class="stat-item">
+                        <div class="stat-label">Direkter Schaden</div>
+                        <div class="stat-value">${stats['direkt-damage'] || 0}</div>
+                    </div>
+                    <div class="stat-item">
+                        <div class="stat-label">Coins</div>
+                        <div class="stat-value">${stats.coins || 0}</div>
+                    </div>
+                    <div class="stat-item">
+                        <div class="stat-label">Gewinnrate</div>
+                        <div class="stat-value">${(stats.winrate || 0).toFixed(2)}%</div>
+                    </div>
+                `;
                 } else {
-                    alert('Fehler beim Laden der Benutzerinformationen.');
+                    console.error('Fehler beim Laden der Statistiken:', data.message);
                 }
             })
             .catch(error => {
-                console.error('Error:', error);
-                alert('Ein Fehler ist aufgetreten. Bitte versuchen Sie es spÃ¤ter erneut.');
+                console.error('Fehler beim Laden der Statistiken:', error);
+            });
+    }
+
+    function loadLeaderboard() {
+        fetch('/leaderboard')
+            .then(response => response.json())
+            .then(data => {
+                const leaderboardBody = document.querySelector('#leaderboardTable tbody');
+                leaderboardBody.innerHTML = '';
+                data.forEach((player, index) => {
+                    const row = document.createElement('tr');
+                    row.innerHTML = `
+                    <td>${index + 1}</td>
+                    <td>${player.username}</td>
+                    <td>${player.wins || 0}</td>
+                `;
+                    leaderboardBody.appendChild(row);
+                });
+            })
+            .catch(error => {
+                console.error('Fehler beim Laden des Leaderboards:', error);
             });
     }
 
Index: acc.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"Marvin\":{\"username\":\"Marvin\",\"password\":\"marvin\",\"coins\":0},\"Klaus\":{\"username\":\"Klaus\",\"password\":\"klaus\",\"coins\":0},\"Tilljan\":{\"username\":\"Tilljan\",\"password\":\"tilljan\",\"coins\":7},\"Yassin\":{\"username\":\"Yassin\",\"password\":\"yassin\",\"coins\":1},\"Felix\":{\"username\":\"Felix\",\"password\":\"felix\",\"coins\":0},\"Dombo\":{\"username\":\"Dombo\",\"password\":\"dombo\",\"coins\":0},\"Tilljan2\":{\"username\":\"Tilljan2\",\"password\":\"tilljan2\",\"coins\":12}}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/acc.json b/acc.json
--- a/acc.json	(revision ea6c4e756a913b707d5b0a49546ec2ad78ba9bdb)
+++ b/acc.json	(date 1743414998450)
@@ -1,1 +1,1 @@
-{"Marvin":{"username":"Marvin","password":"marvin","coins":0},"Klaus":{"username":"Klaus","password":"klaus","coins":0},"Tilljan":{"username":"Tilljan","password":"tilljan","coins":7},"Yassin":{"username":"Yassin","password":"yassin","coins":1},"Felix":{"username":"Felix","password":"felix","coins":0},"Dombo":{"username":"Dombo","password":"dombo","coins":0},"Tilljan2":{"username":"Tilljan2","password":"tilljan2","coins":12}}
\ No newline at end of file
+{"Marvin":{"username":"Marvin","password":"marvin","coins":0},"Klaus":{"username":"Klaus","password":"klaus","coins":0},"Tilljan":{"username":"Tilljan","password":"tilljan","coins":6},"Yassin":{"username":"Yassin","password":"yassin","coins":0},"Felix":{"username":"Felix","password":"felix","coins":0},"Dombo":{"username":"Dombo","password":"dombo","coins":0}}
\ No newline at end of file
Index: ../Element-Battle-main-public - Kopie/build/resources/main/static/game.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>document.addEventListener('DOMContentLoaded', function() {\r\n    updateCardDesign();\r\n    updateElementRelationships();\r\n    const playerField = document.querySelector('.player-field');\r\n    const computerField = document.querySelector('.computer-field');\r\n    const playerCardsContainer = document.querySelector('.player-cards');\r\n    const computerCardsContainer = document.querySelector('.computer-cards');\r\n    const turnInfo = document.getElementById('turn-info');\r\n    const playerHpValue = document.getElementById('player-hp-value');\r\n    const computerHpValue = document.getElementById('computer-hp-value');\r\n    const playerHpBar = document.getElementById('player-hp-bar');\r\n    const computerHpBar = document.getElementById('computer-hp-bar');\r\n    const userInfo = document.getElementById('userInfo');\r\n    const usernameSpan = document.getElementById('username');\r\n    const coinsSpan = document.getElementById('coins');\r\n    const loginButton = document.getElementById('loginButton');\r\n    const registerButton = document.getElementById('registerButton');\r\n\r\n    let playerHP = 25;\r\n    let computerHP = 25;\r\n    let allHeroes = [];\r\n    let playerHand = [];\r\n    let computerHand = [];\r\n    let isPlayerFirstAttacker = true;\r\n    let roundCounter = 1;\r\n\r\n    const battleLog = document.getElementById('battle-log');\r\n\r\n    let isBattleInProgress = false;\r\n\r\n    function loadCoins() {\r\n        const coins = parseInt(localStorage.getItem('coins')) || 0;\r\n        coinsSpan.textContent = coins.toString();\r\n    }\r\n\r\n    window.onload = function() {\r\n        loadCoins();\r\n        updateUserInfo();\r\n    };\r\n\r\n    function updateCoins(amount) {\r\n        const currentCoins = parseInt(localStorage.getItem('coins')) || 0;\r\n        const newCoins = currentCoins + amount;\r\n\r\n        localStorage.setItem('coins', newCoins);\r\n        if (coinsSpan) {\r\n            coinsSpan.textContent = newCoins;\r\n        }\r\n\r\n        const username = localStorage.getItem('username');\r\n        if (username) {\r\n            fetch('/updateCoins', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: username,\r\n                    coins: newCoins\r\n                })\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        console.log('MÃ¼nzen erfolgreich aktualisiert');\r\n                    } else {\r\n                        console.error('Fehler beim Aktualisieren der MÃ¼nzen');\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Fehler beim Senden der Anfrage:', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    function updateUserInfo() {\r\n        const username = localStorage.getItem('username');\r\n        const coins = localStorage.getItem('coins');\r\n        const userInfo = document.getElementById('userInfo');\r\n        const authButtons = document.getElementById('authButtons');\r\n        const usernameSpan = document.getElementById('username');\r\n        const loginButton = document.getElementById('loginButton');\r\n        const registerButton = document.getElementById('registerButton');\r\n        const navButtons = document.querySelector('.nav-buttons');\r\n\r\n        if (username && coins !== null) {\r\n            userInfo.style.display = 'flex';\r\n            usernameSpan.innerHTML = `\r\n            <span class=\"username-text\"><i class=\"fas fa-user\"></i> ${username}</span>\r\n            <span class=\"coins-info\"><i class=\"fas fa-coins\"></i> ${coins}</span>\r\n        `;\r\n\r\n            if (loginButton) loginButton.style.display = 'none';\r\n            if (registerButton) registerButton.style.display = 'none';\r\n\r\n            let logoutButton = document.getElementById('logoutButton');\r\n            if (!logoutButton) {\r\n                logoutButton = document.createElement('button');\r\n                logoutButton.id = 'logoutButton';\r\n                logoutButton.className = 'but logout-button';\r\n                logoutButton.innerHTML = '<i class=\"fas fa-sign-out-alt\"></i> Abmelden';\r\n                logoutButton.style.backgroundColor = '#ff4136';\r\n                logoutButton.addEventListener('click', logout);\r\n                authButtons.insertBefore(logoutButton, authButtons.firstChild);\r\n            }\r\n            logoutButton.style.display = 'inline-block';\r\n\r\n            if (registerButton) {\r\n                registerButton.innerHTML = '<i class=\"fas fa-user\"></i> Account';\r\n                registerButton.onclick = function() {\r\n                    window.location.href = 'account.html';\r\n                };\r\n                registerButton.style.display = 'inline-block';\r\n            }\r\n\r\n            if (navButtons) {\r\n                navButtons.style.position = 'absolute';\r\n                navButtons.style.left = '50%';\r\n                navButtons.style.transform = 'translateX(-50%)';\r\n            }\r\n        } else {\r\n            userInfo.style.display = 'none';\r\n\r\n            if (loginButton) {\r\n                loginButton.style.display = 'inline-block';\r\n                loginButton.innerHTML = '<i class=\"fas fa-sign-in-alt\"></i> Anmelden';\r\n                loginButton.onclick = function() {\r\n                    window.location.href = 'login.html#login';\r\n                };\r\n            }\r\n            if (registerButton) {\r\n                registerButton.style.display = 'inline-block';\r\n                registerButton.innerHTML = '<i class=\"fas fa-user-plus\"></i> Registrieren';\r\n                registerButton.onclick = function() {\r\n                    window.location.href = 'login.html#register';\r\n                };\r\n            }\r\n\r\n            const logoutButton = document.getElementById('logoutButton');\r\n            if (logoutButton) logoutButton.style.display = 'none';\r\n\r\n            if (navButtons) {\r\n                navButtons.style.position = '';\r\n                navButtons.style.left = '';\r\n                navButtons.style.transform = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    updateUserInfo();\r\n\r\n    function logout() {\r\n        localStorage.removeItem('username');\r\n        localStorage.removeItem('coins');\r\n        updateUserInfo();\r\n        window.location.reload();\r\n\r\n    }\r\n\r\n    function selectCard(card, field, nextTurn) {\r\n        if (isBattleInProgress) return;\r\n        isBattleInProgress = true;\r\n\r\n\r\n        field.innerHTML = '';\r\n        const selectedCard = createCard(card.name, card.HP, card.Damage, card.type, card.extra);\r\n        selectedCard.classList.add('selected');\r\n        field.appendChild(selectedCard);\r\n\r\n        if (field === playerField) {\r\n            playerHand = playerHand.filter(c => c.name !== card.name);\r\n            displayPlayerCards();\r\n        } else {\r\n            computerHand = computerHand.filter(c => c.name !== card.name);\r\n            displayComputerCards();\r\n        }\r\n\r\n        selectedCard.style.animation = 'none';\r\n        selectedCard.offsetHeight;\r\n        selectedCard.style.animation = null;\r\n        selectedCard.classList.add('attack-animation');\r\n\r\n        setTimeout(async () => {\r\n            selectedCard.classList.remove('attack-animation');\r\n            if (playerField.querySelector('.card') && computerField.querySelector('.card')) {\r\n                await battle();\r\n            } else {\r\n                isBattleInProgress = false;\r\n                nextTurn();\r\n            }\r\n        }, 500);\r\n    }\r\n    function createConfetti() {\r\n        const confettiCount = 300;\r\n        const confettiContainer = document.createElement('div');\r\n        confettiContainer.style.position = 'fixed';\r\n        confettiContainer.style.top = '0';\r\n        confettiContainer.style.left = '0';\r\n        confettiContainer.style.width = '100%';\r\n        confettiContainer.style.height = '100%';\r\n        confettiContainer.style.pointerEvents = 'none';\r\n        confettiContainer.style.zIndex = '9999';\r\n\r\n        for (let i = 0; i < confettiCount; i++) {\r\n            const confetti = document.createElement('div');\r\n            confetti.style.position = 'absolute';\r\n            confetti.style.width = '10px';\r\n            confetti.style.height = '10px';\r\n            confetti.style.backgroundColor = getRandomColor();\r\n            confetti.style.left = Math.random() * 100 + 'vw';\r\n            confetti.style.top = '-10px';\r\n            confetti.style.borderRadius = '50%';\r\n            confetti.style.transform = `rotate(${Math.random() * 360}deg)`;\r\n            confetti.style.animation = `fall ${Math.random() * 3 + 2}s linear`;\r\n            confettiContainer.appendChild(confetti);\r\n        }\r\n\r\n        document.body.appendChild(confettiContainer);\r\n\r\n        setTimeout(() => {\r\n            document.body.removeChild(confettiContainer);\r\n        }, 5000);\r\n    }\r\n\r\n    function getRandomColor() {\r\n        const letters = '0123456789ABCDEF';\r\n        let color = '#';\r\n        for (let i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    }\r\n\r\n    async function battle() {\r\n        const playerCard = playerField.querySelector('.card');\r\n        const computerCard = computerField.querySelector('.card');\r\n\r\n        if (!playerCard || !computerCard) {\r\n            console.error('Cards not found in the fields');\r\n            isBattleInProgress = false;\r\n            endTurn();\r\n            return;\r\n        }\r\n\r\n        const playerCardName = playerCard.querySelector('h3').textContent;\r\n        const computerCardName = computerCard.querySelector('h3').textContent;\r\n\r\n        const playerCardData = allHeroes.find(card => card.name === playerCardName);\r\n        const computerCardData = allHeroes.find(card => card.name === computerCardName);\r\n\r\n        if (!playerCardData || !computerCardData) {\r\n            console.error('Card data not found');\r\n            isBattleInProgress = false;\r\n            endTurn();\r\n            return;\r\n        }\r\n\r\n        let firstAttacker, secondAttacker;\r\n        if (isPlayerFirstAttacker) {\r\n            firstAttacker = { card: { ...playerCardData }, name: 'Spieler', field: playerField };\r\n            secondAttacker = { card: { ...computerCardData }, name: 'Computer', field: computerField };\r\n        } else {\r\n            firstAttacker = { card: { ...computerCardData }, name: 'Computer', field: computerField };\r\n            secondAttacker = { card: { ...playerCardData }, name: 'Spieler', field: playerField };\r\n        }\r\n\r\n        console.log('Battle started between:', firstAttacker, secondAttacker);\r\n\r\n        firstAttacker.field.querySelector('.card').style.zIndex = '10';\r\n        secondAttacker.field.querySelector('.card').style.zIndex = '5';\r\n\r\n        const firstDamage = calculateDamage(firstAttacker.card, secondAttacker.card);\r\n        const firstDirectDamage = Math.max(0, firstDamage - secondAttacker.card.HP);\r\n        const isFirstAttackEffective = calculateDamageMultiplier(firstAttacker.card.type, secondAttacker.card.type) > 1;\r\n        const isFirstAttackEffective2 = calculateDamageMultiplier(firstAttacker.card.type, secondAttacker.card.type);\r\n        displayBattleResult(firstAttacker.card, secondAttacker.card, firstDamage, firstDirectDamage, firstAttacker.name, roundCounter, isFirstAttackEffective2);\r\n\r\n        await showDamage(\r\n            firstAttacker.field,\r\n            secondAttacker.field,\r\n            firstDamage,\r\n            isFirstAttackEffective,\r\n            (damage) => {\r\n                secondAttacker.card.HP = Math.max(0, secondAttacker.card.HP - damage);\r\n                updateCardHP(secondAttacker.field, secondAttacker.card.HP);\r\n\r\n                if (firstDirectDamage > 0) {\r\n                    if (secondAttacker.name === 'Spieler') {\r\n                        playerHP = Math.max(0, playerHP - firstDirectDamage);\r\n                        showDirectDamageMessage('Spieler', firstDirectDamage);\r\n                    } else {\r\n                        computerHP = Math.max(0, computerHP - firstDirectDamage);\r\n                        showDirectDamageMessage('Computer', firstDirectDamage);\r\n                    }\r\n                    updateHP();\r\n                }\r\n            }\r\n        );\r\n\r\n        await new Promise(resolve => setTimeout(resolve, 800));\r\n\r\n        if (playerHP <= 0 || computerHP <= 0) {\r\n            await endBattleRound(true);\r\n            return;\r\n        }\r\n\r\n        if (secondAttacker.card.HP > 0) {\r\n            secondAttacker.field.querySelector('.card').style.zIndex = '10';\r\n            firstAttacker.field.querySelector('.card').style.zIndex = '5';\r\n\r\n            const secondDamage = calculateDamage(secondAttacker.card, firstAttacker.card);\r\n            const secondDirectDamage = Math.max(0, secondDamage - firstAttacker.card.HP);\r\n            const isSecondAttackEffective = calculateDamageMultiplier(secondAttacker.card.type, firstAttacker.card.type) > 1;\r\n            const isSecondAttackEffective2 = calculateDamageMultiplier(secondAttacker.card.type, firstAttacker.card.type);\r\n            displayBattleResult(secondAttacker.card, firstAttacker.card, secondDamage, secondDirectDamage, secondAttacker.name, roundCounter, isSecondAttackEffective2);\r\n\r\n            await showDamage(\r\n                secondAttacker.field,\r\n                firstAttacker.field,\r\n                secondDamage,\r\n                isSecondAttackEffective,\r\n                (damage) => {\r\n                    firstAttacker.card.HP = Math.max(0, firstAttacker.card.HP - damage);\r\n                    updateCardHP(firstAttacker.field, firstAttacker.card.HP);\r\n\r\n                    if (secondDirectDamage > 0) {\r\n                        if (firstAttacker.name === 'Spieler') {\r\n                            playerHP = Math.max(0, playerHP - secondDirectDamage);\r\n                            showDirectDamageMessage('Spieler', secondDirectDamage);\r\n                        } else {\r\n                            computerHP = Math.max(0, computerHP - secondDirectDamage);\r\n                            showDirectDamageMessage('Computer', secondDirectDamage);\r\n                        }\r\n                        updateHP();\r\n                    }\r\n                }\r\n            );\r\n            await new Promise(resolve => setTimeout(resolve, 500));\r\n        }\r\n\r\n        await endBattleRound(false);\r\n    }\r\n\r\n    async function endBattleRound(isQuickEnd) {\r\n        const fadeOutDuration = isQuickEnd ? 1000 : 1000;\r\n\r\n        await Promise.all([\r\n            anime({\r\n                targets: playerField.querySelector('.card'),\r\n                opacity: 0,\r\n                scale: 0.8,\r\n                duration: fadeOutDuration,\r\n                easing: 'easeOutQuad'\r\n            }).finished,\r\n            anime({\r\n                targets: computerField.querySelector('.card'),\r\n                opacity: 0,\r\n                scale: 0.8,\r\n                duration: fadeOutDuration,\r\n                easing: 'easeOutQuad'\r\n            }).finished\r\n        ]);\r\n\r\n        playerField.innerHTML = '';\r\n        computerField.innerHTML = '';\r\n\r\n        isPlayerFirstAttacker = !isPlayerFirstAttacker;\r\n        roundCounter++;\r\n\r\n        isBattleInProgress = false;\r\n        console.log('Battle ended, starting next turn.');\r\n        endTurn();\r\n    }\r\n\r\n\r\n    function endTurn() {\r\n        if (playerHP <= 0 || computerHP <= 0) {\r\n            endGame();\r\n            return;\r\n        }\r\n\r\n        if (playerHand.length === 0) {\r\n            refillPlayerHand();\r\n        }\r\n        if (computerHand.length === 0) {\r\n            refillComputerHand();\r\n        }\r\n        displayPlayerCards();\r\n        displayComputerCards();\r\n\r\n        const firstAttacker = isPlayerFirstAttacker ? \"Spieler\" : \"Computer\";\r\n        turnInfo.textContent = `WÃ¤hle deine nÃ¤chste Karte. ${firstAttacker} greift zuerst an.`;\r\n\r\n        playerCardsContainer.style.pointerEvents = 'auto';\r\n        computerCardsContainer.style.pointerEvents = 'auto';\r\n    }\r\n\r\n    function showDirectDamageMessage(player, damage) {\r\n        const message = `${player} hat ${damage} HP verloren!`;\r\n        const color = player === 'Spieler' ? 'red' : 'blue';\r\n\r\n        const damageMessage = document.createElement('div');\r\n        damageMessage.textContent = message;\r\n        damageMessage.style.position = 'absolute';\r\n        damageMessage.style.top = '50%';\r\n        damageMessage.style.left = '50%';\r\n        damageMessage.style.transform = 'translate(-50%, -50%)';\r\n        damageMessage.style.fontSize = '20px';\r\n        damageMessage.style.fontWeight = 'bold';\r\n        damageMessage.style.color = color;\r\n        damageMessage.style.backgroundColor = 'rgba(255, 255, 255, 0.8)';\r\n        damageMessage.style.padding = '10px 20px';\r\n        damageMessage.style.borderRadius = '10px';\r\n        damageMessage.style.opacity = '0';\r\n        damageMessage.style.transition = 'opacity 0.5s ease-in-out';\r\n        damageMessage.style.zIndex = '1000';\r\n\r\n        document.body.appendChild(damageMessage);\r\n        setTimeout(() => {\r\n            damageMessage.style.opacity = '1';\r\n        }, 100);\r\n\r\n        setTimeout(() => {\r\n            damageMessage.style.opacity = '0';\r\n        }, 1500);\r\n\r\n        setTimeout(() => {\r\n            document.body.removeChild(damageMessage);\r\n        }, 2000);\r\n    }\r\n\r\n    function calculateDamage(attacker, defender) {\r\n        const damageMultiplier = calculateDamageMultiplier(attacker.type, defender.type);\r\n        return Math.round(attacker.Damage * damageMultiplier);\r\n    }\r\n\r\n    function displayBattleResult(attackerCard, defenderCard, damage, directDamage, attacker, roundNumber, isEffective) {\r\n        const resultElement = document.createElement('div');\r\n        resultElement.className = 'battle-log-entry';\r\n        let resultText = '';\r\n\r\n        resultText += `Runde ${roundNumber}: ${attacker} ist am Zug\\n\\n`;\r\n\r\n        resultText += `${attackerCard.name} (${attackerCard.HP} HP)\\ngreift\\n${defenderCard.name} (${defenderCard.HP} HP) an.\\n\\n`;\r\n\r\n        let effectivenessText = '';\r\n        if (isEffective > 1) {\r\n            effectivenessText = 'Der Angriff ist sehr effektiv!';\r\n        } else if (isEffective < 1) {\r\n            effectivenessText = 'Der Angriff ist nicht sehr effektiv...';\r\n        }\r\n        if (effectivenessText) {\r\n            resultText += effectivenessText + '\\n\\n';\r\n        }\r\n\r\n        resultText += `${defenderCard.name} erleidet ${damage} Schaden.\\n\\n`;\r\n\r\n        // Ergebnis\r\n        const remainingHP = Math.max(0, defenderCard.HP - damage);\r\n        if (remainingHP > 0) {\r\n            resultText += `${defenderCard.name} hat noch ${remainingHP} HP Ã¼brig.\\n`;\r\n        } else {\r\n            resultText += `${defenderCard.name} wurde besiegt!\\n`;\r\n        }\r\n\r\n        if (directDamage > 0) {\r\n            resultText += `\\nZusÃ¤tzlich erleidet der ${attacker === 'Spieler' ? 'Computer' : 'Spieler'}\\n${directDamage} direkten Schaden!\\n`;\r\n        }\r\n\r\n        resultElement.innerText = resultText;\r\n        battleLog.appendChild(resultElement);\r\n        battleLog.scrollTop = battleLog.scrollHeight;\r\n    }\r\n\r\n    function createCard(name, hp, damage, element, description) {\r\n        const card = document.createElement('div');\r\n        card.classList.add('card', element.toLowerCase());\r\n\r\n        const activeDesign = localStorage.getItem('activeCardDesign');\r\n        if (activeDesign && activeDesign !== 'default') {\r\n            card.classList.add(`premium-design-${activeDesign}`);\r\n        }\r\n\r\n        const elementIcon = getElementIcon(element);\r\n\r\n        card.innerHTML = `\r\n            <div class=\"card-header\">\r\n                <h3 class=\"card-name\">${name}</h3>\r\n                <i class=\"${elementIcon} element-icon ${element.toLowerCase()} ${activeDesign ? `premium-design-${activeDesign}` : ''}\"></i>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <p class=\"stat\"><span class=\"stat-label\">HP:</span> <span class=\"stat-value\">${hp}</span></p>\r\n                <p class=\"stat\"><span class=\"stat-label\">Damage:</span> <span class=\"stat-value\">${damage}</span></p>\r\n                <p class=\"stat\"><span class=\"stat-label\">Element:</span> <span class=\"stat-value\">${element}</span></p>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <p class=\"description\">${description}</p>\r\n            </div>\r\n            `;\r\n        card.draggable = true;\r\n        return card;\r\n    }\r\n\r\n    function getElementIcon(element) {\r\n        const icons = {\r\n            'Feuer': 'fas fa-fire',\r\n            'Wasser': 'fas fa-tint',\r\n            'Pflanze': 'fas fa-leaf',\r\n            'Elektro': 'fas fa-bolt',\r\n            'Erde': 'fas fa-mountain',\r\n            'Luft': 'fas fa-wind',\r\n            'Eis': 'far fa-snowflake'\r\n        };\r\n        return icons[element] || 'fas fa-question';\r\n    }\r\n\r\n    function displayPlayerCards() {\r\n        playerCardsContainer.innerHTML = '';\r\n        playerHand.forEach(card => {\r\n            const cardElement = createCard(card.name, card.HP, card.Damage, card.type, card.extra);\r\n            cardElement.addEventListener('click', () => selectCard(card, playerField, computerTurn));\r\n\r\n            cardElement.addEventListener('dragstart', dragStart);\r\n            cardElement.addEventListener('dragend', dragEnd);\r\n\r\n            playerCardsContainer.appendChild(cardElement);\r\n        });\r\n        updateCardDesign();\r\n    }\r\n\r\n    function displayComputerCards() {\r\n        computerCardsContainer.innerHTML = '';\r\n        computerHand.forEach(() => {\r\n            const cardElement = createCard('-', '-', '-', '-', '-');\r\n            cardElement.style.backgroundImage = 'url(\"KartenrÃ¼ckseite.png\")';\r\n            cardElement.style.backgroundSize = 'cover';\r\n            computerCardsContainer.appendChild(cardElement);\r\n        });\r\n        updateCardDesign();\r\n    }\r\n\r\n    function updateCardDesign() {\r\n        const activeDesign = localStorage.getItem('activeCardDesign');\r\n        const allCards = document.querySelectorAll('.card');\r\n        const allElementRelationships = document.querySelectorAll('.element-relationship');\r\n\r\n        allCards.forEach(card => {\r\n            card.classList.remove('premium-design-1', 'premium-design-2', 'premium-design-3');\r\n            if (activeDesign && activeDesign !== 'default') {\r\n                card.classList.add(`premium-design-${activeDesign}`);\r\n            }\r\n        });\r\n\r\n        allElementRelationships.forEach(element => {\r\n            element.classList.remove('premium-design-1', 'premium-design-2', 'premium-design-3');\r\n            if (activeDesign && activeDesign !== 'default') {\r\n                element.classList.add(`premium-design-${activeDesign}`);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    function updateElementRelationships() {\r\n        const elementInfo = document.querySelector('.element-info');\r\n        if (elementInfo) {\r\n            const elements = elementInfo.querySelectorAll('span');\r\n            elements.forEach(element => {\r\n                const elementType = element.textContent.toLowerCase();\r\n                element.className = `element-relationship ${elementType}`;\r\n                if (localStorage.getItem('premiumCardDesign') === 'active') {\r\n                    element.classList.add('premium-card-design');\r\n                } else {\r\n                    element.classList.remove('premium-card-design');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function computerTurn() {\r\n        if (computerHand.length === 0) {\r\n            refillComputerHand();\r\n        }\r\n        const randomCard = computerHand[Math.floor(Math.random() * computerHand.length)];\r\n        selectCard(randomCard, computerField, () => {\r\n            turnInfo.textContent = 'WÃ¤hle deine nÃ¤chste Karte.';\r\n        });\r\n    }\r\n\r\n    function calculateDamageMultiplier(attackerElement, defenderElement) {\r\n        const strengths = {\r\n            'Feuer': 'Pflanze',\r\n            'Wasser': 'Feuer',\r\n            'Pflanze': 'Wasser',\r\n            'Elektro': 'Wasser',\r\n            'Erde': 'Elektro',\r\n            'Luft': 'Erde',\r\n            'Eis' : 'Luft'\r\n        };\r\n\r\n        if (strengths[attackerElement] === defenderElement) {\r\n            return 1.5;\r\n        } else if (strengths[defenderElement] === attackerElement) {\r\n            return 0.5;\r\n        }\r\n        return 1;\r\n    }\r\n\r\n\r\n    function updateHP() {\r\n        playerHP = Math.max(0, playerHP);\r\n        computerHP = Math.max(0, computerHP);\r\n        playerHpValue.textContent = String(playerHP);\r\n        computerHpValue.textContent = String(computerHP);\r\n        playerHpBar.style.width = `${(playerHP / 25) * 100}%`;\r\n        computerHpBar.style.width = `${(computerHP / 25) * 100}%`;\r\n    }\r\n    function updateCardHP(field, newHP) {\r\n        const hpElement = field.querySelector('.card-body .stat:nth-child(1) .stat-value');\r\n        if (hpElement) {\r\n            hpElement.textContent = newHP;\r\n        }\r\n    }\r\n\r\n    function endGame() {\r\n        let message;\r\n        let color;\r\n\r\n        if (playerHP <= 0 && computerHP <= 0) {\r\n            message = 'Unentschieden!';\r\n            color = 'blue';\r\n        } else if (playerHP <= 0) {\r\n            message = 'Computer gewinnt!';\r\n            color = 'red';\r\n        } else {\r\n            message = 'Spieler gewinnt!';\r\n            color = 'green';\r\n            setTimeout(() => {\r\n                createConfetti();\r\n                updateCoins(5);\r\n            }, 0);\r\n        }\r\n\r\n        turnInfo.textContent = message;\r\n        playerCardsContainer.innerHTML = '';\r\n        computerCardsContainer.innerHTML = '';\r\n        document.getElementById('computer-field').innerHTML = '';\r\n        document.getElementById('player-field').innerHTML = '';\r\n\r\n        const winMessage = document.createElement('div');\r\n        winMessage.textContent = message;\r\n        winMessage.style.position = 'absolute';\r\n        winMessage.style.top = '50%';\r\n        winMessage.style.left = '50%';\r\n        winMessage.style.transform = 'translate(-50%, -50%)';\r\n        winMessage.style.fontSize = '24px';\r\n        winMessage.style.fontWeight = 'bold';\r\n        winMessage.style.color = color;\r\n        winMessage.style.backgroundColor = 'rgba(255, 255, 255, 0.8)';\r\n        winMessage.style.padding = '10px 20px';\r\n        winMessage.style.borderRadius = '10px';\r\n        winMessage.style.opacity = '0';\r\n        winMessage.style.transition = 'opacity 0.5s ease-in-out';\r\n        winMessage.style.zIndex = '1000';\r\n\r\n        document.body.appendChild(winMessage);\r\n        setTimeout(() => {\r\n            winMessage.style.opacity = '1';\r\n        }, 100);\r\n\r\n        setTimeout(() => {\r\n            winMessage.style.opacity = '0';\r\n        }, 2000);\r\n\r\n        setTimeout(() => {\r\n            document.body.removeChild(winMessage);\r\n        }, 2500);\r\n\r\n        playerCardsContainer.style.pointerEvents = 'none';\r\n        computerCardsContainer.style.pointerEvents = 'none';\r\n\r\n        const restartButton = document.createElement('button');\r\n        restartButton.innerHTML = '<i class=\"fas fa-redo\"></i> Neu starten';\r\n        restartButton.style.margin = '10px 0';\r\n        restartButton.style.padding = '10px 20px';\r\n        restartButton.style.backgroundColor = '#4CAF50';\r\n        restartButton.style.color = '#fff';\r\n        restartButton.style.border = 'none';\r\n        restartButton.style.borderRadius = '25px';\r\n        restartButton.style.cursor = 'pointer';\r\n        restartButton.style.transition = 'background-color 0.3s ease, transform 0.3s ease';\r\n        restartButton.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';\r\n        restartButton.style.display = 'inline-flex';\r\n        restartButton.style.alignItems = 'center';\r\n        restartButton.style.justifyContent = 'center';\r\n        restartButton.style.fontSize = '16px';\r\n        restartButton.style.fontWeight = 'bold';\r\n\r\n        restartButton.addEventListener('mouseover', function() {\r\n            this.style.backgroundColor = '#45a049';\r\n            this.style.transform = 'scale(1.05)';\r\n        });\r\n        restartButton.addEventListener('mouseout', function() {\r\n            this.style.backgroundColor = '#4CAF50';\r\n            this.style.transform = 'scale(1)';\r\n        });\r\n        restartButton.addEventListener('click', restartGame);\r\n\r\n        const icon = restartButton.querySelector('i');\r\n        icon.style.marginRight = '8px';\r\n\r\n        turnInfo.appendChild(restartButton);\r\n    }\r\n\r\n    function restartGame() {\r\n        playerHP = 25;\r\n        computerHP = 25;\r\n        updateHP();\r\n        playerHand = [];\r\n        computerHand = [];\r\n        playerCardsContainer.style.pointerEvents = 'auto';\r\n        computerCardsContainer.style.pointerEvents = 'auto';\r\n        initializeGame();\r\n        turnInfo.textContent = 'Neues Spiel gestartet. WÃ¤hle deine erste Karte.';\r\n        roundCounter = 1;\r\n        battleLog.innerHTML = '';\r\n    }\r\n\r\n    function refillPlayerHand() {\r\n        const remainingHeroes = allHeroes.filter(hero => !playerHand.includes(hero) && !computerHand.includes(hero));\r\n        shuffleArray(remainingHeroes);\r\n        playerHand = remainingHeroes.slice(0, 5);\r\n    }\r\n\r\n    function refillComputerHand() {\r\n        const remainingHeroes = allHeroes.filter(hero => !playerHand.includes(hero) && !computerHand.includes(hero));\r\n        shuffleArray(remainingHeroes);\r\n        computerHand = remainingHeroes.slice(0, 5);\r\n    }\r\n\r\n    function shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n\r\n    async function showDamage(attackerField, defenderField, damage, isEffective, updateHP) {\r\n        const attackerCard = attackerField.querySelector('.card');\r\n        const defenderCard = defenderField.querySelector('.card');\r\n        if (!attackerCard || !defenderCard) return;\r\n\r\n        const defenderCardBody = defenderCard.querySelector('.card-body');\r\n        if (!defenderCardBody) return;\r\n\r\n        attackerCard.style.zIndex = '10';\r\n        defenderCard.style.zIndex = '5';\r\n\r\n        await anime({\r\n            targets: attackerCard,\r\n            scale: 1.2,\r\n            duration: 300,\r\n            easing: 'easeOutQuad'\r\n        }).finished;\r\n\r\n        const originalPosition = attackerCard.getBoundingClientRect();\r\n        const targetPosition = defenderCard.getBoundingClientRect();\r\n\r\n        const moveX = targetPosition.left - originalPosition.left;\r\n        const moveY = targetPosition.top - originalPosition.top;\r\n\r\n        await anime({\r\n            targets: attackerCard,\r\n            translateX: moveX,\r\n            translateY: moveY,\r\n            duration: 500,\r\n            easing: 'easeInOutQuad'\r\n        }).finished;\r\n\r\n\r\n        if (isEffective) {\r\n            await showElementalExplosion(attackerCard, defenderCard, 0.5);\r\n        }\r\n\r\n        updateHP(damage);\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            const damageElement = document.createElement('div');\r\n            damageElement.classList.add('damage-indicator');\r\n            damageElement.textContent = `-${damage}`;\r\n\r\n            const randomX = Math.random() * 100 - 50;\r\n            const randomY = Math.random() * 100 - 50;\r\n\r\n            damageElement.style.position = 'absolute';\r\n            damageElement.style.top = `calc(50% + ${randomY}px)`;\r\n            damageElement.style.left = `calc(50% + ${randomX}px)`;\r\n            damageElement.style.transform = 'translate(-50%, -50%)';\r\n            damageElement.style.opacity = '0';\r\n            damageElement.style.fontSize = '24px';\r\n            damageElement.style.fontWeight = 'bold';\r\n            damageElement.style.color = isEffective ? 'yellow' : 'red';\r\n            damageElement.style.textShadow = '2px 2px 4px rgba(0,0,0,0.5)';\r\n            damageElement.style.zIndex = '15';\r\n\r\n            defenderCardBody.appendChild(damageElement);\r\n\r\n            anime({\r\n                targets: damageElement,\r\n                opacity: [0, 1, 0],\r\n                translateY: '-=30',\r\n                duration: 2000,\r\n                easing: 'easeOutQuad',\r\n                delay: i * 100,\r\n                complete: () => damageElement.remove()\r\n            });\r\n        }\r\n\r\n        await anime({\r\n            targets: document.body,\r\n            translateX: [\r\n                {value: -10},\r\n                {value: 10},\r\n                {value: -10},\r\n                {value: 10},\r\n                {value: 0}\r\n            ],\r\n            duration: 500,\r\n            easing: 'easeInOutQuad'\r\n        }).finished;\r\n\r\n        await anime({\r\n            targets: attackerCard,\r\n            translateX: 0,\r\n            translateY: 0,\r\n            scale: 1,\r\n            duration: 500,\r\n            easing: 'easeOutQuad'\r\n        }).finished;\r\n\r\n        attackerCard.style.zIndex = '';\r\n        defenderCard.style.zIndex = '';\r\n    }\r\n\r\n    function showElementalExplosion(attackerCard, defenderCard, speedFactor = 1) {\r\n        return new Promise((resolve) => {\r\n            const container = document.createElement('div');\r\n            container.style.position = 'fixed';\r\n            container.style.top = '0';\r\n            container.style.left = '0';\r\n            container.style.width = '100%';\r\n            container.style.height = '100%';\r\n            container.style.pointerEvents = 'none';\r\n            container.style.zIndex = '1000';\r\n            document.body.appendChild(container);\r\n\r\n            const adjustDuration = (duration) => duration * speedFactor;\r\n\r\n            anime({\r\n                targets: attackerCard,\r\n                scale: 1.2,\r\n                duration: adjustDuration(300),\r\n                easing: 'easeOutQuad',\r\n                complete: () => {\r\n                    const flash = document.createElement('div');\r\n                    flash.style.position = 'absolute';\r\n                    flash.style.top = '0';\r\n                    flash.style.left = '0';\r\n                    flash.style.width = '100%';\r\n                    flash.style.height = '100%';\r\n                    flash.style.backgroundColor = 'white';\r\n                    flash.style.opacity = '0';\r\n                    attackerCard.appendChild(flash);\r\n\r\n                    anime({\r\n                        targets: flash,\r\n                        opacity: [0, 1, 0],\r\n                        duration: adjustDuration(300),\r\n                        easing: 'easeOutQuad',\r\n                        complete: () => {\r\n                            flash.remove();\r\n                            createElementalSpheres();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            function createElementalSpheres() {\r\n                const elements = ['fire', 'water', 'lightning', 'earth', 'air'];\r\n                const spheres = elements.map(element => {\r\n                    const sphere = document.createElement('div');\r\n                    sphere.classList.add('elemental-sphere', element);\r\n                    sphere.style.position = 'absolute';\r\n                    sphere.style.width = '20px';\r\n                    sphere.style.height = '20px';\r\n                    sphere.style.borderRadius = '50%';\r\n                    sphere.style.opacity = '0';\r\n                    container.appendChild(sphere);\r\n                    return sphere;\r\n                });\r\n\r\n                const attackerRect = attackerCard.getBoundingClientRect();\r\n                const centerX = attackerRect.left + attackerRect.width / 2;\r\n                const centerY = attackerRect.top + attackerRect.height / 2;\r\n\r\n                anime({\r\n                    targets: spheres,\r\n                    translateX: (el, i) => [\r\n                        {value: centerX + Math.cos(i * Math.PI * 2 / 5) * 50},\r\n                        {value: centerX}\r\n                    ],\r\n                    translateY: (el, i) => [\r\n                        {value: centerY + Math.sin(i * Math.PI * 2 / 5) * 50},\r\n                        {value: centerY}\r\n                    ],\r\n                    scale: [0, 1],\r\n                    opacity: [0, 1],\r\n                    duration: adjustDuration(100),\r\n                    easing: 'easeOutQuad',\r\n                    complete: chargeSpheres\r\n                });\r\n            }\r\n\r\n            function chargeSpheres() {\r\n                const spheres = container.querySelectorAll('.elemental-sphere');\r\n                anime({\r\n                    targets: spheres,\r\n                    scale: [1, 1.2, 1],\r\n                    opacity: [1, 0.8, 1],\r\n                    duration: adjustDuration(1000),\r\n                    easing: 'easeInOutQuad',\r\n                    loop: 2,\r\n                    complete: triggerExplosion\r\n                });\r\n            }\r\n\r\n            function triggerExplosion() {\r\n                const explosion = document.createElement('div');\r\n                explosion.style.position = 'absolute';\r\n                explosion.style.top = '50%';\r\n                explosion.style.left = '50%';\r\n                explosion.style.width = '0';\r\n                explosion.style.height = '0';\r\n                explosion.style.borderRadius = '50%';\r\n                explosion.style.backgroundColor = 'white';\r\n                explosion.style.transform = 'translate(-50%, -50%)';\r\n                container.appendChild(explosion);\r\n\r\n                anime({\r\n                    targets: explosion,\r\n                    width: '300%',\r\n                    height: '300%',\r\n                    opacity: [1, 0],\r\n                    duration: adjustDuration(1000),\r\n                    easing: 'easeOutQuad',\r\n                    complete: () => {\r\n                        container.remove();\r\n                        resolve();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    function dragStart(e) {\r\n        e.dataTransfer.setData('text/plain', e.target.querySelector('h3').textContent);\r\n        setTimeout(() => {\r\n            e.target.style.opacity = '0.5';\r\n        }, 0);\r\n    }\r\n\r\n    function dragEnd(e) {\r\n        e.target.style.opacity = '1';\r\n    }\r\n\r\n    playerField.addEventListener('dragover', dragOver);\r\n    playerField.addEventListener('dragenter', dragEnter);\r\n    playerField.addEventListener('dragleave', dragLeave);\r\n    playerField.addEventListener('drop', drop);\r\n\r\n    function dragOver(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    function dragEnter(e) {\r\n        e.preventDefault();\r\n        playerField.classList.add('drag-over');\r\n    }\r\n\r\n    function dragLeave(e) {\r\n        playerField.classList.remove('drag-over');\r\n    }\r\n\r\n    function drop(e) {\r\n        e.preventDefault();\r\n        playerField.classList.remove('drag-over');\r\n        const cardName = e.dataTransfer.getData('text');\r\n        const card = playerHand.find(c => c.name === cardName);\r\n        if (card) {\r\n            selectCard(card, playerField, computerTurn);\r\n        }\r\n    }\r\n\r\n    function initializeDragAndDrop() {\r\n        const playerCards = document.querySelectorAll('.player-card');\r\n        playerCards.forEach(card => {\r\n            card.setAttribute('draggable', true);\r\n            card.addEventListener('dragstart', dragStart);\r\n            card.addEventListener('dragend', dragEnd);\r\n        });\r\n\r\n        playerField.addEventListener('dragover', dragOver);\r\n        playerField.addEventListener('dragenter', dragEnter);\r\n        playerField.addEventListener('dragleave', dragLeave);\r\n        playerField.addEventListener('drop', drop);\r\n    }\r\n\r\n    function initializeGame() {\r\n        fetch('/heroshow')\r\n            .then(response => response.json())\r\n            .then(heroes => {\r\n                allHeroes = heroes;\r\n                playerHand = allHeroes.sort(() => 0.5 - Math.random()).slice(0, 5);\r\n                computerHand = allHeroes.sort(() => 0.5 - Math.random()).slice(0, 5);\r\n                displayPlayerCards();\r\n                displayComputerCards();\r\n                updateHP();\r\n                isPlayerFirstAttacker = true;\r\n                turnInfo.textContent = 'Neues Spiel gestartet. WÃ¤hle deine erste Karte.';\r\n                updateUserInfo();\r\n                initializeDragAndDrop();\r\n            })\r\n            .catch(error => console.error('Error:', error));\r\n    }\r\n\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n    .drag-over {\r\n        border: 2px dashed #000;\r\n        background-color: grey;\r\n    }\r\n`;\r\n    document.head.appendChild(style);\r\n\r\n    const backButton = document.getElementById('backbutton');\r\n    backButton.addEventListener('click', function() {\r\n        window.location.href = 'index.html';\r\n    });\r\n\r\n    initializeGame();\r\n});\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/build/resources/main/static/game.js b/../Element-Battle-main-public - Kopie/build/resources/main/static/game.js
--- a/../Element-Battle-main-public - Kopie/build/resources/main/static/game.js	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/build/resources/main/static/game.js	(date 1722152682138)
@@ -10,11 +10,9 @@
     const computerHpValue = document.getElementById('computer-hp-value');
     const playerHpBar = document.getElementById('player-hp-bar');
     const computerHpBar = document.getElementById('computer-hp-bar');
-    const userInfo = document.getElementById('userInfo');
-    const usernameSpan = document.getElementById('username');
     const coinsSpan = document.getElementById('coins');
-    const loginButton = document.getElementById('loginButton');
-    const registerButton = document.getElementById('registerButton');
+    let totalDamageDealt = 0;
+    let totalDirectDamageDealt = 0;
 
     let playerHP = 25;
     let computerHP = 25;
@@ -63,6 +61,7 @@
                 .then(data => {
                     if (data.success) {
                         console.log('MÃ¼nzen erfolgreich aktualisiert');
+                        updateUserInfo();
                     } else {
                         console.error('Fehler beim Aktualisieren der MÃ¼nzen');
                     }
@@ -122,6 +121,16 @@
             userInfo.style.display = 'none';
 
             if (loginButton) {
+                const allCards = document.querySelectorAll('.card');
+                const allElementRelationships = document.querySelectorAll('.element-relationship');
+
+                allCards.forEach(card => {
+                    card.classList.remove('premium-design-1', 'premium-design-2', 'premium-design-3');
+                });
+
+                allElementRelationships.forEach(element => {
+                    element.classList.remove('premium-design-1', 'premium-design-2', 'premium-design-3');
+                });
                 loginButton.style.display = 'inline-block';
                 loginButton.innerHTML = '<i class="fas fa-sign-in-alt"></i> Anmelden';
                 loginButton.onclick = function() {
@@ -275,6 +284,11 @@
         const isFirstAttackEffective2 = calculateDamageMultiplier(firstAttacker.card.type, secondAttacker.card.type);
         displayBattleResult(firstAttacker.card, secondAttacker.card, firstDamage, firstDirectDamage, firstAttacker.name, roundCounter, isFirstAttackEffective2);
 
+        if (firstAttacker.name === 'Spieler') {
+            totalDamageDealt += firstDamage;
+            totalDirectDamageDealt += firstDirectDamage;
+        }
+
         await showDamage(
             firstAttacker.field,
             secondAttacker.field,
@@ -314,6 +328,11 @@
             const isSecondAttackEffective2 = calculateDamageMultiplier(secondAttacker.card.type, firstAttacker.card.type);
             displayBattleResult(secondAttacker.card, firstAttacker.card, secondDamage, secondDirectDamage, secondAttacker.name, roundCounter, isSecondAttackEffective2);
 
+            if (secondAttacker.name === 'Spieler') {
+                totalDamageDealt += secondDamage;
+                totalDirectDamageDealt += secondDirectDamage;
+            }
+
             await showDamage(
                 secondAttacker.field,
                 firstAttacker.field,
@@ -441,7 +460,8 @@
 
         resultText += `Runde ${roundNumber}: ${attacker} ist am Zug\n\n`;
 
-        resultText += `${attackerCard.name} (${attackerCard.HP} HP)\ngreift\n${defenderCard.name} (${defenderCard.HP} HP) an.\n\n`;
+        resultText += `${attackerCard.name} \n(${attackerCard.HP} HP) / (${attackerCard.Damage} Damage)
+        \ngreift\n${defenderCard.name}\n(${defenderCard.HP} HP) / (${defenderCard.Damage} Damage) an.\n\n`;
 
         let effectivenessText = '';
         if (isEffective > 1) {
@@ -455,7 +475,6 @@
 
         resultText += `${defenderCard.name} erleidet ${damage} Schaden.\n\n`;
 
-        // Ergebnis
         const remainingHP = Math.max(0, defenderCard.HP - damage);
         if (remainingHP > 0) {
             resultText += `${defenderCard.name} hat noch ${remainingHP} HP Ã¼brig.\n`;
@@ -621,9 +640,37 @@
         }
     }
 
-    function endGame() {
+    async function updateStats(username, isWinner, damageDealt, directDamageDealt) {
+        try {
+            const response = await fetch('/updateStats', {
+                method: 'POST',
+                headers: {
+                    'Content-Type': 'application/json',
+                },
+                body: JSON.stringify({
+                    username: username,
+                    win: isWinner ? 1 : 0,
+                    lose: isWinner ? 0 : 1,
+                    damage: damageDealt,
+                    directDamage: directDamageDealt
+                }),
+            });
+
+            if (!response.ok) {
+                console.log('Fehler beim Aktualisieren der Statistiken');
+            }
+
+            const result = await response.json();
+            console.log('Statistiken aktualisiert:', result);
+        } catch (error) {
+            console.error('Fehler beim Aktualisieren der Statistiken:', error);
+        }
+    }
+
+    async function endGame() {
         let message;
         let color;
+        let isPlayerWinner = false;
 
         if (playerHP <= 0 && computerHP <= 0) {
             message = 'Unentschieden!';
@@ -631,15 +678,29 @@
         } else if (playerHP <= 0) {
             message = 'Computer gewinnt!';
             color = 'red';
+            isPlayerWinner = false;
         } else {
             message = 'Spieler gewinnt!';
             color = 'green';
+            isPlayerWinner = true;
             setTimeout(() => {
                 createConfetti();
                 updateCoins(5);
             }, 0);
         }
 
+        const playerUsername = localStorage.getItem('username');
+
+        if (playerUsername !== '' || playerUsername !== null) {
+            // Aktualisiere die Statistiken
+            await updateStats(
+                playerUsername,
+                isPlayerWinner,
+                totalDamageDealt,
+                totalDirectDamageDealt
+            );
+        }
+
         turnInfo.textContent = message;
         playerCardsContainer.innerHTML = '';
         computerCardsContainer.innerHTML = '';
@@ -720,7 +781,7 @@
         playerCardsContainer.style.pointerEvents = 'auto';
         computerCardsContainer.style.pointerEvents = 'auto';
         initializeGame();
-        turnInfo.textContent = 'Neues Spiel gestartet. WÃ¤hle deine erste Karte.';
+        turnInfo.textContent = 'WÃ¤hle deine erste Karte. Spieler greift als erstes an!';
         roundCounter = 1;
         battleLog.innerHTML = '';
     }
@@ -986,7 +1047,7 @@
         playerField.classList.add('drag-over');
     }
 
-    function dragLeave(e) {
+    function dragLeave() {
         playerField.classList.remove('drag-over');
     }
 
@@ -1025,7 +1086,7 @@
                 displayComputerCards();
                 updateHP();
                 isPlayerFirstAttacker = true;
-                turnInfo.textContent = 'Neues Spiel gestartet. WÃ¤hle deine erste Karte.';
+                turnInfo.textContent = 'WÃ¤hle deine erste Karte. Spieler greift als erstes an!';
                 updateUserInfo();
                 initializeDragAndDrop();
             })
Index: ../Element-Battle-main-public - Kopie/build/resources/main/static/shop.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>document.addEventListener('DOMContentLoaded', function() {\r\n    loadUserInfo();\r\n    loadPurchasedBackgrounds();\r\n    loadCardDesignStatus();\r\n\r\n    const buyAllBackgroundsButton = document.getElementById('buyAllBackgrounds');\r\n    if (buyAllBackgroundsButton) {\r\n        addIconToButton(buyAllBackgroundsButton, 'fas fa-images');\r\n        buyAllBackgroundsButton.addEventListener('click', buyAllBackgrounds);\r\n    }\r\n});\r\n\r\nfunction updateUserDisplay(username, coins) {\r\n    const userInfoElement = document.getElementById('userInfo');\r\n    const authButtonsElement = document.getElementById('authButtons');\r\n    const usernameElement = document.getElementById('username');\r\n    const logoutButton = document.getElementById('logoutButton');\r\n\r\n    if (username) {\r\n        usernameElement.innerHTML = `\r\n            <span class=\"username-text\"><i class=\"fas fa-user\"></i> ${username}</span>\r\n            <span class=\"coins-info\"><i class=\"fas fa-coins\"></i> ${coins}</span>\r\n        `;\r\n        userInfoElement.style.display = 'flex';\r\n        userInfoElement.style.alignItems = 'center';\r\n        authButtonsElement.style.display = 'none';\r\n        if (logoutButton) {\r\n            logoutButton.style.display = 'inline-block';\r\n            logoutButton.style.backgroundColor = '#ff4136';\r\n            logoutButton.innerHTML = '<i class=\"fas fa-sign-out-alt\"></i> Abmelden';\r\n            logoutButton.classList.add('icon-button', 'logout-button');\r\n        }\r\n    } else {\r\n        userInfoElement.style.display = 'none';\r\n        authButtonsElement.style.display = 'flex';\r\n        authButtonsElement.style.alignItems = 'center';\r\n        if (logoutButton) {\r\n            logoutButton.style.display = 'none';\r\n        }\r\n    }\r\n}\r\n\r\nfunction loadUserInfo() {\r\n    const username = localStorage.getItem('username');\r\n    if (!username) {\r\n        updateUserDisplay(null, null);\r\n        return;\r\n    }\r\n\r\n    fetch('/getUserInfo', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                updateUserDisplay(data.username, data.coins);\r\n            } else {\r\n                console.error('Fehler beim Laden der Benutzerinformationen:', data.message);\r\n                updateUserDisplay(null, null);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            updateUserDisplay(null, null);\r\n        });\r\n}\r\n\r\nfunction logout() {\r\n    localStorage.removeItem('username');\r\n    updateUserDisplay(null, null);\r\n    window.location.reload();\r\n}\r\n\r\nfunction loadPurchasedBackgrounds() {\r\n    const username = localStorage.getItem('username');\r\n    if (!username) {\r\n        console.error('Kein Benutzer angemeldet');\r\n        hideAllBackgroundButtons();\r\n        return;\r\n    }\r\n\r\n    fetch('/checkUserBackground', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('Received background data:', data);\r\n            if (data.exists) {\r\n                enableAllBackgrounds();\r\n                const buyButton = document.getElementById('buyAllBackgrounds');\r\n                if (buyButton) {\r\n                    buyButton.style.display = 'none';\r\n                }\r\n                if (data.activeBackground) {\r\n                    updateBackgroundToggleButtons(data.activeBackground);\r\n                    localStorage.setItem('activeBackground', data.activeBackground);\r\n                }\r\n            } else {\r\n                const buyButton = document.getElementById('buyAllBackgrounds');\r\n                if (buyButton) {\r\n                    buyButton.style.display = 'block';\r\n                }\r\n                disableAllBackgrounds();\r\n                hideAllToggleButtons();\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n}\r\n\r\nfunction hideAllBackgroundButtons() {\r\n    const backgroundButtons = document.querySelectorAll('[id^=\"background-toggle-button\"]');\r\n    backgroundButtons.forEach(button => {\r\n        button.style.display = 'none';\r\n    });\r\n}\r\n\r\nfunction hideAllToggleButtons() {\r\n    const toggleButtons = document.querySelectorAll('.toggle-background');\r\n    toggleButtons.forEach(button => {\r\n        button.style.display = 'none';\r\n    });\r\n}\r\n\r\nfunction disableAllBackgrounds() {\r\n    document.querySelectorAll('[id^=\"background-toggle-button\"]').forEach(button => {\r\n        button.style.display = 'none';\r\n    });\r\n}\r\n\r\nfunction enableAllBackgrounds() {\r\n    document.querySelectorAll('[id^=\"background-toggle-button\"]').forEach(button => {\r\n        button.style.display = 'inline-block';\r\n        button.classList.add('background-toggle-button', 'icon-button');\r\n        button.removeEventListener('click', handleBackgroundToggle);\r\n        button.addEventListener('click', handleBackgroundToggle);\r\n    });\r\n}\r\n\r\nfunction handleBackgroundToggle(event) {\r\n    const backgroundId = event.target.getAttribute('data-background');\r\n    toggleBackground(backgroundId);\r\n}\r\n\r\nfunction updateBackgroundToggleButtons(activeBackground) {\r\n    document.querySelectorAll('[id^=\"background-toggle-button\"]').forEach(button => {\r\n        const backgroundId = button.getAttribute('data-background');\r\n        if (backgroundId === activeBackground) {\r\n            button.innerHTML = '<i class=\"fas fa-toggle-on\"></i> Deaktivieren';\r\n            button.classList.add('active', 'deactivate');\r\n        } else {\r\n            button.innerHTML = '<i class=\"fas fa-toggle-off\"></i> Aktivieren';\r\n            button.classList.remove('active', 'deactivate');\r\n        }\r\n        button.classList.add('icon-button');\r\n    });\r\n}\r\n\r\nfunction toggleBackground(backgroundId) {\r\n    const username = localStorage.getItem('username');\r\n    if (!username) {\r\n        console.error('Kein Benutzer angemeldet');\r\n        return;\r\n    }\r\n\r\n    fetch('/toggleBackground', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username, background: backgroundId })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                const newActiveBackground = data.isActive ? backgroundId : '';\r\n                updateBackgroundToggleButtons(newActiveBackground);\r\n                localStorage.setItem('activeBackground', newActiveBackground);\r\n\r\n                const button = document.querySelector(`[data-background=\"${backgroundId}\"]`);\r\n                if (data.isActive) {\r\n                    button.innerHTML = '<i class=\"fas fa-toggle-on\"></i> Deaktivieren';\r\n                } else {\r\n                    button.innerHTML = '<i class=\"fas fa-toggle-off\"></i> Aktivieren';\r\n                }\r\n            } else {\r\n                console.error('Fehler beim Ãndern des Hintergrunds:', data.message);\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n}\r\n\r\nfunction buyAllBackgrounds() {\r\n    const username = localStorage.getItem('username');\r\n    const buyButton = document.getElementById('buyAllBackgrounds');\r\n\r\n    if (!username) {\r\n        flashButtonRed(buyButton);\r\n        console.error('Bitte melden Sie sich an, um HintergrÃ¼nde zu kaufen.');\r\n        return;\r\n    }\r\n\r\n    const cost = 2;\r\n    const requestBody = { username, background: 'all', cost };\r\n    console.log('Sending buyBackground request:', requestBody);\r\n\r\n    fetch('/buyBackground', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(requestBody)\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('Received buyBackground response:', data);\r\n            if (data.success) {\r\n                console.log('Alle HintergrÃ¼nde gekauft');\r\n                enableAllBackgrounds();\r\n                if (buyButton) {\r\n                    buyButton.style.display = 'none';\r\n                }\r\n                updateCoins(data.coins);\r\n                loadPurchasedBackgrounds();\r\n            } else {\r\n                throw new Error(data.message || 'Unbekannter Fehler beim Kauf der HintergrÃ¼nde');\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Fehler:', error.message);\r\n            flashButtonRed(buyButton);\r\n        });\r\n}\r\n\r\nfunction updateCoins(newCoins) {\r\n    localStorage.setItem('coins', newCoins);\r\n    updateUserDisplay(localStorage.getItem('username'), newCoins);\r\n}\r\n\r\nfunction updateCoinsDisplay() {\r\n    const coinsElement = document.getElementById('coins');\r\n    if (coinsElement) {\r\n        const coins = localStorage.getItem('coins') || '0';\r\n        coinsElement.textContent = coins;\r\n    }\r\n}\r\n\r\nfunction loadCardDesignStatus() {\r\n    const username = localStorage.getItem('username');\r\n    if (!username) {\r\n        console.error('Kein Benutzer angemeldet');\r\n        return;\r\n    }\r\n\r\n    fetch('/checkUserCardDesign', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            const buyButton = document.getElementById('buyCardDesign');\r\n            const togglesContainer = document.getElementById('cardDesignToggles');\r\n\r\n            if (data.purchased) {\r\n                buyButton.style.display = 'none';\r\n                togglesContainer.style.display = 'block';\r\n                updateToggleButtons(data.activeDesign);\r\n            } else {\r\n                buyButton.style.display = 'inline-block';\r\n                togglesContainer.style.display = 'none';\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n}\r\n\r\nfunction updateToggleButtons(activeDesign) {\r\n    const designs = ['default', '1', '2', '3'];\r\n    designs.forEach(designId => {\r\n        const button = document.getElementById(`toggleCardDesign${designId === 'default' ? 'Default' : designId}`);\r\n        if (button) {\r\n            if (designId === activeDesign) {\r\n                button.textContent = ' Deaktivieren';\r\n                button.classList.add('active', 'deactivate');\r\n                addIconToButton(button, 'fas fa-toggle-on');\r\n            } else {\r\n                button.textContent = ' Aktivieren';\r\n                button.classList.remove('active', 'deactivate');\r\n                addIconToButton(button, 'fas fa-toggle-off');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction toggleCardDesign(designId) {\r\n    const username = localStorage.getItem('username');\r\n    if (!username) {\r\n        console.error('Kein Benutzer angemeldet');\r\n        return;\r\n    }\r\n\r\n    fetch('/toggleCardDesign', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username, designId })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                updateToggleButtons(data.activeDesign);\r\n                localStorage.setItem('activeCardDesign', data.activeDesign);\r\n                if (typeof updateCardDesign === 'function') {\r\n                    updateCardDesign();\r\n                }\r\n            } else {\r\n                console.error('Fehler beim Ãndern des Kartendesigns:', data.message);\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n}\r\n\r\nfunction buyCardDesign() {\r\n    const username = localStorage.getItem('username');\r\n    const buyButton = document.getElementById('buyCardDesign');\r\n\r\n    // Verhindere doppelte Klicks\r\n    if (buyButton.disabled) return;\r\n    buyButton.disabled = true;\r\n\r\n    fetch('/buyCardDesign', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('Server response:', data);\r\n            if (data.success) {\r\n                console.log('Kartendesigns gekauft. Neue MÃ¼nzanzahl:', data.coins);\r\n                buyButton.style.display = 'none';\r\n\r\n                document.querySelectorAll('.toggle-button2').forEach(button => {\r\n                    button.style.display = 'block';\r\n                });\r\n\r\n                updateCoins(data.coins);\r\n                updateToggleButtons(data.activeDesign);\r\n                localStorage.setItem('activeCardDesign', data.activeDesign);\r\n            } else {\r\n                throw new Error(data.message || 'Unbekannter Fehler beim Kauf der Kartendesigns');\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Fehler:', error.message);\r\n            flashButtonRed(buyButton);\r\n        })\r\n        .finally(() => {\r\n            buyButton.disabled = false;\r\n        });\r\n}\r\n\r\nfunction flashButtonRed(button) {\r\n    const originalColor = '#4CAF50';\r\n    const originalTransition = button.style.transition;\r\n\r\n    button.style.backgroundColor = 'red';\r\n    button.style.transition = 'background-color 0.5s';\r\n\r\n    setTimeout(() => {\r\n        button.style.backgroundColor = originalColor;\r\n        button.style.transition = originalTransition;\r\n    }, 500);\r\n}\r\n\r\nfunction createPreviewCards() {\r\n    const designs = ['default', '1', '2', '3'];\r\n    designs.forEach(design => {\r\n        const previewContainer = document.getElementById(`preview${design === 'default' ? 'Default' : design}`);\r\n        if (previewContainer) {\r\n            const fireCard = createPreviewCard('Feuer', design);\r\n            const iceCard = createPreviewCard('Eis', design);\r\n            previewContainer.appendChild(fireCard);\r\n            previewContainer.appendChild(iceCard);\r\n        }\r\n    });\r\n}\r\n\r\nfunction createPreviewCard(element, design) {\r\n    const card = document.createElement('div');\r\n    card.classList.add('preview-card', 'card', element.toLowerCase());\r\n    if (design !== 'default') {\r\n        card.classList.add(`premium-design-${design}`);\r\n    }\r\n\r\n    const elementIcon = element === 'Feuer' ? 'fas fa-fire' : 'fas fa-snowflake';\r\n    const cardName = element === 'Feuer' ? 'Feuersturm' : 'Eisschlag';\r\n    const description = element === 'Feuer' ? 'Verbrennt Gegner' : 'Friert Gegner ein';\r\n\r\n    card.innerHTML = `\r\n        <div class=\"card-header\">\r\n            <h3>${cardName}</h3>\r\n            <i class=\"${elementIcon} element-icon ${element.toLowerCase()} ${design !== 'default' ? `premium-design-${design}` : ''}\"></i>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <p><span class=\"stat-label\">HP:</span> <span class=\"stat-value\">100</span></p>\r\n            <p><span class=\"stat-label\">Damage:</span> <span class=\"stat-value\">50</span></p>\r\n            <p><span class=\"stat-label\">Element:</span> <span>${element}</span></p>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n            <p>${description}</p>\r\n        </div>\r\n    `;\r\n    return card;\r\n}\r\n\r\nfunction addIconToButton(button, iconClass) {\r\n    const icon = document.createElement('i');\r\n    icon.className = iconClass;\r\n    button.prepend(icon);\r\n    button.classList.add('icon-button');\r\n}\r\n\r\nfunction checkPurchaseStatus() {\r\n    const username = localStorage.getItem('username');\r\n\r\n    fetch('/checkUserCardDesign', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.purchased) {\r\n\r\n                document.querySelectorAll('.toggle-button2').forEach(button => {\r\n                    button.style.display = 'block';\r\n                });\r\n                document.getElementById('buyCardDesign').style.display = 'none';\r\n\r\n\r\n                updateToggleButtons(data.activeDesign);\r\n                localStorage.setItem('activeCardDesign', data.activeDesign);\r\n            } else {\r\n                document.getElementById('buyCardDesign').style.display = 'block';\r\n                document.querySelectorAll('.toggle-button2').forEach(button => {\r\n                    button.style.display = 'none';\r\n                });\r\n                localStorage.setItem('activeCardDesign', 'default');\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            alert('Ein Fehler ist beim ÃberprÃ¼fen des Kaufstatus aufgetreten: ' + error.message);\r\n        });\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const buyButton = document.getElementById('buyCardDesign');\r\n    if (buyButton) {\r\n        buyButton.addEventListener('click', buyCardDesign);\r\n        addIconToButton(buyButton, 'fas fa-paint-brush');\r\n    }\r\n\r\n    const toggleButtons = document.querySelectorAll('.toggle-button2');\r\n    toggleButtons.forEach(button => {\r\n        button.addEventListener('click', function() {\r\n            const designId = this.getAttribute('data-design');\r\n            toggleCardDesign(designId);\r\n        });\r\n    });\r\n    checkPurchaseStatus();\r\n    createPreviewCards();\r\n    loadCardDesignStatus();\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/build/resources/main/static/shop.js b/../Element-Battle-main-public - Kopie/build/resources/main/static/shop.js
--- a/../Element-Battle-main-public - Kopie/build/resources/main/static/shop.js	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/build/resources/main/static/shop.js	(date 1722152682161)
@@ -207,6 +207,9 @@
         return;
     }
 
+    if (buyButton.disabled) return;
+    buyButton.disabled = true;
+
     const cost = 2;
     const requestBody = { username, background: 'all', cost };
     console.log('Sending buyBackground request:', requestBody);
@@ -244,14 +247,6 @@
     updateUserDisplay(localStorage.getItem('username'), newCoins);
 }
 
-function updateCoinsDisplay() {
-    const coinsElement = document.getElementById('coins');
-    if (coinsElement) {
-        const coins = localStorage.getItem('coins') || '0';
-        coinsElement.textContent = coins;
-    }
-}
-
 function loadCardDesignStatus() {
     const username = localStorage.getItem('username');
     if (!username) {
@@ -334,7 +329,6 @@
     const username = localStorage.getItem('username');
     const buyButton = document.getElementById('buyCardDesign');
 
-    // Verhindere doppelte Klicks
     if (buyButton.disabled) return;
     buyButton.disabled = true;
 
Index: ../Element-Battle-main-public - Kopie/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"39e58791-12f3-4491-8c65-efbdec4ae57e\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.5/executionHistory/executionHistory.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.5/executionHistory/executionHistory.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.5/executionHistory/executionHistory.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.5/executionHistory/executionHistory.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.5/fileHashes/fileHashes.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.5/fileHashes/fileHashes.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.5/fileHashes/fileHashes.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.5/fileHashes/fileHashes.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.5/fileHashes/resourceHashesCache.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.5/fileHashes/resourceHashesCache.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/file-system.probe\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/file-system.probe\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/acc.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/acc.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/back.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/back.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller$4.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller$4.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/libs/acc.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/libs/acc.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/libs/back.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/libs/back.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/libs/cards.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/libs/cards.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/libs/demo1-0.0.1-SNAPSHOT.jar\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/libs/demo1-0.0.1-SNAPSHOT.jar\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/resources/main/static/game.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/resources/main/static/game.js\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/resources/main/static/shop.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/resources/main/static/shop.js\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/tmp/compileJava/previous-compilation-data.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/tmp/compileJava/previous-compilation-data.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cards.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cards.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/demo/Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/demo/Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/static/game.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/static/game.js\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/static/shop.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/static/shop.js\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand />\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"HTML File\" />\r\n        <option value=\"CSS File\" />\r\n        <option value=\"JavaScript File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Haragucci&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Haragucci/Element-Battle.git&quot;,\r\n    &quot;accountId&quot;: &quot;78bd25d2-c366-426a-9a44-d792f3a990ed&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2hLFlfNuUGTGm9MbdKOHC8VYQHf\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,\r\n    &quot;Gradle.Build Element-Battle-main-public.executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Build Element-Battle-main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [assemble].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [bootBuildImage].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [bootJar].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [buildDependents].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [buildEnvironment].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [buildNeeded].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [build].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [check].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [classes].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [clean].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [compileJava].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [compileTestJava].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [components].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [dependencies].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [dependencyInsight].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [dependencyManagement].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [dependentComponents].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [help].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [init].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [jar].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [javaToolchains].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [javadoc].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [model].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [outgoingVariants].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [prepareKotlinBuildScriptModel].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [processResources].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [processTestResources].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [projects].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [properties].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [resolvableConfigurations].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [resolveMainClassName].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [resolveTestMainClassName].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [tasks].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [testClasses].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [test].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.Element-Battle-main [wrapper].executor&quot;: &quot;Run&quot;,\r\n    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,\r\n    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,\r\n    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Spring Boot.Demo1Application.executor&quot;: &quot;Run&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/tillj/Downloads/Element-Battle-main-public/build/libs&quot;,\r\n    &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\tillj\\Downloads\\Element-Battle-main-public\\build\\libs\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\tillj\\Downloads\\Element-Battle-main\\fonts\\fontawesome\" />\r\n      <recent name=\"C:\\Users\\tillj\\Downloads\\Element-Battle-main\\fonts\\fontawesome\\css\" />\r\n      <recent name=\"C:\\Users\\tillj\\Downloads\\Element-Battle-main\\css\" />\r\n      <recent name=\"C:\\Users\\tillj\\Downloads\\Element-Battle-main\" />\r\n      <recent name=\"C:\\Users\\tillj\\Downloads\\Element-Battle-main\\src\\main\\resources\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Spring Boot.Demo1Application\">\r\n    <configuration name=\"Element-Battle-main [check]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\"check\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>false</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Element-Battle-main [prepareKotlinBuildScriptModel]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\"prepareKotlinBuildScriptModel\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>false</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Element-Battle-main [processResources]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\"processResources\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>false</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Element-Battle-main [processTestResources]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\"processTestResources\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>false</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Element-Battle-main [test]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\"test\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>false</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Demo1Application\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"demo1.main\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.example.demo.Demo1Application\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Gradle.Element-Battle-main [test]\" />\r\n        <item itemvalue=\"Gradle.Element-Battle-main [check]\" />\r\n        <item itemvalue=\"Gradle.Element-Battle-main [processTestResources]\" />\r\n        <item itemvalue=\"Gradle.Element-Battle-main [processResources]\" />\r\n        <item itemvalue=\"Gradle.Element-Battle-main [prepareKotlinBuildScriptModel]\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"39e58791-12f3-4491-8c65-efbdec4ae57e\" name=\"Changes\" comment=\"\" />\r\n      <created>1717365603719</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1717365603719</updated>\r\n      <workItem from=\"1717365605812\" duration=\"24000\" />\r\n      <workItem from=\"1717365637422\" duration=\"131000\" />\r\n      <workItem from=\"1717365613375\" duration=\"13461000\" />\r\n      <workItem from=\"1717365620890\" duration=\"1850000\" />\r\n      <workItem from=\"1717365624875\" duration=\"76000\" />\r\n      <workItem from=\"1717365608562\" duration=\"479000\" />\r\n      <workItem from=\"1720763735321\" duration=\"6000\" />\r\n      <workItem from=\"1717365607562\" duration=\"8064000\" />\r\n      <workItem from=\"1717365610437\" duration=\"24429000\" />\r\n      <workItem from=\"1717365616484\" duration=\"15619000\" />\r\n      <workItem from=\"1717365615266\" duration=\"5529000\" />\r\n      <workItem from=\"1717365610672\" duration=\"2862000\" />\r\n      <workItem from=\"1717368701125\" duration=\"705000\" />\r\n      <workItem from=\"1717365614484\" duration=\"4582000\" />\r\n      <workItem from=\"1717365615578\" duration=\"4594000\" />\r\n      <workItem from=\"1717365610562\" duration=\"857000\" />\r\n      <workItem from=\"1717365620047\" duration=\"2157000\" />\r\n      <workItem from=\"1717365625094\" duration=\"141000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/.idea/workspace.xml b/../Element-Battle-main-public - Kopie/.idea/workspace.xml
--- a/../Element-Battle-main-public - Kopie/.idea/workspace.xml	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/.idea/workspace.xml	(date 1725553626532)
@@ -11,22 +11,48 @@
       <change beforePath="$PROJECT_DIR$/.gradle/8.5/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.5/fileHashes/fileHashes.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/8.5/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.5/fileHashes/resourceHashesCache.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/acc.json" beforeDir="false" afterPath="$PROJECT_DIR$/acc.json" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/back.json" beforeDir="false" afterPath="$PROJECT_DIR$/back.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller$1.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller$2.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller$2.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller$3.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller$3.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller$4.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller$4.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller$Account.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller$Account.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller$Hero.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller$Hero.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/com/example/demo/Controller.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/build/libs/acc.json" beforeDir="false" afterPath="$PROJECT_DIR$/build/libs/acc.json" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/build/libs/back.json" beforeDir="false" afterPath="$PROJECT_DIR$/build/libs/back.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/libs/cards.json" beforeDir="false" afterPath="$PROJECT_DIR$/build/libs/cards.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/libs/cards.json" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/build/libs/demo1-0.0.1-SNAPSHOT.jar" beforeDir="false" afterPath="$PROJECT_DIR$/build/libs/demo1-0.0.1-SNAPSHOT.jar" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/libs/heros.json" beforeDir="false" afterPath="$PROJECT_DIR$/build/libs/heros.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/resources/main/static/account.css" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/main/static/account.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/resources/main/static/account.html" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/main/static/account.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/resources/main/static/account.js" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/main/static/account.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/resources/main/static/card-design-preview.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/resources/main/static/game.css" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/main/static/game.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/resources/main/static/game.html" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/main/static/game.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/build/resources/main/static/game.js" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/main/static/game.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/resources/main/static/heroshow.html" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/main/static/heroshow.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/resources/main/static/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/main/static/index.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build/resources/main/static/script.js" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/main/static/script.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/build/resources/main/static/shop.js" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/main/static/shop.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/build/tmp/compileJava/previous-compilation-data.bin" beforeDir="false" afterPath="$PROJECT_DIR$/build/tmp/compileJava/previous-compilation-data.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/cards.json" beforeDir="false" afterPath="$PROJECT_DIR$/cards.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/heros.json" beforeDir="false" afterPath="$PROJECT_DIR$/heros.json" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/demo/Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/demo/Controller.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/static/account.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/static/account.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/static/account.html" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/static/account.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/static/account.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/static/account.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/static/card-design-preview.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/static/game.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/static/game.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/static/game.html" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/static/game.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/resources/static/game.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/static/game.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/static/heroshow.html" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/static/heroshow.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/static/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/static/index.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/static/script.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/static/script.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/resources/static/shop.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/static/shop.js" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -47,7 +73,12 @@
         </task>
         <projects_view>
           <tree_state>
-            <expand />
+            <expand>
+              <path>
+                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
+                <item name="demo1" type="f1a62948:ProjectNode" />
+              </path>
+            </expand>
             <select />
           </tree_state>
         </projects_view>
@@ -93,6 +124,7 @@
   <component name="PropertiesComponent">{
   &quot;keyToString&quot;: {
     &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
+    &quot;Gradle.Build Element-Battle-main-public - Kopie.executor&quot;: &quot;Run&quot;,
     &quot;Gradle.Build Element-Battle-main-public.executor&quot;: &quot;Run&quot;,
     &quot;Gradle.Build Element-Battle-main.executor&quot;: &quot;Run&quot;,
     &quot;Gradle.Element-Battle-main [assemble].executor&quot;: &quot;Run&quot;,
@@ -141,7 +173,7 @@
     &quot;git-widget-placeholder&quot;: &quot;main&quot;,
     &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
     &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/tillj/Downloads/Element-Battle-main-public/build/libs&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/tillj/Downloads/Element-Battle-main-public&quot;,
     &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
@@ -151,6 +183,7 @@
     &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
     &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
     &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.customizations&quot;,
     &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
 }</component>
@@ -320,6 +353,34 @@
       <workItem from="1717365610562" duration="857000" />
       <workItem from="1717365620047" duration="2157000" />
       <workItem from="1717365625094" duration="141000" />
+      <workItem from="1717365614750" duration="801000" />
+      <workItem from="1717365613235" duration="6086000" />
+      <workItem from="1717365610843" duration="2903000" />
+      <workItem from="1717365615875" duration="1151000" />
+      <workItem from="1717365608484" duration="520000" />
+      <workItem from="1717365618297" duration="3156000" />
+      <workItem from="1717365613781" duration="78000" />
+      <workItem from="1717365615828" duration="440000" />
+      <workItem from="1717365608344" duration="4171000" />
+      <workItem from="1717365615797" duration="552000" />
+      <workItem from="1717365609719" duration="5640000" />
+      <workItem from="1717365626266" duration="1158000" />
+      <workItem from="1717365609875" duration="64000" />
+      <workItem from="1717365905718" duration="23000" />
+      <workItem from="1717367372218" duration="18000" />
+      <workItem from="1717365642875" duration="1108000" />
+      <workItem from="1717365626047" duration="3505000" />
+      <workItem from="1717365621781" duration="9142000" />
+      <workItem from="1717370112734" duration="643000" />
+      <workItem from="1717365611453" duration="673000" />
+      <workItem from="1717365632828" duration="35000" />
+      <workItem from="1717365614750" duration="164000" />
+      <workItem from="1717366215203" duration="22000" />
+      <workItem from="1717365823453" duration="138000" />
+      <workItem from="1717368213672" duration="242000" />
+      <workItem from="1717370872078" duration="104000" />
+      <workItem from="1717365625907" duration="46000" />
+      <workItem from="1717365627032" duration="163000" />
     </task>
     <servers />
   </component>
Index: ../Element-Battle-main-public - Kopie/build/resources/main/static/account.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@keyframes fadeIn {\r\n    from { opacity: 0; }\r\n    to { opacity: 1; }\r\n}\r\n\r\n@keyframes fall {\r\n    to {\r\n        transform: translateY(100vh) rotate(720deg);\r\n    }\r\n}\r\n\r\n@keyframes slideIn {\r\n    from { transform: translateY(-20px); opacity: 0; }\r\n    to { transform: translateY(0); opacity: 1; }\r\n}\r\n\r\n@keyframes blink-success {\r\n    0% {\r\n        background-color: #fff;\r\n        transform: scale(1);\r\n    }\r\n    50% {\r\n        background-color: yellowgreen;\r\n        transform: scale(1.2);\r\n    }\r\n    100% {\r\n        background-color: #fff;\r\n        transform: scale(1);\r\n    }\r\n}\r\n\r\n.save-success {\r\n    animation: blink-success 2s ease-in-out;\r\n}\r\n\r\nbody {\r\n    font-family: 'Roboto', sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: #f4f4f9;\r\n    color: #333;\r\n    min-height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\nheader {\r\n    background-color: #4CAF50;\r\n    color: #fff;\r\n    padding: 10px 0;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nheader nav {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 20px;\r\n    max-width: 100%;\r\n    margin: 0 auto;\r\n}\r\n\r\n.nav-left {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.logo {\r\n    height: 40px;\r\n    margin-right: 15px;\r\n}\r\n\r\n.nav-title {\r\n    margin: 0;\r\n    font-size: 1.5em;\r\n    font-weight: 500;\r\n}\r\n\r\n.nav-buttons .but {\r\n    background-color: #ffffff;\r\n    color: #4CAF50;\r\n    margin-left: auto;\r\n    border: none;\r\n    padding: 8px 15px;\r\n    border-radius: 20px;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.nav-buttons .but:hover {\r\n    background-color: #e8f5e9;\r\n    transform: translateY(-2px);\r\n}\r\n\r\n.nav-buttons .but i {\r\n    margin-right: 5px;\r\n}\r\n\r\nmain {\r\n    flex-grow: 0.4;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 20px 20px;\r\n}\r\n\r\n.account-container {\r\n    background: #ffffff;\r\n    padding: 30px;\r\n    border-radius: 10px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    width: 100%;\r\n    max-width: 400px;\r\n    animation: fadeIn 0.5s ease-out;\r\n    border: 2px solid #4CAF50;\r\n}\r\n\r\nh2 {\r\n    margin-bottom: 30px;\r\n    font-size: 24px;\r\n    color: #333;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    animation: slideIn 0.5s ease-out;\r\n}\r\n\r\n.input-group {\r\n    margin-bottom: 25px;\r\n    animation: slideIn 0.5s ease-out;\r\n}\r\n\r\nlabel {\r\n    display: block;\r\n    margin-bottom: 8px;\r\n    font-size: 14px;\r\n    color: #555;\r\n    font-weight: 500;\r\n}\r\n\r\n.input-wrapper {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.input-icon {\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    color: #4CAF50;\r\n    z-index: 1;\r\n}\r\n\r\ninput[type=\"text\"], input[type=\"password\"] {\r\n    width: 100%;\r\n    padding: 10px 40px 10px 35px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n    font-size: 16px;\r\n    transition: border-color 0.3s ease, box-shadow 0.3s ease;\r\n    position: relative;\r\n    z-index: 2;\r\n    background-color: transparent;\r\n}\r\n\r\ninput[type=\"text\"]:focus, input[type=\"password\"]:focus,\r\ninput[type=\"text\"].editing, input[type=\"password\"].editing {\r\n    border-color: #4CAF50;\r\n    outline: none;\r\n    box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\r\n}\r\n\r\n.edit-btn, .toggle-password {\r\n    background: none;\r\n    border: none;\r\n    color: #4CAF50;\r\n    cursor: pointer;\r\n    font-size: 18px;\r\n    padding: 5px;\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    transition: color 0.3s ease, transform 0.3s ease;\r\n    z-index: 3;\r\n}\r\n\r\n.edit-btn:hover, .toggle-password:hover {\r\n    color: #45a049;\r\n    transform: translateY(-50%) scale(1.1);\r\n}\r\n\r\n.toggle-password {\r\n    right: 40px;\r\n}\r\n\r\n.save-btn {\r\n    width: 100%;\r\n    padding: 12px;\r\n    background: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    transition: background 0.3s ease, transform 0.3s ease;\r\n    font-weight: 500;\r\n    animation: slideIn 0.5s ease-out;\r\n}\r\n\r\n.save-btn:hover:not(:disabled) {\r\n    background: #45a049;\r\n    transform: translateY(-2px);\r\n}\r\n\r\n.save-btn:disabled {\r\n    background: #cccccc;\r\n    cursor: not-allowed;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n    .form-container {\r\n        padding: 20px;\r\n    }\r\n\r\n    h2 {\r\n        font-size: 20px;\r\n    }\r\n\r\n    input[type=\"text\"], input[type=\"password\"] {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .save-btn {\r\n        font-size: 14px;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/build/resources/main/static/account.css b/../Element-Battle-main-public - Kopie/build/resources/main/static/account.css
--- a/../Element-Battle-main-public - Kopie/build/resources/main/static/account.css	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/build/resources/main/static/account.css	(date 1722152682112)
@@ -101,22 +101,84 @@
 }
 
 main {
-    flex-grow: 0.4;
+    flex-grow: 1;
+    display: flex;
+    justify-content: center;
+    align-items: flex-start;
+    padding: 40px 20px;
+}
+
+.content-wrapper {
     display: flex;
+    flex-wrap: wrap;
     justify-content: center;
-    align-items: center;
-    padding: 20px 20px;
-}
+    gap: 40px;
+    max-width: 1200px;
+    width: 100%;
+}
+
+.leaderboard-container {
+    background: #ffffff;
+    padding: 30px;
+    border-radius: 10px;
+    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
+    width: 100%;
+    max-width: 400px;
+    animation: fadeIn 0.5s ease-out;
+    transition: transform 0.3s ease, box-shadow 0.3s ease;
+}
+
+.leaderboard-container:hover {
+    transform: translateY(-5px);
+    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
+}
+
+#leaderboardTable {
+    width: 100%;
+    border-collapse: collapse;
+}
+
+#leaderboardTable th, #leaderboardTable td {
+    padding: 10px;
+    text-align: left;
+    border-bottom: 1px solid #eee;
+}
+
+#leaderboardTable th {
+    background-color: #f8f8f8;
+    font-weight: bold;
+    color: #4CAF50;
+}
+
+#leaderboardTable tr:hover {
+    background-color: #f5f5f5;
+}
+
+@media (max-width: 1200px) {
+    .content-wrapper {
+        flex-direction: column;
+        align-items: center;
+    }
 
-.account-container {
+    .account-container, .stats-container, .leaderboard-container {
+        max-width: 100%;
+    }
+}
+
+.account-container, .stats-container {
     background: #ffffff;
     padding: 30px;
     border-radius: 10px;
-    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
+    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
     width: 100%;
     max-width: 400px;
     animation: fadeIn 0.5s ease-out;
-    border: 2px solid #4CAF50;
+    border: none;
+    transition: transform 0.3s ease, box-shadow 0.3s ease;
+}
+
+.account-container:hover, .stats-container:hover {
+    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
 }
 
 h2 {
@@ -223,6 +285,25 @@
     cursor: not-allowed;
 }
 
+#statsContent {
+    display: grid;
+    grid-template-columns: repeat(2, 1fr);
+    gap: 10px;
+}
+
+.stat-label {
+    font-weight: 500;
+    color: #4CAF50;
+    margin-bottom: 5px;
+    font-size: 14px;
+}
+
+.stat-value {
+    font-size: 24px;
+    font-weight: 700;
+    color: #333;
+}
+
 @media (max-width: 600px) {
     .form-container {
         padding: 20px;
Index: ../Element-Battle-main-public - Kopie/build/resources/main/static/game.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"de\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <link rel=\"shortcut icon\" type=\"x-icon\" href=\"3104645.png\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Element Battle</title>\r\n    <link rel=\"stylesheet\" href=\"game.css\">\r\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" rel=\"stylesheet\">\r\n<body>\r\n<header>\r\n    <nav>\r\n        <div class=\"nav-left\">\r\n            <img src=\"3104645.png\" alt=\"Logo\" class=\"logo\">\r\n            <h1 class=\"nav-title\">Element Battle</h1>\r\n        </div>\r\n        <div class=\"nav-buttons\">\r\n            <button id=\"shopButton\" class=\"but\" onclick=\"window.location.href='shop.html'\">\r\n                <i class=\"fas fa-store\"></i> Shop\r\n            </button>\r\n            <button onclick=\"window.location.href='index.html'\" id=\"backbutton\" class=\"but\">\r\n                <i class=\"fas fa-users\"></i> Heldenverwaltung\r\n            </button>\r\n        </div>\r\n        <div class=\"nav-right\">\r\n            <span id=\"userInfo\" style=\"display: none;\">\r\n                <span id=\"username\"></span>\r\n            </span>\r\n            <div id=\"authButtons\">\r\n                <button class=\"but\" onclick=\"window.location.href='login.html#login'\" id=\"loginButton\">\r\n                    <i class=\"fas fa-sign-in-alt\"></i> Anmelden\r\n                </button>\r\n                <button class=\"but\" onclick=\"window.location.href='login.html#register'\" id=\"registerButton\">\r\n                    <i class=\"fas fa-user-plus\"></i> Registrieren\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n</header>\r\n\r\n<main>\r\n    <div class=\"game-container\">\r\n        <div class=\"side-panel left-panel\">\r\n            <div class=\"game-info\">\r\n                <h2>Spieler vs. Computer</h2>\r\n                <div class=\"hp-container\">\r\n                    <div class=\"hp-bar\">\r\n                        <div id=\"player-hp-bar\" class=\"hp-fill\"></div>\r\n                    </div>\r\n                    <p id=\"player-hp\">Spieler HP: <span id=\"player-hp-value\">25</span></p>\r\n                </div>\r\n                <div class=\"hp-container\">\r\n                    <div class=\"hp-bar\">\r\n                        <div id=\"computer-hp-bar\" class=\"hp-fill\"></div>\r\n                    </div>\r\n                    <p id=\"computer-hp\">Computer HP: <span id=\"computer-hp-value\">25</span></p>\r\n                </div>\r\n                <p id=\"turn-info\" class=\"turn-info\">WÃ¤hle eine Karte aus.</p>\r\n            </div>\r\n            <div class=\"element-info\">\r\n                <h3>Elementbeziehungen</h3>\r\n                <ul>\r\n                    <li><span class=\"element-relationship feuer\">Feuer</span> > <span class=\"element-relationship pflanze\">Pflanze</span></li>\r\n                    <li><span class=\"element-relationship wasser\">Wasser</span> > <span class=\"element-relationship feuer\">Feuer</span></li>\r\n                    <li><span class=\"element-relationship pflanze\">Pflanze</span> > <span class=\"element-relationship wasser\">Wasser</span></li>\r\n                    <li><span class=\"element-relationship elektro\">Elektro</span> > <span class=\"element-relationship wasser\">Wasser</span></li>\r\n                    <li><span class=\"element-relationship erde\">Erde</span> > <span class=\"element-relationship elektro\">Elektro</span></li>\r\n                    <li><span class=\"element-relationship luft\">Luft</span> > <span class=\"element-relationship erde\">Erde</span></li>\r\n                    <li><span class=\"element-relationship eis\">Eis</span> > <span class=\"element-relationship luft\">Luft</span></li>\r\n                </ul>\r\n\r\n\r\n                <h3>Schadensberechnung</h3>\r\n                <ul>\r\n                    <li>Effektiver Angriff: 1.5x Schaden</li>\r\n                    <li>Ineffektiver Angriff: 0.5x Schaden</li>\r\n                    <li>Normaler Angriff: 1x Schaden</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div class=\"center-panel\">\r\n            <div class=\"computer-cards\">\r\n\r\n            </div>\r\n            <div class=\"game-board\">\r\n                <div id=\"computer-field\" class=\"computer-field\">\r\n\r\n                </div>\r\n                <div id=\"player-field\" class=\"player-field\">\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"player-cards\">\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"side-panel right-panel\">\r\n            <h2>Kampfprotokoll</h2>\r\n            <div id=\"battle-log\"></div>\r\n        </div>\r\n    </div>\r\n</main>\r\n\r\n<script>\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n        const username = localStorage.getItem('username');\r\n        if (username) {\r\n            fetch('/getBackground', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ username })\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success && data.background) {\r\n                        const backgroundUrl = `url('${data.background}.gif')`;\r\n                        document.querySelector('.player-field').style.backgroundImage = backgroundUrl;\r\n                        document.querySelector('.computer-field').style.backgroundImage = backgroundUrl;\r\n                    } else {\r\n                        console.log('Kein Hintergrund gefunden oder Fehler:', data.message);\r\n                    }\r\n                })\r\n                .catch(error => console.error('Error:', error));\r\n        }\r\n    });\r\n</script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js\"></script>\r\n<script src=\"game.js\"></script>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/build/resources/main/static/game.html b/../Element-Battle-main-public - Kopie/build/resources/main/static/game.html
--- a/../Element-Battle-main-public - Kopie/build/resources/main/static/game.html	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/build/resources/main/static/game.html	(date 1722152682136)
@@ -84,7 +84,6 @@
             </div>
             <div class="game-board">
                 <div id="computer-field" class="computer-field">
-
                 </div>
                 <div id="player-field" class="player-field">
 
Index: ../Element-Battle-main-public - Kopie/build/resources/main/static/script.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>document.addEventListener(\"DOMContentLoaded\", function() {\r\n    const createProfilesButton = document.getElementById(\"create-profiles-button\");\r\n\r\n    createProfilesButton.addEventListener(\"click\", function() {\r\n        fetch(\"/createProfiles\")\r\n            .then(response => response.text())\r\n            .then(data => {\r\n                createProfilesButton.classList.add('blink-success');\r\n                setTimeout(() => createProfilesButton.classList.remove('blink-success'), 1000);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Fehler beim Erstellen der Profile:\", error);\r\n            });\r\n    });\r\n\r\n    document.getElementById('hero-form').addEventListener('submit', function(event) {\r\n        event.preventDefault();\r\n\r\n        const nameInput = document.getElementById('name');\r\n        const name = nameInput.value;\r\n        const HP = document.getElementById('HP').value;\r\n        const Damage = document.getElementById('Damage').value;\r\n        const type = document.getElementById('type').value;\r\n        const extra = document.getElementById('extra').value;\r\n\r\n        if (!name) {\r\n            alert('Name darf nicht leer sein!');\r\n            nameInput.classList.add('blink-error');\r\n            setTimeout(() => nameInput.classList.remove('blink-error'), 1000);\r\n            return;\r\n        }\r\n\r\n        const hero = {\r\n            name: name,\r\n            HP: parseInt(HP) || 0,\r\n            Damage: parseInt(Damage) || 0,\r\n            type: type,\r\n            extra: extra\r\n        };\r\n        if (hero.HP <= 0){\r\n            hero.HP = 0;\r\n        }\r\n\r\n        fetch('/hero', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(hero)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok ' + response.statusText);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log('Success:', data);\r\n                document.getElementById('hero-form').reset();\r\n                const formContainer = document.querySelector('.form-container');\r\n                formContainer.classList.remove('blink-error');\r\n                formContainer.classList.add('blink-success');\r\n                setTimeout(() => formContainer.classList.remove('blink-success'), 1000);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                const formContainer = document.querySelector('.form-container');\r\n                formContainer.classList.remove('blink-success');\r\n                formContainer.classList.add('blink-error');\r\n                setTimeout(() => formContainer.classList.remove('blink-error'), 1000);\r\n            });\r\n    });\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/build/resources/main/static/script.js b/../Element-Battle-main-public - Kopie/build/resources/main/static/script.js
--- a/../Element-Battle-main-public - Kopie/build/resources/main/static/script.js	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/build/resources/main/static/script.js	(date 1722152682155)
@@ -4,7 +4,8 @@
     createProfilesButton.addEventListener("click", function() {
         fetch("/createProfiles")
             .then(response => response.text())
-            .then(data => {
+            .then(data=> {
+                data.includes("");//Nur damit keine Fehler angezeigt werden ;D
                 createProfilesButton.classList.add('blink-success');
                 setTimeout(() => createProfilesButton.classList.remove('blink-success'), 1000);
             })
Index: ../Element-Battle-main-public - Kopie/build/resources/main/static/game.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@keyframes shake {\r\n    0%, 100% { transform: translateX(0); }\r\n    10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }\r\n    20%, 40%, 60%, 80% { transform: translateX(5px); }\r\n}\r\n\r\n@keyframes flash {\r\n    0%, 50%, 100% {\r\n        opacity: 1;\r\n    }\r\n    25%, 75% {\r\n        opacity: 0;\r\n    }\r\n}\r\n\r\n@keyframes fall {\r\n    to {\r\n        transform: translateY(100vh) rotate(720deg);\r\n    }\r\n}\r\n\r\n.elemental-sphere.fire { background-color: red; }\r\n.elemental-sphere.water { background-color: blue; }\r\n.elemental-sphere.lightning { background-color: yellow; }\r\n.elemental-sphere.earth { background-color: brown; }\r\n.elemental-sphere.air { background-color: white; }\r\n\r\nbody {\r\n    font-family: 'Roboto', sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: #f4f4f9;\r\n    color: #333;\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\nheader {\r\n    height: 45px;\r\n    width: 100%;\r\n    background-color: #4CAF50;\r\n    color: #fff;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1000;\r\n    padding: 8px 0;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nheader nav {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 20px;\r\n}\r\n\r\n.nav-left {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.logout-button {\r\n    margin-left: 15px;\r\n    background-color: #ff4136;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 15px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n}\r\n\r\n.logo {\r\n    height: 40px;\r\n    margin-right: 10px;\r\n}\r\n\r\n.nav-title {\r\n    margin: 0;\r\n    font-size: 1.5em;\r\n}\r\n\r\n.nav-buttons,\r\n.nav-right {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n.nav-buttons {\r\n    justify-content: center;\r\n}\r\n\r\n#userInfo {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 10px;\r\n}\r\n\r\n#authButtons {\r\n    display: flex;\r\n}\r\n\r\n.nav-buttons .but:hover,\r\n.nav-right .but:hover {\r\n    background-color: #e8f5e9;\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.nav-buttons .but i,\r\n.nav-right .but i {\r\n    margin-right: 5px;\r\n}\r\n\r\n#logoutButton {\r\n    background-color: #f44336;\r\n    color: #ffffff;\r\n}\r\n\r\n#logoutButton:hover {\r\n    background-color: #d32f2f;\r\n}\r\n\r\n.username-text {\r\n    margin-right: 15px;\r\n}\r\n\r\n#username, #coins {\r\n    margin-right: 10px;\r\n    font-weight: bold;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .nav-right {\r\n        flex-direction: column;\r\n        align-items: flex-end;\r\n    }\r\n\r\n    #userInfo, #authButtons {\r\n        margin-top: 5px;\r\n    }\r\n\r\n    .nav-buttons .but,\r\n    .nav-right .but {\r\n        font-size: 12px;\r\n        padding: 6px 12px;\r\n    }\r\n}\r\n\r\nmain {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    flex: 1;\r\n    display: flex;\r\n    padding-top: 40px;\r\n}\r\n\r\n.game-container {\r\n    display: flex;\r\n    width: 100%;\r\n    height: calc(100vh - 68px);\r\n}\r\n\r\n.side-panel {\r\n    width: 20%;\r\n    padding: 20px;\r\n    background-color: #fff;\r\n    box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n    overflow-y: auto;\r\n}\r\n\r\n.left-panel {\r\n    order: 1;\r\n}\r\n\r\n.right-panel {\r\n    order: 3;\r\n}\r\n\r\n.center-panel {\r\n    flex: 1;\r\n    order: 2;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    padding: 25px;\r\n}\r\n\r\n.game-info {\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.hp-container {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.hp-bar {\r\n    width: 100%;\r\n    height: 20px;\r\n    background-color: #e0e0e0;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n}\r\n\r\n.hp-fill {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #4CAF50;\r\n    transition: width 0.5s ease-in-out;\r\n}\r\n\r\n.turn-info {\r\n    font-size: 1.2em;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    margin-top: 20px;\r\n}\r\n\r\n.element-info {\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    margin-top: 20px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.element-info ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\n.element-info li {\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.element-relationship {\r\n    display: inline-block;\r\n    padding: 2px 5px;\r\n    border-radius: 3px;\r\n    margin: 2px;\r\n    font-weight: bold;\r\n}\r\n\r\n\r\n.computer-cards, .player-cards {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: nowrap;\r\n}\r\n\r\n.game-board {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex: 1;\r\n}\r\n\r\n@keyframes borderGradient {\r\n    0% {\r\n        border-color: #ff0000;\r\n        box-shadow: 0 0 10px #ff0000;\r\n    }\r\n    25% {\r\n        border-color: #00ff00;\r\n        box-shadow: 0 0 10px #00ff00;\r\n    }\r\n    50% {\r\n        border-color: #0000ff;\r\n        box-shadow: 0 0 10px #0000ff;\r\n    }\r\n    75% {\r\n        border-color: #ff00ff;\r\n        box-shadow: 0 0 10px #ff00ff;\r\n    }\r\n    100% {\r\n        border-color: #ff0000;\r\n        box-shadow: 0 0 10px #ff0000;\r\n    }\r\n}\r\n\r\n@keyframes shimmer {\r\n    0% {\r\n        border-image: linear-gradient(45deg, #ff0000, #00ff00, #0000ff, #ff00ff) 1;\r\n    }\r\n    100% {\r\n        border-image: linear-gradient(45deg, #ff00ff, #0000ff, #00ff00, #ff0000) 1;\r\n    }\r\n}\r\n\r\n.player-field, .computer-field {\r\n    width: 45%;\r\n    height: 250px;\r\n    background-color: #fff;\r\n    border: 2px solid;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    animation: borderGradient 3s infinite, shimmer 6s infinite linear;\r\n    border-image-slice: 1;\r\n}\r\n\r\n.card {\r\n    width: 7.5rem;\r\n    height: 11.25rem;\r\n    padding: 0.625rem;\r\n    margin: 0.625rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    font-size: 0.75rem;\r\n    border: 1px solid #ccc;\r\n    border-radius: 0.3125rem;\r\n    cursor: pointer;\r\n    box-shadow: 0 0.125rem 0.3125rem rgba(0,0,0,0.1);\r\n    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n}\r\n\r\n.card:hover {\r\n    transform: translateY(-0.125rem);\r\n    box-shadow: 0 0.25rem 0.5rem rgba(0,0,0,0.2);\r\n}\r\n\r\n.card-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    margin-bottom: 0.375rem;\r\n}\r\n\r\n.card-name {\r\n    font-size: 1.07em;\r\n    margin: 0;\r\n    max-width: 70%;\r\n    word-wrap: break-word;\r\n    line-height: 1.2;\r\n}\r\n\r\n.element-icon {\r\n    font-size: 1.4em;\r\n}\r\n\r\n.card-body {\r\n    flex-grow: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n}\r\n\r\n.stat {\r\n    font-size: 1.1em;\r\n    margin: 0.25rem 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n\r\n.stat-label {\r\n    font-weight: bold;\r\n}\r\n\r\n.stat-value {\r\n    font-weight: normal;\r\n}\r\n\r\n.card-footer {\r\n    margin-top: 0.375rem;\r\n}\r\n\r\n.description {\r\n    font-size: 1.1em;\r\n    text-align: left;\r\n    line-height: 1.2;\r\n}\r\n\r\n.card .element-icon.feuer { color: #fff; }\r\n.card .element-icon.wasser { color: #fff; }\r\n.card .element-icon.pflanze { color: #000; }\r\n.card .element-icon.elektro { color: #000; }\r\n.card .element-icon.erde { color: #fff; }\r\n.card .element-icon.eis { color: #000; }\r\n.card .element-icon.luft { color: #000; }\r\n\r\n.card.premium-design-1 .element-icon.feuer { color: #fff5f5; }\r\n.card.premium-design-1 .element-icon.wasser { color: #f0f8ff; }\r\n.card.premium-design-1 .element-icon.pflanze { color: #e0ffe0; }\r\n.card.premium-design-1 .element-icon.elektro { color: #804000; }\r\n.card.premium-design-1 .element-icon.erde { color: #ffcccb; }\r\n.card.premium-design-1 .element-icon.eis { color: #1e3d59; }\r\n.card.premium-design-1 .element-icon.luft { color: #4169e1; }\r\n\r\n.card.premium-design-2 .element-icon.feuer { color: #fff5f5; }\r\n.card.premium-design-2 .element-icon.wasser { color: #f0f8ff; }\r\n.card.premium-design-2 .element-icon.pflanze { color: #e0ffe0; }\r\n.card.premium-design-2 .element-icon.elektro { color: #804000; }\r\n.card.premium-design-2 .element-icon.erde { color: #ffcccb; }\r\n.card.premium-design-2 .element-icon.eis { color: #1e3d59; }\r\n.card.premium-design-2 .element-icon.luft { color: #4169e1; }\r\n\r\n.card.premium-design-3 .element-icon.feuer { color: #8b0000; }\r\n.card.premium-design-3 .element-icon.wasser { color: #00008b; }\r\n.card.premium-design-3 .element-icon.pflanze { color: #006400; }\r\n.card.premium-design-3 .element-icon.elektro { color: #ff8c00; }\r\n.card.premium-design-3 .element-icon.erde { color: #8b4513; }\r\n.card.premium-design-3 .element-icon.eis { color: #4682b4; }\r\n.card.premium-design-3 .element-icon.luft { color: #4169e1; }\r\n\r\n#battle-log {\r\n    height: calc(100% - 40px);\r\n    overflow-y: auto;\r\n    padding: 10px;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.battle-log-entry {\r\n    margin-bottom: 20px;\r\n    padding: 15px;\r\n    border-radius: 5px;\r\n    background-color: #f9f9f9;\r\n    border: 1px solid #ddd;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    white-space: pre-line;\r\n    font-family: 'Courier New', monospace;\r\n}\r\n\r\n.battle-log-entry.player {\r\n    border-left: 4px solid #4CAF50;\r\n}\r\n\r\n.battle-log-entry.computer {\r\n    border-left: 4px solid #f44336;\r\n}\r\n\r\n.damage-indicator {\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    color: red;\r\n    text-shadow: 1px 1px 1px black;\r\n    animation: fadeOut 1s forwards;\r\n    z-index: 10;\r\n}\r\n\r\n@keyframes fadeOut {\r\n    from { opacity: 1; transform: translateY(0) translateX(-50%); }\r\n    to { opacity: 0; transform: translateY(-20px) translateX(-50%); }\r\n}\r\n\r\n\r\n.card.selected {\r\n    transform: scale(1.05);\r\n    box-shadow: 0 0 20px rgba(0,0,0,0.2);\r\n}\r\n\r\n@keyframes cardAttack {\r\n    0% { transform: translateX(0); }\r\n    50% { transform: translateX(20px); }\r\n    100% { transform: translateX(0); }\r\n}\r\n\r\n.attack-animation {\r\n    animation: cardAttack 0.5s ease-in-out;\r\n}\r\n\r\n@keyframes cardDamage {\r\n    0% { transform: translateX(0); }\r\n    25% { transform: translateX(-5px); }\r\n    50% { transform: translateX(5px); }\r\n    75% { transform: translateX(-5px); }\r\n    100% { transform: translateX(0); }\r\n}\r\n\r\n.damage-animation {\r\n    animation: cardDamage 0.5s ease-in-out;\r\n}\r\n\r\n.card.feuer { background-color: #ff6b6b; color: #fff; }\r\n.card.wasser { background-color: #0077be; color: #fff; }\r\n.card.pflanze { background-color: #00ff87; color: #000; }\r\n.card.elektro { background-color: #ffeb3b; color: #000; }\r\n.card.erde { background-color: #a77979; color: #fff; }\r\n.card.eis { background-color: #00c9ff; color: #000; }\r\n.card.luft { background-color: #87cefa; color: #000; }\r\n\r\n.card.premium-design-1.feuer { background: radial-gradient(circle at top left, #ff5f6d, transparent), linear-gradient(135deg, #ff512f, #dd2476); color: #ffebeb; }\r\n.card.premium-design-1.wasser { background: radial-gradient(circle at bottom right, #00bfff, transparent), linear-gradient(135deg, #0077be, #001f3f); color: #e6f7ff; }\r\n.card.premium-design-1.pflanze { background: radial-gradient(circle at top right, #00e676, transparent), linear-gradient(135deg, #00ff87, #009245); color: #d0ffd0; }\r\n.card.premium-design-1.elektro { background: radial-gradient(circle at center, #ffef9f, transparent), linear-gradient(135deg, #ffd700, #f4c542); color: #805000; }\r\n.card.premium-design-1.erde { background: radial-gradient(circle at bottom left, #b5651d, transparent), linear-gradient(135deg, #a77979, #4b3832); color: #ffedcc; }\r\n.card.premium-design-1.eis { background: radial-gradient(circle at center, #00d4ff, transparent), linear-gradient(135deg, #00d4ff, #92fe9d); color: #1e3d59; }\r\n.card.premium-design-1.luft { background: radial-gradient(circle at top left, #87cefa, transparent), linear-gradient(135deg, #87cefa, #f0f8ff); color: #3a5fcd; }\r\n\r\n\r\n\r\n.card.premium-design-2.feuer { background: radial-gradient(circle, #ff6b6b, #ff1e56); color: #fff5f5; }\r\n.card.premium-design-2.wasser { background: radial-gradient(circle, #0077be, #001f3f); color: #f0f8ff; }\r\n.card.premium-design-2.pflanze { background: radial-gradient(circle, #00ff87, #009245); color: #e0ffe0; }\r\n.card.premium-design-2.elektro { background: radial-gradient(circle, #ffeb3b, #f4d03f); color: #804000; }\r\n.card.premium-design-2.erde { background: radial-gradient(circle, #a77979, #4b3832); color: #ffcccb; }\r\n.card.premium-design-2.eis { background: radial-gradient(circle, #00c9ff, #92fe9d); color: #1e3d59; }\r\n.card.premium-design-2.luft { background: radial-gradient(circle, #87cefa, #f0f8ff); color: #4169e1; }\r\n\r\n.card.premium-design-3.feuer { background: linear-gradient(135deg, #dc9593, #e02828); color: #8b0000; }\r\n.card.premium-design-3.wasser { background: linear-gradient(135deg, #e6f3ff, #b3e0ff); color: #00008b; }\r\n.card.premium-design-3.pflanze { background: linear-gradient(135deg, #90ee90, #32cd32); color: #006400; }\r\n.card.premium-design-3.elektro { background: linear-gradient(135deg, #ffff99, #ffeb3b); color: #ff8c00; }\r\n.card.premium-design-3.erde { background: linear-gradient(135deg, #d2b48c, #c19a6b); color: #8b4513; }\r\n.card.premium-design-3.eis { background: linear-gradient(135deg, #b0e0e6, #87ceeb); color: #4682b4; }\r\n.card.premium-design-3.luft { background: linear-gradient(135deg, #f0f8ff, #87ceeb); color: #4169e1; }\r\n\r\n.element-relationship.feuer { background-color: #ff6b6b; color: #fff; }\r\n.element-relationship.wasser { background-color: #0077be; color: #fff; }\r\n.element-relationship.pflanze { background-color: #00ff87; color: #000; }\r\n.element-relationship.elektro { background-color: #ffeb3b; color: #000; }\r\n.element-relationship.erde { background-color: #a77979; color: #fff; }\r\n.element-relationship.eis { background-color: #00c9ff; color: #000; }\r\n.element-relationship.luft { background-color: #87cefa; color: #000; }\r\n\r\n.element-relationship.premium-design-1.feuer { background: linear-gradient(135deg, #ff6b6b, #ff1e56); color: #fff5f5; }\r\n.element-relationship.premium-design-1.wasser { background: linear-gradient(135deg, #0077be, #001f3f); color: #f0f8ff; }\r\n.element-relationship.premium-design-1.pflanze { background: linear-gradient(135deg, #00ff87, #009245); color: #e0ffe0; }\r\n.element-relationship.premium-design-1.elektro { background: linear-gradient(135deg, #ffeb3b, #f4d03f); color: #804000; }\r\n.element-relationship.premium-design-1.erde { background: linear-gradient(135deg, #a77979, #4b3832); color: #ffcccb; }\r\n.element-relationship.premium-design-1.eis { background: linear-gradient(135deg, #00c9ff, #92fe9d); color: #1e3d59; }\r\n.element-relationship.premium-design-1.luft { background: linear-gradient(135deg, #87cefa, #f0f8ff); color: #4169e1; }\r\n\r\n.element-relationship.premium-design-2.feuer { background: radial-gradient(circle, #ff6b6b, #ff1e56); color: #fff5f5; }\r\n.element-relationship.premium-design-2.wasser { background: radial-gradient(circle, #0077be, #001f3f); color: #f0f8ff; }\r\n.element-relationship.premium-design-2.pflanze { background: radial-gradient(circle, #00ff87, #009245); color: #e0ffe0; }\r\n.element-relationship.premium-design-2.elektro { background: radial-gradient(circle, #ffeb3b, #f4d03f); color: #804000; }\r\n.element-relationship.premium-design-2.erde { background: radial-gradient(circle, #a77979, #4b3832); color: #ffcccb; }\r\n.element-relationship.premium-design-2.eis { background: radial-gradient(circle, #00c9ff, #92fe9d); color: #1e3d59; }\r\n.element-relationship.premium-design-2.luft { background: radial-gradient(circle, #87cefa, #f0f8ff); color: #4169e1; }\r\n\r\n.element-relationship.premium-design-3.feuer { background: linear-gradient(135deg, #dc9593, #e02828); color: #8b0000; }\r\n.element-relationship.premium-design-3.wasser { background: linear-gradient(135deg, #e6f3ff, #b3e0ff); color: #00008b; }\r\n.element-relationship.premium-design-3.pflanze { background: linear-gradient(135deg, #90ee90, #32cd32); color: #006400; }\r\n.element-relationship.premium-design-3.elektro { background: linear-gradient(135deg, #ffff99, #ffeb3b); color: #ff8c00; }\r\n.element-relationship.premium-design-3.erde { background: linear-gradient(135deg, #d2b48c, #c19a6b); color: #8b4513; }\r\n.element-relationship.premium-design-3.eis { background: linear-gradient(135deg, #b0e0e6, #87ceeb); color: #4682b4; }\r\n.element-relationship.premium-design-3.luft { background: linear-gradient(135deg, #f0f8ff, #87ceeb); color: #4169e1; }\r\n\r\n\r\n\r\n@media (max-width: 600px) {\r\n    .card {\r\n        width: 80px;\r\n        height: 120px;\r\n        font-size: 10px;\r\n    }\r\n\r\n    .player-field, .computer-field {\r\n        height: 150px;\r\n    }\r\n}\r\n\r\n.form-container {\r\n    background-color: #fff;\r\n    border: 2px solid #4CAF50;\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    margin-top: 20px;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n\r\n.input-group {\r\n    margin-bottom: 20px;\r\n    width: 100%;\r\n}\r\n\r\n.input-group label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    font-weight: bold;\r\n}\r\n\r\n.input-group input,\r\n.input-group select {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n    background-color: #4CAF50;\r\n    width: 100%;\r\n    color: #fff;\r\n    margin: 0;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 25px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease, transform 0.3s ease;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nbutton[type=\"submit\"]:hover {\r\n    background-color: #45a049;\r\n    transform: translateY(-2px);\r\n}\r\n\r\n#showRegister, #showLogin {\r\n    color: #4CAF50;\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n}\r\n\r\n#showRegister:hover, #showLogin:hover {\r\n    color: #45a049;\r\n}\r\n\r\n.nav-buttons .but,\r\n.nav-right .but {\r\n    background-color: #ffffff;\r\n    color: #4CAF50;\r\n    border: none;\r\n    padding: 8px 15px;\r\n    border-radius: 20px;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 5px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.nav-buttons .but:hover,\r\n.nav-right .but:hover {\r\n    background-color: #e8f5e9;\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.nav-buttons .but i,\r\n.nav-right .but i {\r\n    margin-right: 5px;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/build/resources/main/static/game.css b/../Element-Battle-main-public - Kopie/build/resources/main/static/game.css
--- a/../Element-Battle-main-public - Kopie/build/resources/main/static/game.css	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/build/resources/main/static/game.css	(date 1722152682133)
@@ -218,6 +218,7 @@
     font-weight: bold;
     text-align: center;
     margin-top: 20px;
+    display: grid;
 }
 
 .element-info {
Index: ../Element-Battle-main-public - Kopie/heros.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[{\"id\":1,\"name\":\"Ignis Flammenherz\",\"HP\":12,\"Damage\":12,\"type\":\"Feuer\",\"extra\":\"Entfesselt ein feuriges Inferno!\"},{\"id\":2,\"name\":\"Pyra Glutsturm\",\"HP\":11,\"Damage\":10,\"type\":\"Feuer\",\"extra\":\"Brennt mit der Hitze von tausend Sonnen!\"},{\"id\":3,\"name\":\"Vulcan Feuerschild\",\"HP\":14,\"Damage\":8,\"type\":\"Feuer\",\"extra\":\"Schmiedet Schwerter aus flÃ¼ssiger Lava!\"},{\"id\":4,\"name\":\"Inferno Feuerschlag\",\"HP\":9,\"Damage\":13,\"type\":\"Feuer\",\"extra\":\"Tanzt um FeuerstÃ¼rme herum!\"},{\"id\":5,\"name\":\"Helios SonnentÃ¤nzer\",\"HP\":13,\"Damage\":14,\"type\":\"Feuer\",\"extra\":\"Herrscht Ã¼ber Vulkan und Flamme!\"},{\"id\":6,\"name\":\"Aqualis Meeresrufer\",\"HP\":11,\"Damage\":11,\"type\":\"Wasser\",\"extra\":\"Beherrscht die Wellen und Meerestiere.\"},{\"id\":7,\"name\":\"Nerina Wellenweber\",\"HP\":10,\"Damage\":9,\"type\":\"Wasser\",\"extra\":\"Beruhigt und kontrolliert die Gezeiten.\"},{\"id\":8,\"name\":\"Aquara Wasserschild\",\"HP\":13,\"Damage\":14,\"type\":\"Wasser\",\"extra\":\"Tiefseeabenteuer und Ozeansymphonie!\"},{\"id\":9,\"name\":\"Hydra Aquadonner\",\"HP\":12,\"Damage\":12,\"type\":\"Wasser\",\"extra\":\"Ruft die MeeresgÃ¶tter zu Hilfe!\"},{\"id\":10,\"name\":\"Poseidon Meereswoge\",\"HP\":9,\"Damage\":13,\"type\":\"Wasser\",\"extra\":\"Wasserwirbel und Strudelmeisterschaft!\"},{\"id\":11,\"name\":\"Flora Rankengriff\",\"HP\":10,\"Damage\":10,\"type\":\"Pflanze\",\"extra\":\"Umschlingt Gegner mit Ranken!\"},{\"id\":12,\"name\":\"Sylva Blattwerk\",\"HP\":9,\"Damage\":12,\"type\":\"Pflanze\",\"extra\":\"Meister der Photosynthese und des Waldwachstums.\"},{\"id\":13,\"name\":\"Gaia GrÃ¼nhÃ¼ter\",\"HP\":12,\"Damage\":9,\"type\":\"Pflanze\",\"extra\":\"BlÃ¼tenzauber und Fruchtbarkeitsernte!\"},{\"id\":14,\"name\":\"Verdura Blattsturm\",\"HP\":13,\"Damage\":14,\"type\":\"Pflanze\",\"extra\":\"Wurzeln, die bis in die Tiefen reichen!\"},{\"id\":15,\"name\":\"Arborea Waldwisperer\",\"HP\":11,\"Damage\":13,\"type\":\"Pflanze\",\"extra\":\"Beherrscht den Wald in seiner ganzen Pracht!\"},{\"id\":16,\"name\":\"Voltaris Donnerklinge\",\"HP\":9,\"Damage\":13,\"type\":\"Elektro\",\"extra\":\"SchlÃ¤gt mit der Kraft eines Gewitters zu.\"},{\"id\":17,\"name\":\"Electra Blitzschlag\",\"HP\":8,\"Damage\":14,\"type\":\"Elektro\",\"extra\":\"Elektrisiert das Schlachtfeld mit einem Funken.\"},{\"id\":18,\"name\":\"Raiden Donnerfaust\",\"HP\":11,\"Damage\":11,\"type\":\"Elektro\",\"extra\":\"Blitze zucken durch die Luft!\"},{\"id\":19,\"name\":\"Jolt Elektrosturm\",\"HP\":10,\"Damage\":10,\"type\":\"Elektro\",\"extra\":\"Ladung, die die Luft zum ZerreiÃen bringt!\"},{\"id\":20,\"name\":\"Thor Donnergroll\",\"HP\":14,\"Damage\":8,\"type\":\"Elektro\",\"extra\":\"Donnerhall und elektrische Eruption!\"},{\"id\":21,\"name\":\"Terran Steinschmied\",\"HP\":15,\"Damage\":9,\"type\":\"Erde\",\"extra\":\"Fest wie ein Berg, unnachgiebig.\"},{\"id\":22,\"name\":\"Gaia ErdenwÃ¤chter\",\"HP\":13,\"Damage\":13,\"type\":\"Erde\",\"extra\":\"Mutter der Erde und der Natur.\"},{\"id\":23,\"name\":\"Atlas Felsenfaust\",\"HP\":10,\"Damage\":8,\"type\":\"Erde\",\"extra\":\"Erdbeben und Steinschatten!\"},{\"id\":24,\"name\":\"Terra Erdenschild\",\"HP\":12,\"Damage\":12,\"type\":\"Erde\",\"extra\":\"Felsen, die wie Wasser flieÃen!\"},{\"id\":25,\"name\":\"Golem Felsensturm\",\"HP\":11,\"Damage\":14,\"type\":\"Erde\",\"extra\":\"Wurzeln, die sich tief in die Erde graben!\"},{\"id\":26,\"name\":\"Glacies Frostschild\",\"HP\":10,\"Damage\":12,\"type\":\"Eis\",\"extra\":\"Eisige KÃ¤ltepeitsche!\"},{\"id\":27,\"name\":\"Frostius Eisessturm\",\"HP\":12,\"Damage\":10,\"type\":\"Eis\",\"extra\":\"Frostiger Sturm!\"},{\"id\":28,\"name\":\"Tundrus Eisbann\",\"HP\":14,\"Damage\":14,\"type\":\"Eis\",\"extra\":\"Schneesturm und gefrorene Stille!\"},{\"id\":29,\"name\":\"Chillara Frosthauch\",\"HP\":11,\"Damage\":13,\"type\":\"Eis\",\"extra\":\"Glitzerndes Eis und kristalline Eleganz!\"},{\"id\":30,\"name\":\"Blizzara Frostfeuer\",\"HP\":9,\"Damage\":9,\"type\":\"Eis\",\"extra\":\"Frostbeulen und gefrorene Schicksale!\"},{\"id\":31,\"name\":\"Zephyrus Windrufer\",\"HP\":9,\"Damage\":14,\"type\":\"Luft\",\"extra\":\"Ruft die Winde und StÃ¼rme herbei!\"},{\"id\":32,\"name\":\"Aeris Luftklinge\",\"HP\":11,\"Damage\":13,\"type\":\"Luft\",\"extra\":\"Tanzt mit den LÃ¼ften!\"},{\"id\":33,\"name\":\"Aeolus Sturmbote\",\"HP\":13,\"Damage\":10,\"type\":\"Luft\",\"extra\":\"FlÃ¼gel aus Wolken und federleichter Tanz!\"},{\"id\":34,\"name\":\"Galea WindesflÃ¼gel\",\"HP\":10,\"Damage\":9,\"type\":\"Luft\",\"extra\":\"SturmfÃ¤nger und Wolkenwanderer!\"},{\"id\":35,\"name\":\"Caelus Wolke\",\"HP\":12,\"Damage\":12,\"type\":\"Erde\",\"extra\":\"SphÃ¤renklÃ¤nge und Windgesang!\"}]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/heros.json b/../Element-Battle-main-public - Kopie/heros.json
--- a/../Element-Battle-main-public - Kopie/heros.json	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/heros.json	(date 1725553598229)
@@ -1,1 +1,1 @@
-[{"id":1,"name":"Ignis Flammenherz","HP":12,"Damage":12,"type":"Feuer","extra":"Entfesselt ein feuriges Inferno!"},{"id":2,"name":"Pyra Glutsturm","HP":11,"Damage":10,"type":"Feuer","extra":"Brennt mit der Hitze von tausend Sonnen!"},{"id":3,"name":"Vulcan Feuerschild","HP":14,"Damage":8,"type":"Feuer","extra":"Schmiedet Schwerter aus flÃ¼ssiger Lava!"},{"id":4,"name":"Inferno Feuerschlag","HP":9,"Damage":13,"type":"Feuer","extra":"Tanzt um FeuerstÃ¼rme herum!"},{"id":5,"name":"Helios SonnentÃ¤nzer","HP":13,"Damage":14,"type":"Feuer","extra":"Herrscht Ã¼ber Vulkan und Flamme!"},{"id":6,"name":"Aqualis Meeresrufer","HP":11,"Damage":11,"type":"Wasser","extra":"Beherrscht die Wellen und Meerestiere."},{"id":7,"name":"Nerina Wellenweber","HP":10,"Damage":9,"type":"Wasser","extra":"Beruhigt und kontrolliert die Gezeiten."},{"id":8,"name":"Aquara Wasserschild","HP":13,"Damage":14,"type":"Wasser","extra":"Tiefseeabenteuer und Ozeansymphonie!"},{"id":9,"name":"Hydra Aquadonner","HP":12,"Damage":12,"type":"Wasser","extra":"Ruft die MeeresgÃ¶tter zu Hilfe!"},{"id":10,"name":"Poseidon Meereswoge","HP":9,"Damage":13,"type":"Wasser","extra":"Wasserwirbel und Strudelmeisterschaft!"},{"id":11,"name":"Flora Rankengriff","HP":10,"Damage":10,"type":"Pflanze","extra":"Umschlingt Gegner mit Ranken!"},{"id":12,"name":"Sylva Blattwerk","HP":9,"Damage":12,"type":"Pflanze","extra":"Meister der Photosynthese und des Waldwachstums."},{"id":13,"name":"Gaia GrÃ¼nhÃ¼ter","HP":12,"Damage":9,"type":"Pflanze","extra":"BlÃ¼tenzauber und Fruchtbarkeitsernte!"},{"id":14,"name":"Verdura Blattsturm","HP":13,"Damage":14,"type":"Pflanze","extra":"Wurzeln, die bis in die Tiefen reichen!"},{"id":15,"name":"Arborea Waldwisperer","HP":11,"Damage":13,"type":"Pflanze","extra":"Beherrscht den Wald in seiner ganzen Pracht!"},{"id":16,"name":"Voltaris Donnerklinge","HP":9,"Damage":13,"type":"Elektro","extra":"SchlÃ¤gt mit der Kraft eines Gewitters zu."},{"id":17,"name":"Electra Blitzschlag","HP":8,"Damage":14,"type":"Elektro","extra":"Elektrisiert das Schlachtfeld mit einem Funken."},{"id":18,"name":"Raiden Donnerfaust","HP":11,"Damage":11,"type":"Elektro","extra":"Blitze zucken durch die Luft!"},{"id":19,"name":"Jolt Elektrosturm","HP":10,"Damage":10,"type":"Elektro","extra":"Ladung, die die Luft zum ZerreiÃen bringt!"},{"id":20,"name":"Thor Donnergroll","HP":14,"Damage":8,"type":"Elektro","extra":"Donnerhall und elektrische Eruption!"},{"id":21,"name":"Terran Steinschmied","HP":15,"Damage":9,"type":"Erde","extra":"Fest wie ein Berg, unnachgiebig."},{"id":22,"name":"Gaia ErdenwÃ¤chter","HP":13,"Damage":13,"type":"Erde","extra":"Mutter der Erde und der Natur."},{"id":23,"name":"Atlas Felsenfaust","HP":10,"Damage":8,"type":"Erde","extra":"Erdbeben und Steinschatten!"},{"id":24,"name":"Terra Erdenschild","HP":12,"Damage":12,"type":"Erde","extra":"Felsen, die wie Wasser flieÃen!"},{"id":25,"name":"Golem Felsensturm","HP":11,"Damage":14,"type":"Erde","extra":"Wurzeln, die sich tief in die Erde graben!"},{"id":26,"name":"Glacies Frostschild","HP":10,"Damage":12,"type":"Eis","extra":"Eisige KÃ¤ltepeitsche!"},{"id":27,"name":"Frostius Eisessturm","HP":12,"Damage":10,"type":"Eis","extra":"Frostiger Sturm!"},{"id":28,"name":"Tundrus Eisbann","HP":14,"Damage":14,"type":"Eis","extra":"Schneesturm und gefrorene Stille!"},{"id":29,"name":"Chillara Frosthauch","HP":11,"Damage":13,"type":"Eis","extra":"Glitzerndes Eis und kristalline Eleganz!"},{"id":30,"name":"Blizzara Frostfeuer","HP":9,"Damage":9,"type":"Eis","extra":"Frostbeulen und gefrorene Schicksale!"},{"id":31,"name":"Zephyrus Windrufer","HP":9,"Damage":14,"type":"Luft","extra":"Ruft die Winde und StÃ¼rme herbei!"},{"id":32,"name":"Aeris Luftklinge","HP":11,"Damage":13,"type":"Luft","extra":"Tanzt mit den LÃ¼ften!"},{"id":33,"name":"Aeolus Sturmbote","HP":13,"Damage":10,"type":"Luft","extra":"FlÃ¼gel aus Wolken und federleichter Tanz!"},{"id":34,"name":"Galea WindesflÃ¼gel","HP":10,"Damage":9,"type":"Luft","extra":"SturmfÃ¤nger und Wolkenwanderer!"},{"id":35,"name":"Caelus Wolke","HP":12,"Damage":12,"type":"Erde","extra":"SphÃ¤renklÃ¤nge und Windgesang!"}]
\ No newline at end of file
+[{"id":1,"name":"Ignis Flammenherz","HP":12,"Damage":12,"type":"Feuer","extra":"Entfesselt ein feuriges Inferno!"},{"id":2,"name":"Pyra Glutsturm","HP":11,"Damage":10,"type":"Feuer","extra":"Brennt mit der Hitze von tausend Sonnen!"},{"id":3,"name":"Vulcan Feuerschild","HP":14,"Damage":8,"type":"Feuer","extra":"Schmiedet Schwerter aus flÃ¼ssiger Lava!"},{"id":4,"name":"Inferno Feuerschlag","HP":9,"Damage":13,"type":"Feuer","extra":"Tanzt um FeuerstÃ¼rme herum!"},{"id":5,"name":"Helios SonnentÃ¤nzer","HP":13,"Damage":14,"type":"Feuer","extra":"Herrscht Ã¼ber Vulkan und Flamme!"},{"id":6,"name":"Aqualis Meeresrufer","HP":11,"Damage":11,"type":"Wasser","extra":"Beherrscht die Wellen und Meerestiere."},{"id":7,"name":"Nerina Wellenweber","HP":10,"Damage":9,"type":"Wasser","extra":"Beruhigt und kontrolliert die Gezeiten."},{"id":8,"name":"Aquara Wasserschild","HP":13,"Damage":14,"type":"Wasser","extra":"Tiefseeabenteuer und Ozeansymphonie!"},{"id":9,"name":"Hydra Aquadonner","HP":12,"Damage":12,"type":"Wasser","extra":"Ruft die MeeresgÃ¶tter zu Hilfe!"},{"id":10,"name":"Poseidon Meereswoge","HP":9,"Damage":13,"type":"Wasser","extra":"Wasserwirbel und Strudelmeisterschaft!"},{"id":11,"name":"Flora Rankengriff","HP":10,"Damage":10,"type":"Pflanze","extra":"Umschlingt Gegner mit Ranken!"},{"id":12,"name":"Sylva Blattwerk","HP":9,"Damage":12,"type":"Pflanze","extra":"Meister der Photosynthese und des Waldwachstums."},{"id":13,"name":"Gaia GrÃ¼nhÃ¼ter","HP":12,"Damage":9,"type":"Pflanze","extra":"BlÃ¼tenzauber und Fruchtbarkeitsernte!"},{"id":14,"name":"Verdura Blattsturm","HP":13,"Damage":14,"type":"Pflanze","extra":"Wurzeln, die bis in die Tiefen reichen!"},{"id":15,"name":"Arborea Waldwisperer","HP":11,"Damage":13,"type":"Pflanze","extra":"Beherrscht den Wald in seiner ganzen Pracht!"},{"id":16,"name":"Voltaris Donnerklinge","HP":9,"Damage":13,"type":"Elektro","extra":"SchlÃ¤gt mit der Kraft eines Gewitters zu."},{"id":17,"name":"Electra Blitzschlag","HP":8,"Damage":14,"type":"Elektro","extra":"Elektrisiert das Schlachtfeld mit einem Funken."},{"id":18,"name":"Raiden Donnerfaust","HP":11,"Damage":11,"type":"Elektro","extra":"Blitze zucken durch die Luft!"},{"id":19,"name":"Jolt Elektrosturm","HP":10,"Damage":10,"type":"Elektro","extra":"Ladung, die die Luft zum ZerreiÃen bringt!"},{"id":20,"name":"Thor Donnergroll","HP":14,"Damage":8,"type":"Elektro","extra":"Donnerhall und elektrische Eruption!"},{"id":21,"name":"Terran Steinschmied","HP":15,"Damage":9,"type":"Erde","extra":"Fest wie ein Berg, unnachgiebig."},{"id":22,"name":"Gaia ErdenwÃ¤chter","HP":13,"Damage":13,"type":"Erde","extra":"Mutter der Erde und der Natur."},{"id":23,"name":"Atlas Felsenfaust","HP":10,"Damage":8,"type":"Erde","extra":"Erdbeben und Steinschatten!"},{"id":24,"name":"Terra Erdenschild","HP":12,"Damage":12,"type":"Erde","extra":"Felsen, die wie Wasser flieÃen!"},{"id":25,"name":"Golem Felsensturm","HP":11,"Damage":14,"type":"Erde","extra":"Wurzeln, die sich tief in die Erde graben!"},{"id":26,"name":"Glacies Frostschild","HP":10,"Damage":12,"type":"Eis","extra":"Eisige KÃ¤ltepeitsche!"},{"id":27,"name":"Frostius Eisessturm","HP":12,"Damage":10,"type":"Eis","extra":"Frostiger Sturm!"},{"id":28,"name":"Tundrus Eisbann","HP":14,"Damage":14,"type":"Eis","extra":"Schneesturm und gefrorene Stille!"},{"id":29,"name":"Chillara Frosthauch","HP":11,"Damage":13,"type":"Eis","extra":"Glitzerndes Eis und kristalline Eleganz!"},{"id":30,"name":"Blizzara Frostfeuer","HP":9,"Damage":9,"type":"Eis","extra":"Frostbeulen und gefrorene Schicksale!"},{"id":31,"name":"Zephyrus Windrufer","HP":9,"Damage":14,"type":"Luft","extra":"Ruft die Winde und StÃ¼rme herbei!"},{"id":32,"name":"Aeris Luftklinge","HP":11,"Damage":13,"type":"Luft","extra":"Tanzt mit den LÃ¼ften!"},{"id":33,"name":"Aeolus Sturmbote","HP":13,"Damage":10,"type":"Luft","extra":"FlÃ¼gel aus Wolken und federleichter Tanz!"},{"id":34,"name":"Galea WindesflÃ¼gel","HP":10,"Damage":9,"type":"Luft","extra":"SturmfÃ¤nger und Wolkenwanderer!"},{"id":35,"name":"Caelus Wolke","HP":12,"Damage":12,"type":"Luft","extra":"SphÃ¤renklÃ¤nge und Windgesang!"}]
\ No newline at end of file
Index: ../Element-Battle-main-public - Kopie/back.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"Tilljan1\":\"background2\",\"Tilljan3\":\"all\",\"Tilljan2\":\"background2\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/back.json b/../Element-Battle-main-public - Kopie/back.json
--- a/../Element-Battle-main-public - Kopie/back.json	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/back.json	(date 1725553598233)
@@ -1,1 +1,1 @@
-{"Tilljan1":"background2","Tilljan3":"all","Tilljan2":"background2"}
\ No newline at end of file
+{"Tilljan":"background2"}
\ No newline at end of file
Index: ../Element-Battle-main-public - Kopie/cards.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"Tilljan\":\"2\",\"Tilljan3\":\"default\",\"Tilljan2\":\"default\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/cards.json b/../Element-Battle-main-public - Kopie/cards.json
--- a/../Element-Battle-main-public - Kopie/cards.json	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/cards.json	(date 1725553598234)
@@ -1,1 +1,1 @@
-{"Tilljan":"2","Tilljan3":"default","Tilljan2":"default"}
\ No newline at end of file
+{"Tilljan":"2"}
\ No newline at end of file
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
new file mode 100644
--- /dev/null	(date 1743414963454)
+++ b/README.md	(date 1743414963454)
@@ -0,0 +1,1 @@
+![preview](vorschau.png)
Index: ../Element-Battle-main-public - Kopie/src/main/java/com/example/demo/Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.demo;\r\n\r\nimport com.fasterxml.jackson.core.type.TypeReference;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport jakarta.annotation.PostConstruct;\r\nimport jakarta.annotation.PreDestroy;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.io.Serializable;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.concurrent.atomic.AtomicInteger;\r\n\r\n@RestController\r\n@CrossOrigin(origins = \"*\", allowedHeaders = \"*\")\r\npublic class Controller implements Serializable {\r\n\r\n    private static final String HEROES_FILE_PATH = \"heros.json\";\r\n    private static final String ACCOUNTS_FILE_PATH = \"acc.json\";\r\n    private static final String CARDS_FILE_PATH = \"cards.json\";\r\n    private final ObjectMapper mapper = new ObjectMapper();\r\n\r\n    public record Hero(int id, String name, int HP, int Damage, String type, String extra) {}\r\n    public static List<Hero> heroes = new ArrayList<>();\r\n    public static AtomicInteger counter = new AtomicInteger(1);\r\n\r\n    private final Map<String, String> cardDesigns = new HashMap<>();\r\n    public record Account(String username, String password, int coins) {}\r\n    private Map<String, Account> accounts = new HashMap<>();\r\n\r\n\r\n    private static final List<String> heroNames = List.of(\r\n            \"Ignis Flammenherz\",\r\n            \"Pyra Glutsturm\",\r\n            \"Vulcan Feuerschild\",\r\n            \"Inferno Feuerschlag\",\r\n            \"Helios SonnentÃ¤nzer\",\r\n\r\n            \"Aqualis Meeresrufer\",\r\n            \"Nerina Wellenweber\",\r\n            \"Aquara Wasserschild\",\r\n            \"Hydra Aquadonner\",\r\n            \"Poseidon Meereswoge\",\r\n\r\n            \"Flora Rankengriff\",\r\n            \"Sylva Blattwerk\",\r\n            \"Gaia GrÃ¼nhÃ¼ter\",\r\n            \"Verdura Blattsturm\",\r\n            \"Arborea Waldwisperer\",\r\n\r\n            \"Voltaris Donnerklinge\",\r\n            \"Electra Blitzschlag\",\r\n            \"Raiden Donnerfaust\",\r\n            \"Jolt Elektrosturm\",\r\n            \"Thor Donnergroll\",\r\n\r\n            \"Terran Steinschmied\",\r\n            \"Gaia ErdenwÃ¤chter\",\r\n            \"Atlas Felsenfaust\",\r\n            \"Terra Erdenschild\",\r\n            \"Golem Felsensturm\",\r\n\r\n            \"Glacies Frostschild\",\r\n            \"Frostius Eisessturm\",\r\n            \"Tundrus Eisbann\",\r\n            \"Chillara Frosthauch\",\r\n            \"Blizzara Frostfeuer\",\r\n\r\n            \"Zephyrus Windrufer\",\r\n            \"Aeris Luftklinge\",\r\n            \"Aeolus Sturmbote\",\r\n            \"Galea WindesflÃ¼gel\",\r\n            \"Caelus Wolke\"\r\n    );\r\n    private static final List<String> heroTypes = List.of(\r\n            \"Feuer\", \"Feuer\", \"Feuer\", \"Feuer\", \"Feuer\",\r\n            \"Wasser\", \"Wasser\", \"Wasser\", \"Wasser\", \"Wasser\",\r\n            \"Pflanze\", \"Pflanze\", \"Pflanze\", \"Pflanze\", \"Pflanze\",\r\n            \"Elektro\", \"Elektro\", \"Elektro\", \"Elektro\", \"Elektro\",\r\n            \"Erde\", \"Erde\", \"Erde\", \"Erde\", \"Erde\",\r\n            \"Eis\", \"Eis\", \"Eis\", \"Eis\", \"Eis\",\r\n            \"Luft\", \"Luft\", \"Luft\", \"Luft\", \"Luft\"\r\n    );\r\n    private static final List<Integer> hpValues = List.of(\r\n            12, 11, 14, 9, 13,\r\n            11, 10, 13, 12, 9,\r\n            10, 9, 12, 13, 11,\r\n            9, 8, 11, 10, 14,\r\n            15, 13, 10, 12, 11,\r\n            10, 12, 14, 11, 9,\r\n            9, 11, 13, 10, 12\r\n    );\r\n\r\n\r\n\r\n    private static final List<Integer> damageValues = List.of(\r\n            12, 10, 8, 13, 14,\r\n            11, 9, 14, 12, 13,\r\n            10, 12, 9, 14, 13,\r\n            13, 14, 11, 10, 8,\r\n            9, 13, 8, 12, 14,\r\n            12, 10, 14, 13, 9,\r\n            14, 13, 10, 9, 12\r\n    );\r\n\r\n\r\n    private static final List<String> extras = List.of(\r\n            \"Entfesselt ein feuriges Inferno!\",\r\n            \"Brennt mit der Hitze von tausend Sonnen!\",\r\n            \"Schmiedet Schwerter aus flÃ¼ssiger Lava!\",\r\n            \"Tanzt um FeuerstÃ¼rme herum!\",\r\n            \"Herrscht Ã¼ber Vulkan und Flamme!\",\r\n\r\n            \"Beherrscht die Wellen und Meerestiere.\",\r\n            \"Beruhigt und kontrolliert die Gezeiten.\",\r\n            \"Tiefseeabenteuer und Ozeansymphonie!\",\r\n            \"Ruft die MeeresgÃ¶tter zu Hilfe!\",\r\n            \"Wasserwirbel und Strudelmeisterschaft!\",\r\n\r\n            \"Umschlingt Gegner mit Ranken!\",\r\n            \"Meister der Photosynthese und des Waldwachstums.\",\r\n            \"BlÃ¼tenzauber und Fruchtbarkeitsernte!\",\r\n            \"Wurzeln, die bis in die Tiefen reichen!\",\r\n            \"Beherrscht den Wald in seiner ganzen Pracht!\",\r\n\r\n            \"SchlÃ¤gt mit der Kraft eines Gewitters zu.\",\r\n            \"Elektrisiert das Schlachtfeld mit einem Funken.\",\r\n            \"Blitze zucken durch die Luft!\",\r\n            \"Ladung, die die Luft zum ZerreiÃen bringt!\",\r\n            \"Donnerhall und elektrische Eruption!\",\r\n\r\n            \"Fest wie ein Berg, unnachgiebig.\",\r\n            \"Mutter der Erde und der Natur.\",\r\n            \"Erdbeben und Steinschatten!\",\r\n            \"Felsen, die wie Wasser flieÃen!\",\r\n            \"Wurzeln, die sich tief in die Erde graben!\",\r\n\r\n            \"Eisige KÃ¤ltepeitsche!\",\r\n            \"Frostiger Sturm!\",\r\n            \"Schneesturm und gefrorene Stille!\",\r\n            \"Glitzerndes Eis und kristalline Eleganz!\",\r\n            \"Frostbeulen und gefrorene Schicksale!\",\r\n\r\n            \"Ruft die Winde und StÃ¼rme herbei!\",\r\n            \"Tanzt mit den LÃ¼ften!\",\r\n            \"FlÃ¼gel aus Wolken und federleichter Tanz!\",\r\n            \"SturmfÃ¤nger und Wolkenwanderer!\",\r\n            \"SphÃ¤renklÃ¤nge und Windgesang!\"\r\n    );\r\n\r\n\r\n    @PostConstruct\r\n    public void init() {\r\n        loadHeroes();\r\n        loadAccounts();\r\n        loadBackgrounds();\r\n        loadCardDesigns();\r\n    }\r\n\r\n    @PreDestroy\r\n    public void shutdown() {\r\n        saveHeroes();\r\n        saveAccounts();\r\n        saveBackgrounds();\r\n    }\r\n\r\n    private void loadAccounts() {\r\n        try {\r\n            File file = new File(ACCOUNTS_FILE_PATH);\r\n            if (file.exists()) {\r\n                accounts = mapper.readValue(file, new TypeReference<>() {});\r\n            } else {\r\n                System.out.println(\"acc.json Datei existiert nicht.\");\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    private void saveAccounts() {\r\n        try {\r\n            mapper.writeValue(new File(ACCOUNTS_FILE_PATH), accounts);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @PostMapping(\"/register\")\r\n    public ResponseEntity<Map<String, Object>> register(@RequestBody Map<String, String> user) {\r\n        String username = user.get(\"username\");\r\n        String password = user.get(\"password\");\r\n\r\n        if (accounts.containsKey(username)) {\r\n            Account existingAccount = accounts.get(username);\r\n            return ResponseEntity.ok(Map.of(\r\n                    \"success\", false,\r\n                    \"message\", \"Benutzername existiert bereits\",\r\n                    \"username\", username,\r\n                    \"coins\", existingAccount.coins()\r\n            ));\r\n        }\r\n\r\n        Account newAccount = new Account(username, password, 0);\r\n        accounts.put(username, newAccount);\r\n        saveAccounts();\r\n\r\n        return ResponseEntity.ok(Map.of(\r\n                \"success\", true,\r\n                \"username\", username,\r\n                \"coins\", 0\r\n        ));\r\n    }\r\n\r\n\r\n    @PostMapping(\"/login\")\r\n    public ResponseEntity<Map<String, Object>> login(@RequestBody Map<String, String> user) {\r\n        String username = user.get(\"username\");\r\n        String password = user.get(\"password\");\r\n\r\n        Account account = accounts.get(username);\r\n        if (account != null && account.password().equals(password)) {\r\n            return ResponseEntity.ok(Map.of(\r\n                    \"success\", true,\r\n                    \"username\", username,\r\n                    \"coins\", account.coins()\r\n            ));\r\n        }\r\n\r\n        return ResponseEntity.ok(Map.of(\"success\", false));\r\n    }\r\n\r\n    @PostMapping(\"/getUserInfo\")\r\n    public ResponseEntity<Map<String, Object>> getUserInfo(@RequestBody Map<String, String> request) {\r\n        String username = request.get(\"username\");\r\n\r\n        if (username == null || username.isEmpty()) {\r\n            return ResponseEntity.badRequest().body(Map.of(\r\n                    \"success\", false,\r\n                    \"message\", \"Kein Benutzername angegeben\"\r\n            ));\r\n        }\r\n\r\n        Account account = accounts.get(username);\r\n        if (account == null) {\r\n            return ResponseEntity.ok(Map.of(\r\n                    \"success\", false,\r\n                    \"message\", \"Benutzer nicht gefunden\"\r\n            ));\r\n        }\r\n\r\n        return ResponseEntity.ok(Map.of(\r\n                \"success\", true,\r\n                \"username\", account.username(),\r\n                \"password\", account.password(),\r\n                \"coins\", account.coins()\r\n        ));\r\n    }\r\n\r\n    @PostMapping(\"/updateAccount\")\r\n    public ResponseEntity<Map<String, Object>> updateAccount(@RequestBody Map<String, String> updateData) {\r\n        String oldUsername = updateData.get(\"oldUsername\");\r\n        String newUsername = updateData.get(\"newUsername\");\r\n        String newPassword = updateData.get(\"newPassword\");\r\n\r\n        Account account = accounts.get(oldUsername);\r\n        if (account == null) {\r\n            return ResponseEntity.ok(Map.of(\r\n                    \"success\", false,\r\n                    \"message\", \"Benutzer nicht gefunden\"\r\n            ));\r\n        }\r\n\r\n        if (!oldUsername.equals(newUsername) && accounts.containsKey(newUsername)) {\r\n            return ResponseEntity.ok(Map.of(\r\n                    \"success\", false,\r\n                    \"message\", \"Neuer Benutzername bereits vergeben\"\r\n            ));\r\n        }\r\n\r\n        accounts.remove(oldUsername);\r\n        Account updatedAccount = new Account(\r\n                newUsername,\r\n                newPassword != null ? newPassword : account.password(),\r\n                account.coins()\r\n        );\r\n        accounts.put(newUsername, updatedAccount);\r\n        saveAccounts();\r\n\r\n        if (backgrounds.containsKey(oldUsername)) {\r\n            String background = backgrounds.remove(oldUsername);\r\n            backgrounds.put(newUsername, background);\r\n            saveBackgrounds();\r\n        }\r\n\r\n        if (cardDesigns.containsKey(oldUsername)) {\r\n            String cardDesign = cardDesigns.remove(oldUsername);\r\n            cardDesigns.put(newUsername, cardDesign);\r\n            saveCardDesigns();\r\n        }\r\n\r\n        return ResponseEntity.ok(Map.of(\r\n                \"success\", true,\r\n                \"message\", \"Kontoinformationen erfolgreich aktualisiert\"\r\n        ));\r\n    }\r\n\r\n    @PostMapping(\"/updateCoins\")\r\n    public ResponseEntity<Map<String, Object>> updateCoins(@RequestBody Map<String, Object> request) {\r\n        String username = (String) request.get(\"username\");\r\n        int coins = (int) request.get(\"coins\");\r\n\r\n        Account account = accounts.get(username);\r\n        if (account != null) {\r\n            Account updatedAccount = new Account(account.username(), account.password(), coins);\r\n            accounts.put(username, updatedAccount);\r\n            saveAccounts();\r\n\r\n            return ResponseEntity.ok(Map.of(\r\n                    \"success\", true,\r\n                    \"coins\", updatedAccount.coins()\r\n            ));\r\n        }\r\n\r\n        return ResponseEntity.ok(Map.of(\"success\", false));\r\n    }\r\n\r\n\r\n    @PostMapping(\"/addCoins\")\r\n    public ResponseEntity<Map<String, Object>> addCoins(@RequestBody Map<String, Object> request) {\r\n        String username = (String) request.get(\"username\");\r\n        int amount = (int) request.get(\"amount\");\r\n\r\n        Account account = accounts.get(username);\r\n        if (account != null) {\r\n            Account updatedAccount = new Account(account.username(), account.password(), account.coins() + amount);\r\n            accounts.put(username, updatedAccount);\r\n            saveAccounts();\r\n\r\n            return ResponseEntity.ok(Map.of(\r\n                    \"success\", true,\r\n                    \"coins\", updatedAccount.coins()\r\n            ));\r\n        }\r\n\r\n        return ResponseEntity.ok(Map.of(\"success\", false));\r\n    }\r\n\r\n    @GetMapping(\"/hero-types\")\r\n    public List<String> getHeroTypes() {\r\n        return heroTypes;\r\n    }\r\n\r\n    @PostMapping(\"/hero\")\r\n    public ResponseEntity<Hero> createHero(@RequestBody Hero hero) {\r\n        if (!heroTypes.contains(hero.type())) {\r\n            return ResponseEntity.badRequest().build();\r\n        }\r\n        else {\r\n            Hero newHero = new Hero(counter.getAndIncrement(), hero.name(), hero.HP(), hero.Damage(), hero.type(), hero.extra());\r\n            heroes.add(newHero);\r\n            return ResponseEntity.ok(newHero);\r\n        }\r\n    }\r\n\r\n    @GetMapping(\"/createProfiles\")\r\n    public String createProfiles() {\r\n        counter.set(1);\r\n        heroes.clear();\r\n\r\n        for (int i = 0; i < heroNames.size(); i++) {\r\n            String name = heroNames.get(i);\r\n            String element = heroTypes.get(i);\r\n            int hp = hpValues.get(i);\r\n            int damage = damageValues.get(i);\r\n            String description = extras.get(i);\r\n\r\n            Hero hero = new Hero(\r\n                    counter.getAndIncrement(),\r\n                    name,\r\n                    hp,\r\n                    damage,\r\n                    element,\r\n                    description\r\n            );\r\n            heroes.add(hero);\r\n        }\r\n\r\n        return \"Profile wurden erfolgreich erstellt!\";\r\n    }\r\n\r\n\r\n\r\n    private void loadHeroes() {\r\n        try {\r\n            File file = new File(HEROES_FILE_PATH);\r\n            if (file.exists()) {\r\n                heroes = mapper.readValue(file, new TypeReference<>() {});\r\n                if (!heroes.isEmpty()) {\r\n                    counter.set(heroes.stream().mapToInt(Hero::id).max().getAsInt() + 1);\r\n                }\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void saveHeroes() {\r\n        try {\r\n            mapper.writeValue(new File(HEROES_FILE_PATH), heroes);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @PutMapping(\"/heroedit\")\r\n    public String editHero(@RequestBody Hero heroe) {\r\n        if (heroe.HP() < 0 || heroe.HP() > 100 || heroe.Damage() < 0 || heroe.Damage() > 100 || heroe.type() == null) {\r\n            return \"Fehlgeschlagen!\";\r\n        }\r\n\r\n        if (heroe.id() >= 0) {\r\n            for (int i = 0; i < heroes.size(); i++) {\r\n                Hero hero = heroes.get(i);\r\n                if (hero.id() == heroe.id()) {\r\n                    heroes.set(i, heroe);\r\n                    return \"Erfolgreich!\";\r\n                }\r\n            }\r\n        }\r\n\r\n        return \"Fehlgeschlagen!\";\r\n    }\r\n\r\n    @DeleteMapping(\"/herodelete\")\r\n    public String delhero(@RequestBody(required = false) Hero herodel, @RequestParam(value = \"id\", required = false) Integer id) {\r\n        if (herodel != null && herodel.id() >= 0) {\r\n            for (int i = 0; i < heroes.size(); i++) {\r\n                Hero hero = heroes.get(i);\r\n                if (hero.id() == herodel.id()) {\r\n                    heroes.remove(i);\r\n                    return \"Passt!\";\r\n                }\r\n            }\r\n        } else if (id != null && id >= 0) {\r\n            for (int i = 0; i < heroes.size(); i++) {\r\n                Hero hero = heroes.get(i);\r\n                if (hero.id() == id) {\r\n                    heroes.remove(i);\r\n                    return \"Passt!\";\r\n                }\r\n            }\r\n        }\r\n        return \"Passt nicht!\";\r\n    }\r\n\r\n    @GetMapping(\"/heroshow\")\r\n    public List<Hero> showHero() {\r\n        return heroes;\r\n    }\r\n\r\n    @DeleteMapping(\"/delall\")\r\n    public String deleteAllHeroes() {\r\n        heroes.clear();\r\n        counter.set(1);\r\n        return \"Alle Helden wurden gelÃ¶scht!\";\r\n    }\r\n\r\n    private final Map<String, String> backgrounds = new HashMap<>();\r\n    private static final String BACKGROUNDS_FILE_PATH = \"back.json\";\r\n\r\n\r\n    @PostMapping(\"/hasBackground\")\r\n    public ResponseEntity<Map<String, Object>> hasBackground(@RequestBody Map<String, String> request) {\r\n        String username = request.get(\"username\");\r\n        String background = request.get(\"background\");\r\n\r\n        if (username == null || background == null) {\r\n            return ResponseEntity.badRequest().body(Map.of(\"hasBackground\", false));\r\n        }\r\n\r\n        boolean hasBackground = backgrounds.containsKey(username);\r\n        boolean isActive = hasBackground && backgrounds.get(username).equals(background);\r\n\r\n        return ResponseEntity.ok(Map.of(\r\n                \"hasBackground\", hasBackground,\r\n                \"isActive\", isActive\r\n        ));\r\n    }\r\n\r\n    @PostMapping(\"/checkUserBackground\")\r\n    public ResponseEntity<Map<String, Object>> checkUserBackground(@RequestBody Map<String, String> request) {\r\n        String username = request.get(\"username\");\r\n        String background = backgrounds.get(username);\r\n        boolean exists = background != null;\r\n\r\n        Map<String, Object> response = new HashMap<>();\r\n        response.put(\"exists\", exists);\r\n        if (exists) {\r\n            response.put(\"activeBackground\", background);\r\n        }\r\n\r\n        return ResponseEntity.ok(response);\r\n    }\r\n\r\n    @PostMapping(\"/buyBackground\")\r\n    public ResponseEntity<Map<String, Object>> buyBackground(@RequestBody Map<String, Object> request) {\r\n        String username = (String) request.get(\"username\");\r\n        String background = (String) request.get(\"background\");\r\n        int cost = (int) request.get(\"cost\");\r\n\r\n        Account account = accounts.get(username);\r\n        if (account != null) {\r\n            if (account.coins() >= cost) {\r\n                Account updatedAccount = new Account(account.username(), account.password(), account.coins() - cost);\r\n                accounts.put(username, updatedAccount);\r\n                saveAccounts();\r\n\r\n                backgrounds.put(username, background);\r\n                saveBackgrounds();\r\n\r\n                return ResponseEntity.ok(Map.of(\r\n                        \"success\", true,\r\n                        \"coins\", updatedAccount.coins(),\r\n                        \"background\", background\r\n                ));\r\n            } else {\r\n                return ResponseEntity.ok(Map.of(\"success\", false, \"message\", \"Nicht genug MÃ¼nzen\"));\r\n            }\r\n        }\r\n\r\n        return ResponseEntity.ok(Map.of(\"success\", false, \"message\", \"Benutzer nicht gefunden\"));\r\n    }\r\n\r\n    @PostMapping(\"/toggleBackground\")\r\n    public ResponseEntity<Map<String, Object>> toggleBackground(@RequestBody Map<String, Object> request) {\r\n        String username = (String) request.get(\"username\");\r\n        String background = (String) request.get(\"background\");\r\n        if (backgrounds.containsKey(username)) {\r\n            String currentBackground = backgrounds.get(username);\r\n            boolean isActive = currentBackground != null && currentBackground.equals(background);\r\n            if (isActive) {\r\n                backgrounds.put(username, \"\");\r\n            } else {\r\n                backgrounds.put(username, background);\r\n            }\r\n            saveBackgrounds();\r\n            return ResponseEntity.ok(Map.of(\r\n                    \"success\", true,\r\n                    \"isActive\", !isActive\r\n            ));\r\n        } else {\r\n            return ResponseEntity.ok(Map.of(\"success\", false, \"message\", \"Benutzer hat keinen Hintergrund\"));\r\n        }\r\n    }\r\n\r\n    @PostMapping(\"/getBackground\")\r\n    public ResponseEntity<Map<String, Object>> getBackground(@RequestBody Map<String, Object> request) {\r\n        String username = (String) request.get(\"username\");\r\n\r\n        if (backgrounds.containsKey(username)) {\r\n            String background = backgrounds.get(username);\r\n            return ResponseEntity.ok(Map.of(\"success\", true, \"background\", background));\r\n        } else {\r\n            return ResponseEntity.ok(Map.of(\"success\", false, \"message\", \"Kein Hintergrund fÃ¼r diesen Benutzer gefunden\"));\r\n        }\r\n    }\r\n\r\n    private void loadBackgrounds() {\r\n        try {\r\n            File file = new File(BACKGROUNDS_FILE_PATH);\r\n            if (file.exists()) {\r\n                backgrounds.putAll(mapper.readValue(file, new TypeReference<Map<String, String>>() {}));\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void saveBackgrounds() {\r\n        try {\r\n            mapper.writeValue(new File(BACKGROUNDS_FILE_PATH), backgrounds);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @PostMapping(\"/checkUserCardDesign\")\r\n    public ResponseEntity<Map<String, Object>> checkUserCardDesign(@RequestBody Map<String, String> request) {\r\n        String username = request.get(\"username\");\r\n\r\n        boolean purchased = cardDesigns.containsKey(username);\r\n        String activeDesign = cardDesigns.getOrDefault(username, \"\");\r\n\r\n        return ResponseEntity.ok(Map.of(\r\n                \"purchased\", purchased,\r\n                \"activeDesign\", activeDesign\r\n        ));\r\n    }\r\n\r\n    @PostMapping(\"/buyCardDesign\")\r\n    public ResponseEntity<Map<String, Object>> buyCardDesign(@RequestBody Map<String, Object> request) {\r\n        String username = (String) request.get(\"username\");\r\n        final int COST = 2;\r\n\r\n        synchronized (this) {\r\n            Account account = accounts.get(username);\r\n            if (account != null) {\r\n                if (account.coins() >= COST) {\r\n                    int newCoins = account.coins() - COST;\r\n                    Account updatedAccount = new Account(account.username(), account.password(), newCoins);\r\n                    accounts.put(username, updatedAccount);\r\n                    saveAccounts();\r\n\r\n                    System.out.println(\"Benutzer: \" + username);\r\n                    System.out.println(\"MÃ¼nzen vor dem Kauf: \" + account.coins());\r\n                    System.out.println(\"MÃ¼nzen nach dem Kauf: \" + newCoins);\r\n\r\n                    if (!cardDesigns.containsKey(username)) {\r\n                        cardDesigns.put(username, \"default\");\r\n                        saveCardDesigns();\r\n                    }\r\n                    return ResponseEntity.ok(Map.of(\r\n                            \"success\", true,\r\n                            \"coins\", newCoins,\r\n                            \"activeDesign\", cardDesigns.get(username)\r\n                    ));\r\n                } else {\r\n                    System.out.println(\"Nicht genug MÃ¼nzen fÃ¼r Benutzer: \" + username + \". Aktueller Stand: \" + account.coins());\r\n                    return ResponseEntity.ok(Map.of(\"success\", false, \"message\", \"Nicht genug MÃ¼nzen\"));\r\n                }\r\n            }\r\n\r\n            System.out.println(\"Benutzer nicht gefunden: \" + username);\r\n            return ResponseEntity.ok(Map.of(\"success\", false, \"message\", \"Benutzer nicht gefunden\"));\r\n        }\r\n    }\r\n\r\n    @PostMapping(\"/toggleCardDesign\")\r\n    public ResponseEntity<Map<String, Object>> toggleCardDesign(@RequestBody Map<String, String> request) {\r\n        String username = request.get(\"username\");\r\n        String designId = request.get(\"designId\");\r\n\r\n        if (cardDesigns.containsKey(username)) {\r\n            cardDesigns.put(username, designId);\r\n            saveCardDesigns();\r\n            return ResponseEntity.ok(Map.of(\r\n                    \"success\", true,\r\n                    \"activeDesign\", cardDesigns.get(username)\r\n            ));\r\n        } else {\r\n            return ResponseEntity.ok(Map.of(\"success\", false, \"message\", \"Benutzer hat keine Kartendesigns gekauft\"));\r\n        }\r\n    }\r\n\r\n    private void loadCardDesigns() {\r\n        try {\r\n            File file = new File(CARDS_FILE_PATH);\r\n            if (file.exists()) {\r\n                cardDesigns.putAll(mapper.readValue(file, new TypeReference<Map<String, String>>() {}));\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void saveCardDesigns() {\r\n        try {\r\n            mapper.writeValue(new File(CARDS_FILE_PATH), cardDesigns);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/src/main/java/com/example/demo/Controller.java b/../Element-Battle-main-public - Kopie/src/main/java/com/example/demo/Controller.java
--- a/../Element-Battle-main-public - Kopie/src/main/java/com/example/demo/Controller.java	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/src/main/java/com/example/demo/Controller.java	(date 1722147006914)
@@ -10,11 +10,11 @@
 import java.io.IOException;
 import java.io.Serializable;
 import com.fasterxml.jackson.databind.ObjectMapper;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
+
+import java.nio.file.Files;
+import java.util.*;
 import java.util.concurrent.atomic.AtomicInteger;
+import java.util.stream.Collectors;
 
 @RestController
 @CrossOrigin(origins = "*", allowedHeaders = "*")
@@ -23,6 +23,7 @@
     private static final String HEROES_FILE_PATH = "heros.json";
     private static final String ACCOUNTS_FILE_PATH = "acc.json";
     private static final String CARDS_FILE_PATH = "cards.json";
+    private static final String STATS_FILE_PATH = "stats.json";
     private final ObjectMapper mapper = new ObjectMapper();
 
     public record Hero(int id, String name, int HP, int Damage, String type, String extra) {}
@@ -160,6 +161,7 @@
         loadAccounts();
         loadBackgrounds();
         loadCardDesigns();
+        loadStats();
     }
 
     @PreDestroy
@@ -167,6 +169,8 @@
         saveHeroes();
         saveAccounts();
         saveBackgrounds();
+        saveCardDesigns();
+        saveStats();
     }
 
     private void loadAccounts() {
@@ -178,7 +182,7 @@
                 System.out.println("acc.json Datei existiert nicht.");
             }
         } catch (IOException e) {
-            e.printStackTrace();
+            System.out.println(e.getMessage());
         }
     }
 
@@ -187,9 +191,14 @@
         try {
             mapper.writeValue(new File(ACCOUNTS_FILE_PATH), accounts);
         } catch (IOException e) {
-            e.printStackTrace();
+            System.out.println("Fehler beim speichern der Accounts");
         }
     }
+
+    private int getCoinsForUser(String username) {
+        Account account = accounts.get(username);
+        return account != null ? account.coins() : 0;
+    }
 
     @PostMapping("/register")
     public ResponseEntity<Map<String, Object>> register(@RequestBody Map<String, String> user) {
@@ -210,6 +219,16 @@
         accounts.put(username, newAccount);
         saveAccounts();
 
+        Map<String, Object> newUserStats = new HashMap<>();
+        newUserStats.put("wins", 0);
+        newUserStats.put("coins", 0);
+        newUserStats.put("damage", 0);
+        newUserStats.put("direkt-damage", 0);
+        newUserStats.put("lose", 0);
+        newUserStats.put("winrate", 0.0);
+
+        saveUserStats(username, newUserStats);
+
         return ResponseEntity.ok(Map.of(
                 "success", true,
                 "username", username,
@@ -217,6 +236,149 @@
         ));
     }
 
+    private void saveStats() {
+        try {
+            mapper.writeValue(new File(STATS_FILE_PATH), stats);
+            System.out.println("Statistiken gespeichert: " + stats);
+        } catch (IOException e) {
+            System.out.println("Fehler beim Speichern der Statistiken: " + e.getMessage());
+        }
+    }
+
+    @GetMapping("/leaderboard")
+    public ResponseEntity<List<Map<String, Object>>> getLeaderboard() {
+        List<Map<String, Object>> leaderboard = stats.entrySet().stream()
+                .map(entry -> {
+                    Map<String, Object> playerStats = new HashMap<>(entry.getValue());
+                    playerStats.put("username", entry.getKey());
+                    return playerStats;
+                })
+                .sorted((a, b) -> Integer.compare(
+                        ((Number) b.getOrDefault("wins", 0)).intValue(),
+                        ((Number) a.getOrDefault("wins", 0)).intValue()
+                ))
+                .limit(10)
+                .collect(Collectors.toList());
+
+        return ResponseEntity.ok(leaderboard);
+    }
+
+    private void saveUserStats(String username, Map<String, Object> userStats) {
+        stats.put(username, new HashMap<>(userStats));
+        saveStats();
+        System.out.println("Statistiken fÃ¼r " + username + " gespeichert: " + userStats);
+    }
+
+    private Map<String, Map<String, Object>> stats = new HashMap<>();
+
+    private void loadStats() {
+        File file = new File(STATS_FILE_PATH);
+        if (file.exists()) {
+            try {
+                stats = mapper.readValue(file, new TypeReference<>() {});
+                System.out.println("Statistiken geladen: " + stats);
+            } catch (IOException e) {
+                System.out.println("Fehler beim Laden der Statistiken: " + e.getMessage());
+                stats = new HashMap<>();
+            }
+        } else {
+            System.out.println("stats.json Datei existiert nicht. Initialisiere leere Statistiken.");
+            stats = new HashMap<>();
+        }
+    }
+
+    private Map<String, Map<String, Object>> loadAllStats() {
+        try {
+            File file = new File(STATS_FILE_PATH);
+            if (file.exists()) {
+                Map<String, Map<String, Object>> allStats = mapper.readValue(file, new TypeReference<>() {});
+                System.out.println("Geladene Statistiken: " + allStats);
+                return allStats;
+            } else {
+                System.out.println("stats.json Datei existiert nicht. Eine neue wird erstellt.");
+                return new HashMap<>();
+            }
+        } catch (IOException e) {
+            System.out.println("Fehler beim Laden der Stats: " + e.getMessage());
+            return new HashMap<>();
+        }
+    }
+
+    @PostMapping("/getUserStats")
+    public ResponseEntity<Map<String, Object>> getUserStats(@RequestBody Map<String, String> request) {
+        String username = request.get("username");
+        if (username == null || username.isEmpty()) {
+            return ResponseEntity.badRequest().body(Map.of(
+                    "success", false,
+                    "message", "Benutzername ist erforderlich"
+            ));
+        }
+
+        Map<String, Object> userStats = loadUserStats(username);
+        if (userStats.isEmpty()) {
+            return ResponseEntity.ok(Map.of(
+                    "success", false,
+                    "message", "Keine Statistiken fÃ¼r diesen Benutzer gefunden"
+            ));
+        }
+
+        int coins = getCoinsForUser(username);
+        userStats.put("coins", coins);
+
+        return ResponseEntity.ok(Map.of(
+                "success", true,
+                "stats", userStats
+        ));
+    }
+
+    @PostMapping("/updateStats")
+    public ResponseEntity<Map<String, Object>> updateStats(@RequestBody Map<String, Object> statsUpdate) {
+        System.out.println("Empfangene Statistik-Update: " + statsUpdate);
+
+        String username = (String) statsUpdate.get("username");
+        int wins = ((Number) statsUpdate.getOrDefault("win", 0)).intValue();
+        int losses = ((Number) statsUpdate.getOrDefault("lose", 0)).intValue();
+        int damage = ((Number) statsUpdate.getOrDefault("damage", 0)).intValue();
+        int directDamage = ((Number) statsUpdate.getOrDefault("directDamage", 0)).intValue();
+        int coinsEarned = ((Number) statsUpdate.getOrDefault("coins", 0)).intValue();
+
+        System.out.println("Verarbeitete Daten: username=" + username + ", wins=" + wins + ", losses=" + losses + ", damage=" + damage + ", directDamage=" + directDamage + ", coinsEarned=" + coinsEarned);
+
+        Map<String, Object> userStats = loadUserStats(username);
+        System.out.println("Geladene Benutzerstatistiken vor Update: " + userStats);
+
+        userStats.put("wins", ((Number) userStats.getOrDefault("wins", 0)).intValue() + wins);
+        userStats.put("lose", ((Number) userStats.getOrDefault("lose", 0)).intValue() + losses);
+        userStats.put("damage", ((Number) userStats.getOrDefault("damage", 0)).intValue() + damage);
+        userStats.put("direkt-damage", ((Number) userStats.getOrDefault("direkt-damage", 0)).intValue() + directDamage);
+
+        int currentCoins = getCoinsForUser(username);
+        int newCoins = currentCoins + coinsEarned;
+        updateCoinsForUser(username, newCoins);
+        userStats.put("coins", newCoins);
+
+        int totalGames = ((Number) userStats.get("wins")).intValue() + ((Number) userStats.get("lose")).intValue();
+        double winrate = totalGames > 0 ? (((Number) userStats.get("wins")).doubleValue() / totalGames) * 100 : 0;
+        userStats.put("winrate", winrate);
+        System.out.println("Aktualisierte Benutzerstatistiken: " + userStats);
+
+        saveUserStats(username, userStats);
+
+        return ResponseEntity.ok(Map.of("success", true, "message", "Statistiken aktualisiert", "updatedStats", userStats));
+    }
+
+    private void updateCoinsForUser(String username, int newCoins) {
+        Account account = accounts.get(username);
+        if (account != null) {
+            accounts.put(username, new Account(username, account.password(), newCoins));
+            saveAccounts();
+        }
+    }
+
+    private Map<String, Object> loadUserStats(String username) {
+        return new HashMap<>(stats.getOrDefault(username, new HashMap<>()));
+    }
+
 
     @PostMapping("/login")
     public ResponseEntity<Map<String, Object>> login(@RequestBody Map<String, String> user) {
@@ -317,7 +479,11 @@
 
         Account account = accounts.get(username);
         if (account != null) {
-            Account updatedAccount = new Account(account.username(), account.password(), coins);
+            Account updatedAccount = new Account(
+                    account.username(),
+                    account.password(),
+                    coins
+            );
             accounts.put(username, updatedAccount);
             saveAccounts();
 
@@ -338,7 +504,11 @@
 
         Account account = accounts.get(username);
         if (account != null) {
-            Account updatedAccount = new Account(account.username(), account.password(), account.coins() + amount);
+            Account updatedAccount = new Account(
+                    account.username(),
+                    account.password(),
+                    account.coins() + amount
+            );
             accounts.put(username, updatedAccount);
             saveAccounts();
 
@@ -406,7 +576,7 @@
                 }
             }
         } catch (IOException e) {
-            e.printStackTrace();
+            System.out.println("Fehler beim laden der Helden!");
         }
     }
 
@@ -414,7 +584,7 @@
         try {
             mapper.writeValue(new File(HEROES_FILE_PATH), heroes);
         } catch (IOException e) {
-            e.printStackTrace();
+            System.out.println("Fehler beim speichern der Helden!");
         }
     }
 
@@ -517,7 +687,11 @@
         Account account = accounts.get(username);
         if (account != null) {
             if (account.coins() >= cost) {
-                Account updatedAccount = new Account(account.username(), account.password(), account.coins() - cost);
+                Account updatedAccount = new Account(
+                        account.username(),
+                        account.password(),
+                        account.coins() - cost
+                );
                 accounts.put(username, updatedAccount);
                 saveAccounts();
 
@@ -578,7 +752,7 @@
                 backgrounds.putAll(mapper.readValue(file, new TypeReference<Map<String, String>>() {}));
             }
         } catch (IOException e) {
-            e.printStackTrace();
+            System.out.println("Fehler beim laden der HintergrÃ¼nde!");
         }
     }
 
@@ -586,7 +760,7 @@
         try {
             mapper.writeValue(new File(BACKGROUNDS_FILE_PATH), backgrounds);
         } catch (IOException e) {
-            e.printStackTrace();
+            System.out.println("Fehler beim speichern der HintergrÃ¼nde!");
         }
     }
 
@@ -612,14 +786,17 @@
             Account account = accounts.get(username);
             if (account != null) {
                 if (account.coins() >= COST) {
-                    int newCoins = account.coins() - COST;
-                    Account updatedAccount = new Account(account.username(), account.password(), newCoins);
+                    Account updatedAccount = new Account(
+                            account.username(),
+                            account.password(),
+                            account.coins() - COST
+                    );
                     accounts.put(username, updatedAccount);
                     saveAccounts();
 
                     System.out.println("Benutzer: " + username);
                     System.out.println("MÃ¼nzen vor dem Kauf: " + account.coins());
-                    System.out.println("MÃ¼nzen nach dem Kauf: " + newCoins);
+                    System.out.println("MÃ¼nzen nach dem Kauf: " + updatedAccount.coins());
 
                     if (!cardDesigns.containsKey(username)) {
                         cardDesigns.put(username, "default");
@@ -627,7 +804,7 @@
                     }
                     return ResponseEntity.ok(Map.of(
                             "success", true,
-                            "coins", newCoins,
+                            "coins", updatedAccount.coins(),
                             "activeDesign", cardDesigns.get(username)
                     ));
                 } else {
@@ -665,7 +842,7 @@
                 cardDesigns.putAll(mapper.readValue(file, new TypeReference<Map<String, String>>() {}));
             }
         } catch (IOException e) {
-            e.printStackTrace();
+            System.out.println("Fehler beim laden der Kartendesigns");
         }
     }
 
@@ -673,7 +850,7 @@
         try {
             mapper.writeValue(new File(CARDS_FILE_PATH), cardDesigns);
         } catch (IOException e) {
-            e.printStackTrace();
+            System.out.println("Fehler beim speichern der Kartendesigns");
         }
     }
 }
Index: ../Element-Battle-main-public - Kopie/build/libs/back.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/build/libs/back.json b/../Element-Battle-main-public - Kopie/build/libs/back.json
--- a/../Element-Battle-main-public - Kopie/build/libs/back.json	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/build/libs/back.json	(date 1721896596364)
@@ -1,0 +1,1 @@
+{}
\ No newline at end of file
Index: ../Element-Battle-main-public - Kopie/acc.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"Tilljan2\":{\"username\":\"Tilljan2\",\"password\":\"tilljan2\",\"coins\":1},\"Tilljan1\":{\"username\":\"Tilljan\",\"password\":\"tilljan\",\"coins\":15},\"Tilljan3\":{\"username\":\"Tilljan3\",\"password\":\"tilljan3\",\"coins\":1}}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/acc.json b/../Element-Battle-main-public - Kopie/acc.json
--- a/../Element-Battle-main-public - Kopie/acc.json	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/acc.json	(date 1725553598232)
@@ -1,1 +1,1 @@
-{"Tilljan2":{"username":"Tilljan2","password":"tilljan2","coins":1},"Tilljan1":{"username":"Tilljan","password":"tilljan","coins":15},"Tilljan3":{"username":"Tilljan3","password":"tilljan3","coins":1}}
\ No newline at end of file
+{"Tilljan":{"username":"Tilljan","password":"tilljan","coins":1},"Tilljan2":{"username":"Tilljan2","password":"tilljan2","coins":0}}
\ No newline at end of file
Index: ../Element-Battle-main-public - Kopie/src/main/resources/static/account.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@keyframes fadeIn {\r\n    from { opacity: 0; }\r\n    to { opacity: 1; }\r\n}\r\n\r\n@keyframes fall {\r\n    to {\r\n        transform: translateY(100vh) rotate(720deg);\r\n    }\r\n}\r\n\r\n@keyframes slideIn {\r\n    from { transform: translateY(-20px); opacity: 0; }\r\n    to { transform: translateY(0); opacity: 1; }\r\n}\r\n\r\n@keyframes blink-success {\r\n    0% {\r\n        background-color: #fff;\r\n        transform: scale(1);\r\n    }\r\n    50% {\r\n        background-color: yellowgreen;\r\n        transform: scale(1.2);\r\n    }\r\n    100% {\r\n        background-color: #fff;\r\n        transform: scale(1);\r\n    }\r\n}\r\n\r\n.save-success {\r\n    animation: blink-success 2s ease-in-out;\r\n}\r\n\r\nbody {\r\n    font-family: 'Roboto', sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: #f4f4f9;\r\n    color: #333;\r\n    min-height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\nheader {\r\n    background-color: #4CAF50;\r\n    color: #fff;\r\n    padding: 10px 0;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nheader nav {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 20px;\r\n    max-width: 100%;\r\n    margin: 0 auto;\r\n}\r\n\r\n.nav-left {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.logo {\r\n    height: 40px;\r\n    margin-right: 15px;\r\n}\r\n\r\n.nav-title {\r\n    margin: 0;\r\n    font-size: 1.5em;\r\n    font-weight: 500;\r\n}\r\n\r\n.nav-buttons .but {\r\n    background-color: #ffffff;\r\n    color: #4CAF50;\r\n    margin-left: auto;\r\n    border: none;\r\n    padding: 8px 15px;\r\n    border-radius: 20px;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.nav-buttons .but:hover {\r\n    background-color: #e8f5e9;\r\n    transform: translateY(-2px);\r\n}\r\n\r\n.nav-buttons .but i {\r\n    margin-right: 5px;\r\n}\r\n\r\nmain {\r\n    flex-grow: 0.4;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 20px 20px;\r\n}\r\n\r\n.account-container {\r\n    background: #ffffff;\r\n    padding: 30px;\r\n    border-radius: 10px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    width: 100%;\r\n    max-width: 400px;\r\n    animation: fadeIn 0.5s ease-out;\r\n    border: 2px solid #4CAF50;\r\n}\r\n\r\nh2 {\r\n    margin-bottom: 30px;\r\n    font-size: 24px;\r\n    color: #333;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    animation: slideIn 0.5s ease-out;\r\n}\r\n\r\n.input-group {\r\n    margin-bottom: 25px;\r\n    animation: slideIn 0.5s ease-out;\r\n}\r\n\r\nlabel {\r\n    display: block;\r\n    margin-bottom: 8px;\r\n    font-size: 14px;\r\n    color: #555;\r\n    font-weight: 500;\r\n}\r\n\r\n.input-wrapper {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.input-icon {\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    color: #4CAF50;\r\n    z-index: 1;\r\n}\r\n\r\ninput[type=\"text\"], input[type=\"password\"] {\r\n    width: 100%;\r\n    padding: 10px 40px 10px 35px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n    font-size: 16px;\r\n    transition: border-color 0.3s ease, box-shadow 0.3s ease;\r\n    position: relative;\r\n    z-index: 2;\r\n    background-color: transparent;\r\n}\r\n\r\ninput[type=\"text\"]:focus, input[type=\"password\"]:focus,\r\ninput[type=\"text\"].editing, input[type=\"password\"].editing {\r\n    border-color: #4CAF50;\r\n    outline: none;\r\n    box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\r\n}\r\n\r\n.edit-btn, .toggle-password {\r\n    background: none;\r\n    border: none;\r\n    color: #4CAF50;\r\n    cursor: pointer;\r\n    font-size: 18px;\r\n    padding: 5px;\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    transition: color 0.3s ease, transform 0.3s ease;\r\n    z-index: 3;\r\n}\r\n\r\n.edit-btn:hover, .toggle-password:hover {\r\n    color: #45a049;\r\n    transform: translateY(-50%) scale(1.1);\r\n}\r\n\r\n.toggle-password {\r\n    right: 40px;\r\n}\r\n\r\n.save-btn {\r\n    width: 100%;\r\n    padding: 12px;\r\n    background: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    transition: background 0.3s ease, transform 0.3s ease;\r\n    font-weight: 500;\r\n    animation: slideIn 0.5s ease-out;\r\n}\r\n\r\n.save-btn:hover:not(:disabled) {\r\n    background: #45a049;\r\n    transform: translateY(-2px);\r\n}\r\n\r\n.save-btn:disabled {\r\n    background: #cccccc;\r\n    cursor: not-allowed;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n    .form-container {\r\n        padding: 20px;\r\n    }\r\n\r\n    h2 {\r\n        font-size: 20px;\r\n    }\r\n\r\n    input[type=\"text\"], input[type=\"password\"] {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .save-btn {\r\n        font-size: 14px;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/src/main/resources/static/account.css b/../Element-Battle-main-public - Kopie/src/main/resources/static/account.css
--- a/../Element-Battle-main-public - Kopie/src/main/resources/static/account.css	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/src/main/resources/static/account.css	(date 1722148060265)
@@ -101,22 +101,84 @@
 }
 
 main {
-    flex-grow: 0.4;
+    flex-grow: 1;
+    display: flex;
+    justify-content: center;
+    align-items: flex-start;
+    padding: 40px 20px;
+}
+
+.content-wrapper {
     display: flex;
+    flex-wrap: wrap;
     justify-content: center;
-    align-items: center;
-    padding: 20px 20px;
-}
+    gap: 40px;
+    max-width: 1200px;
+    width: 100%;
+}
+
+.leaderboard-container {
+    background: #ffffff;
+    padding: 30px;
+    border-radius: 10px;
+    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
+    width: 100%;
+    max-width: 400px;
+    animation: fadeIn 0.5s ease-out;
+    transition: transform 0.3s ease, box-shadow 0.3s ease;
+}
+
+.leaderboard-container:hover {
+    transform: translateY(-5px);
+    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
+}
+
+#leaderboardTable {
+    width: 100%;
+    border-collapse: collapse;
+}
+
+#leaderboardTable th, #leaderboardTable td {
+    padding: 10px;
+    text-align: left;
+    border-bottom: 1px solid #eee;
+}
+
+#leaderboardTable th {
+    background-color: #f8f8f8;
+    font-weight: bold;
+    color: #4CAF50;
+}
+
+#leaderboardTable tr:hover {
+    background-color: #f5f5f5;
+}
+
+@media (max-width: 1200px) {
+    .content-wrapper {
+        flex-direction: column;
+        align-items: center;
+    }
 
-.account-container {
+    .account-container, .stats-container, .leaderboard-container {
+        max-width: 100%;
+    }
+}
+
+.account-container, .stats-container {
     background: #ffffff;
     padding: 30px;
     border-radius: 10px;
-    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
+    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
     width: 100%;
     max-width: 400px;
     animation: fadeIn 0.5s ease-out;
-    border: 2px solid #4CAF50;
+    border: none;
+    transition: transform 0.3s ease, box-shadow 0.3s ease;
+}
+
+.account-container:hover, .stats-container:hover {
+    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
 }
 
 h2 {
@@ -223,6 +285,25 @@
     cursor: not-allowed;
 }
 
+#statsContent {
+    display: grid;
+    grid-template-columns: repeat(2, 1fr);
+    gap: 10px;
+}
+
+.stat-label {
+    font-weight: 500;
+    color: #4CAF50;
+    margin-bottom: 5px;
+    font-size: 14px;
+}
+
+.stat-value {
+    font-size: 24px;
+    font-weight: 700;
+    color: #333;
+}
+
 @media (max-width: 600px) {
     .form-container {
         padding: 20px;
Index: ../Element-Battle-main-public - Kopie/build/libs/heros.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[{\"id\":1,\"name\":\"Ignis Flammenherz\",\"HP\":12,\"Damage\":12,\"type\":\"Feuer\",\"extra\":\"Entfesselt ein feuriges Inferno!\"},{\"id\":2,\"name\":\"Pyra Glutsturm\",\"HP\":11,\"Damage\":10,\"type\":\"Feuer\",\"extra\":\"Brennt mit der Hitze von tausend Sonnen!\"},{\"id\":3,\"name\":\"Vulcan Feuerschild\",\"HP\":14,\"Damage\":8,\"type\":\"Feuer\",\"extra\":\"Schmiedet Schwerter aus flÃ¼ssiger Lava!\"},{\"id\":4,\"name\":\"Inferno Feuerschlag\",\"HP\":9,\"Damage\":13,\"type\":\"Feuer\",\"extra\":\"Tanzt um FeuerstÃ¼rme herum!\"},{\"id\":5,\"name\":\"Helios SonnentÃ¤nzer\",\"HP\":13,\"Damage\":14,\"type\":\"Feuer\",\"extra\":\"Herrscht Ã¼ber Vulkan und Flamme!\"},{\"id\":6,\"name\":\"Aqualis Meeresrufer\",\"HP\":11,\"Damage\":11,\"type\":\"Wasser\",\"extra\":\"Beherrscht die Wellen und Meerestiere.\"},{\"id\":7,\"name\":\"Nerina Wellenweber\",\"HP\":10,\"Damage\":9,\"type\":\"Wasser\",\"extra\":\"Beruhigt und kontrolliert die Gezeiten.\"},{\"id\":8,\"name\":\"Aquara Wasserschild\",\"HP\":13,\"Damage\":14,\"type\":\"Wasser\",\"extra\":\"Tiefseeabenteuer und Ozeansymphonie!\"},{\"id\":9,\"name\":\"Hydra Aquadonner\",\"HP\":12,\"Damage\":12,\"type\":\"Wasser\",\"extra\":\"Ruft die MeeresgÃ¶tter zu Hilfe!\"},{\"id\":10,\"name\":\"Poseidon Meereswoge\",\"HP\":9,\"Damage\":13,\"type\":\"Wasser\",\"extra\":\"Wasserwirbel und Strudelmeisterschaft!\"},{\"id\":11,\"name\":\"Flora Rankengriff\",\"HP\":10,\"Damage\":10,\"type\":\"Pflanze\",\"extra\":\"Umschlingt Gegner mit Ranken!\"},{\"id\":12,\"name\":\"Sylva Blattwerk\",\"HP\":9,\"Damage\":12,\"type\":\"Pflanze\",\"extra\":\"Meister der Photosynthese und des Waldwachstums.\"},{\"id\":13,\"name\":\"Gaia GrÃ¼nhÃ¼ter\",\"HP\":12,\"Damage\":9,\"type\":\"Pflanze\",\"extra\":\"BlÃ¼tenzauber und Fruchtbarkeitsernte!\"},{\"id\":14,\"name\":\"Verdura Blattsturm\",\"HP\":13,\"Damage\":14,\"type\":\"Pflanze\",\"extra\":\"Wurzeln, die bis in die Tiefen reichen!\"},{\"id\":15,\"name\":\"Arborea Waldwisperer\",\"HP\":11,\"Damage\":13,\"type\":\"Pflanze\",\"extra\":\"Beherrscht den Wald in seiner ganzen Pracht!\"},{\"id\":16,\"name\":\"Voltaris Donnerklinge\",\"HP\":9,\"Damage\":13,\"type\":\"Elektro\",\"extra\":\"SchlÃ¤gt mit der Kraft eines Gewitters zu.\"},{\"id\":17,\"name\":\"Electra Blitzschlag\",\"HP\":8,\"Damage\":14,\"type\":\"Elektro\",\"extra\":\"Elektrisiert das Schlachtfeld mit einem Funken.\"},{\"id\":18,\"name\":\"Raiden Donnerfaust\",\"HP\":11,\"Damage\":11,\"type\":\"Elektro\",\"extra\":\"Blitze zucken durch die Luft!\"},{\"id\":19,\"name\":\"Jolt Elektrosturm\",\"HP\":10,\"Damage\":10,\"type\":\"Elektro\",\"extra\":\"Ladung, die die Luft zum ZerreiÃen bringt!\"},{\"id\":20,\"name\":\"Thor Donnergroll\",\"HP\":14,\"Damage\":8,\"type\":\"Elektro\",\"extra\":\"Donnerhall und elektrische Eruption!\"},{\"id\":21,\"name\":\"Terran Steinschmied\",\"HP\":15,\"Damage\":9,\"type\":\"Erde\",\"extra\":\"Fest wie ein Berg, unnachgiebig.\"},{\"id\":22,\"name\":\"Gaia ErdenwÃ¤chter\",\"HP\":13,\"Damage\":13,\"type\":\"Erde\",\"extra\":\"Mutter der Erde und der Natur.\"},{\"id\":23,\"name\":\"Atlas Felsenfaust\",\"HP\":10,\"Damage\":8,\"type\":\"Erde\",\"extra\":\"Erdbeben und Steinschatten!\"},{\"id\":24,\"name\":\"Terra Erdenschild\",\"HP\":12,\"Damage\":12,\"type\":\"Erde\",\"extra\":\"Felsen, die wie Wasser flieÃen!\"},{\"id\":25,\"name\":\"Golem Felsensturm\",\"HP\":11,\"Damage\":14,\"type\":\"Erde\",\"extra\":\"Wurzeln, die sich tief in die Erde graben!\"},{\"id\":26,\"name\":\"Glacies Frostschild\",\"HP\":10,\"Damage\":12,\"type\":\"Eis\",\"extra\":\"Eisige KÃ¤ltepeitsche!\"},{\"id\":27,\"name\":\"Frostius Eisessturm\",\"HP\":12,\"Damage\":10,\"type\":\"Eis\",\"extra\":\"Frostiger Sturm!\"},{\"id\":28,\"name\":\"Tundrus Eisbann\",\"HP\":14,\"Damage\":14,\"type\":\"Eis\",\"extra\":\"Schneesturm und gefrorene Stille!\"},{\"id\":29,\"name\":\"Chillara Frosthauch\",\"HP\":11,\"Damage\":13,\"type\":\"Eis\",\"extra\":\"Glitzerndes Eis und kristalline Eleganz!\"},{\"id\":30,\"name\":\"Blizzara Frostfeuer\",\"HP\":9,\"Damage\":9,\"type\":\"Eis\",\"extra\":\"Frostbeulen und gefrorene Schicksale!\"},{\"id\":31,\"name\":\"Zephyrus Windrufer\",\"HP\":9,\"Damage\":14,\"type\":\"Luft\",\"extra\":\"Ruft die Winde und StÃ¼rme herbei!\"},{\"id\":32,\"name\":\"Aeris Luftklinge\",\"HP\":11,\"Damage\":13,\"type\":\"Luft\",\"extra\":\"Tanzt mit den LÃ¼ften!\"},{\"id\":33,\"name\":\"Aeolus Sturmbote\",\"HP\":13,\"Damage\":10,\"type\":\"Luft\",\"extra\":\"FlÃ¼gel aus Wolken und federleichter Tanz!\"},{\"id\":34,\"name\":\"Galea WindesflÃ¼gel\",\"HP\":10,\"Damage\":9,\"type\":\"Luft\",\"extra\":\"SturmfÃ¤nger und Wolkenwanderer!\"},{\"id\":35,\"name\":\"Caelus Wolke\",\"HP\":12,\"Damage\":12,\"type\":\"Erde\",\"extra\":\"SphÃ¤renklÃ¤nge und Windgesang!\"}]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/build/libs/heros.json b/../Element-Battle-main-public - Kopie/build/libs/heros.json
--- a/../Element-Battle-main-public - Kopie/build/libs/heros.json	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/build/libs/heros.json	(date 1721896596348)
@@ -1,1 +1,1 @@
-[{"id":1,"name":"Ignis Flammenherz","HP":12,"Damage":12,"type":"Feuer","extra":"Entfesselt ein feuriges Inferno!"},{"id":2,"name":"Pyra Glutsturm","HP":11,"Damage":10,"type":"Feuer","extra":"Brennt mit der Hitze von tausend Sonnen!"},{"id":3,"name":"Vulcan Feuerschild","HP":14,"Damage":8,"type":"Feuer","extra":"Schmiedet Schwerter aus flÃ¼ssiger Lava!"},{"id":4,"name":"Inferno Feuerschlag","HP":9,"Damage":13,"type":"Feuer","extra":"Tanzt um FeuerstÃ¼rme herum!"},{"id":5,"name":"Helios SonnentÃ¤nzer","HP":13,"Damage":14,"type":"Feuer","extra":"Herrscht Ã¼ber Vulkan und Flamme!"},{"id":6,"name":"Aqualis Meeresrufer","HP":11,"Damage":11,"type":"Wasser","extra":"Beherrscht die Wellen und Meerestiere."},{"id":7,"name":"Nerina Wellenweber","HP":10,"Damage":9,"type":"Wasser","extra":"Beruhigt und kontrolliert die Gezeiten."},{"id":8,"name":"Aquara Wasserschild","HP":13,"Damage":14,"type":"Wasser","extra":"Tiefseeabenteuer und Ozeansymphonie!"},{"id":9,"name":"Hydra Aquadonner","HP":12,"Damage":12,"type":"Wasser","extra":"Ruft die MeeresgÃ¶tter zu Hilfe!"},{"id":10,"name":"Poseidon Meereswoge","HP":9,"Damage":13,"type":"Wasser","extra":"Wasserwirbel und Strudelmeisterschaft!"},{"id":11,"name":"Flora Rankengriff","HP":10,"Damage":10,"type":"Pflanze","extra":"Umschlingt Gegner mit Ranken!"},{"id":12,"name":"Sylva Blattwerk","HP":9,"Damage":12,"type":"Pflanze","extra":"Meister der Photosynthese und des Waldwachstums."},{"id":13,"name":"Gaia GrÃ¼nhÃ¼ter","HP":12,"Damage":9,"type":"Pflanze","extra":"BlÃ¼tenzauber und Fruchtbarkeitsernte!"},{"id":14,"name":"Verdura Blattsturm","HP":13,"Damage":14,"type":"Pflanze","extra":"Wurzeln, die bis in die Tiefen reichen!"},{"id":15,"name":"Arborea Waldwisperer","HP":11,"Damage":13,"type":"Pflanze","extra":"Beherrscht den Wald in seiner ganzen Pracht!"},{"id":16,"name":"Voltaris Donnerklinge","HP":9,"Damage":13,"type":"Elektro","extra":"SchlÃ¤gt mit der Kraft eines Gewitters zu."},{"id":17,"name":"Electra Blitzschlag","HP":8,"Damage":14,"type":"Elektro","extra":"Elektrisiert das Schlachtfeld mit einem Funken."},{"id":18,"name":"Raiden Donnerfaust","HP":11,"Damage":11,"type":"Elektro","extra":"Blitze zucken durch die Luft!"},{"id":19,"name":"Jolt Elektrosturm","HP":10,"Damage":10,"type":"Elektro","extra":"Ladung, die die Luft zum ZerreiÃen bringt!"},{"id":20,"name":"Thor Donnergroll","HP":14,"Damage":8,"type":"Elektro","extra":"Donnerhall und elektrische Eruption!"},{"id":21,"name":"Terran Steinschmied","HP":15,"Damage":9,"type":"Erde","extra":"Fest wie ein Berg, unnachgiebig."},{"id":22,"name":"Gaia ErdenwÃ¤chter","HP":13,"Damage":13,"type":"Erde","extra":"Mutter der Erde und der Natur."},{"id":23,"name":"Atlas Felsenfaust","HP":10,"Damage":8,"type":"Erde","extra":"Erdbeben und Steinschatten!"},{"id":24,"name":"Terra Erdenschild","HP":12,"Damage":12,"type":"Erde","extra":"Felsen, die wie Wasser flieÃen!"},{"id":25,"name":"Golem Felsensturm","HP":11,"Damage":14,"type":"Erde","extra":"Wurzeln, die sich tief in die Erde graben!"},{"id":26,"name":"Glacies Frostschild","HP":10,"Damage":12,"type":"Eis","extra":"Eisige KÃ¤ltepeitsche!"},{"id":27,"name":"Frostius Eisessturm","HP":12,"Damage":10,"type":"Eis","extra":"Frostiger Sturm!"},{"id":28,"name":"Tundrus Eisbann","HP":14,"Damage":14,"type":"Eis","extra":"Schneesturm und gefrorene Stille!"},{"id":29,"name":"Chillara Frosthauch","HP":11,"Damage":13,"type":"Eis","extra":"Glitzerndes Eis und kristalline Eleganz!"},{"id":30,"name":"Blizzara Frostfeuer","HP":9,"Damage":9,"type":"Eis","extra":"Frostbeulen und gefrorene Schicksale!"},{"id":31,"name":"Zephyrus Windrufer","HP":9,"Damage":14,"type":"Luft","extra":"Ruft die Winde und StÃ¼rme herbei!"},{"id":32,"name":"Aeris Luftklinge","HP":11,"Damage":13,"type":"Luft","extra":"Tanzt mit den LÃ¼ften!"},{"id":33,"name":"Aeolus Sturmbote","HP":13,"Damage":10,"type":"Luft","extra":"FlÃ¼gel aus Wolken und federleichter Tanz!"},{"id":34,"name":"Galea WindesflÃ¼gel","HP":10,"Damage":9,"type":"Luft","extra":"SturmfÃ¤nger und Wolkenwanderer!"},{"id":35,"name":"Caelus Wolke","HP":12,"Damage":12,"type":"Erde","extra":"SphÃ¤renklÃ¤nge und Windgesang!"}]
\ No newline at end of file
+[]
\ No newline at end of file
Index: ../Element-Battle-main-public - Kopie/src/main/resources/static/account.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>document.addEventListener('DOMContentLoaded', function() {\r\n    const usernameInput = document.getElementById('username');\r\n    const passwordInput = document.getElementById('password');\r\n    const editButtons = document.querySelectorAll('.edit-btn');\r\n    const saveButton = document.querySelector('.save-btn');\r\n    const accountForm = document.getElementById('accountForm');\r\n    const togglePasswordButton = document.getElementById('togglePassword');\r\n    const formContainer = document.querySelector('.form-container');\r\n\r\n    let originalUsername = '';\r\n    let originalPassword = '';\r\n    let actualPassword = '';\r\n\r\n    loadUserInfo();\r\n\r\n    editButtons.forEach(button => {\r\n        button.addEventListener('click', function() {\r\n            const targetId = this.getAttribute('data-target');\r\n            const targetInput = document.getElementById(targetId);\r\n            if (targetInput.readOnly) {\r\n                targetInput.readOnly = false;\r\n                this.innerHTML = '<i class=\"fas fa-times\"></i>';\r\n                this.title = 'Abbrechen';\r\n                targetInput.classList.add('editing');\r\n                if (targetId === 'password') {\r\n                    targetInput.value = actualPassword;\r\n                    targetInput.type = 'text';\r\n                    togglePasswordButton.querySelector('i').classList.replace('fa-eye', 'fa-eye-slash');\r\n                }\r\n            } else {\r\n                targetInput.readOnly = true;\r\n                this.innerHTML = '<i class=\"fas fa-edit\"></i>';\r\n                this.title = 'Bearbeiten';\r\n                targetInput.classList.remove('editing');\r\n                if (targetId === 'username') {\r\n                    targetInput.value = originalUsername;\r\n                } else if (targetId === 'password') {\r\n                    targetInput.value = '*'.repeat(actualPassword.length);\r\n                    targetInput.type = 'password';\r\n                    togglePasswordButton.querySelector('i').classList.replace('fa-eye-slash', 'fa-eye');\r\n                }\r\n            }\r\n            updateSaveButtonState();\r\n        });\r\n    });\r\n\r\n    function createConfetti() {\r\n        const confettiCount = 300;\r\n        const confettiContainer = document.createElement('div');\r\n        confettiContainer.style.position = 'fixed';\r\n        confettiContainer.style.top = '0';\r\n        confettiContainer.style.left = '0';\r\n        confettiContainer.style.width = '100%';\r\n        confettiContainer.style.height = '100%';\r\n        confettiContainer.style.pointerEvents = 'none';\r\n        confettiContainer.style.zIndex = '9999';\r\n\r\n        for (let i = 0; i < confettiCount; i++) {\r\n            const confetti = document.createElement('div');\r\n            confetti.style.position = 'absolute';\r\n            confetti.style.width = '10px';\r\n            confetti.style.height = '10px';\r\n            confetti.style.backgroundColor = getRandomColor();\r\n            confetti.style.left = Math.random() * 100 + 'vw';\r\n            confetti.style.top = '-10px';\r\n            confetti.style.borderRadius = '50%';\r\n            confetti.style.transform = `rotate(${Math.random() * 360}deg)`;\r\n            confetti.style.animation = `fall ${Math.random() * 3 + 2}s linear`;\r\n            confettiContainer.appendChild(confetti);\r\n        }\r\n\r\n        document.body.appendChild(confettiContainer);\r\n\r\n        setTimeout(() => {\r\n            document.body.removeChild(confettiContainer);\r\n        }, 5000);\r\n    }\r\n\r\n    function getRandomColor() {\r\n        const letters = '0123456789ABCDEF';\r\n        let color = '#';\r\n        for (let i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    }\r\n\r\n    accountForm.addEventListener('submit', function(e) {\r\n        e.preventDefault();\r\n        saveChanges();\r\n    });\r\n\r\n    togglePasswordButton.addEventListener('click', function() {\r\n        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';\r\n        passwordInput.setAttribute('type', type);\r\n        this.querySelector('i').classList.toggle('fa-eye');\r\n        this.querySelector('i').classList.toggle('fa-eye-slash');\r\n        if (type === 'text' && passwordInput.readOnly) {\r\n            passwordInput.value = actualPassword;\r\n        } else if (type === 'password' && passwordInput.readOnly) {\r\n            passwordInput.value = '*'.repeat(actualPassword.length);\r\n        }\r\n    });\r\n\r\n    function loadUserInfo() {\r\n        const username = localStorage.getItem('username');\r\n        if (!username) {\r\n            alert('Bitte melden Sie sich an, um Ihre Kontoinformationen zu sehen.');\r\n            window.location.href = 'login.html';\r\n            return;\r\n        }\r\n\r\n        fetch('/getUserInfo', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username: username })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success) {\r\n                    usernameInput.value = data.username;\r\n                    originalUsername = data.username;\r\n                    actualPassword = data.password;\r\n                    passwordInput.value = '*'.repeat(actualPassword.length);\r\n                    originalPassword = '*'.repeat(actualPassword.length);\r\n                } else {\r\n                    alert('Fehler beim Laden der Benutzerinformationen.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n                alert('Ein Fehler ist aufgetreten. Bitte versuchen Sie es spÃ¤ter erneut.');\r\n            });\r\n    }\r\n\r\n    function updateSaveButtonState() {\r\n        const isUsernameChanged = usernameInput.value !== originalUsername && !usernameInput.readOnly;\r\n        const isPasswordChanged = passwordInput.value !== '' && passwordInput.value !== '*'.repeat(actualPassword.length) && !passwordInput.readOnly;\r\n        saveButton.disabled = !(isUsernameChanged || isPasswordChanged);\r\n    }\r\n\r\n    function saveChanges() {\r\n        const newUsername = usernameInput.value;\r\n        const newPassword = passwordInput.value;\r\n\r\n        if (newUsername === originalUsername && (newPassword === '' || newPassword === '*'.repeat(actualPassword.length))) {\r\n            alert('Keine Ãnderungen vorgenommen.');\r\n            return;\r\n        }\r\n\r\n        const updateData = {\r\n            oldUsername: originalUsername,\r\n            newUsername: newUsername,\r\n            newPassword: (newPassword !== '' && newPassword !== '*'.repeat(actualPassword.length)) ? newPassword : null\r\n        };\r\n\r\n        fetch('/updateAccount', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(updateData)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success) {\r\n                    createConfetti();\r\n\r\n                    originalUsername = newUsername;\r\n                    if (newPassword !== '' && newPassword !== '*'.repeat(actualPassword.length)) {\r\n                        actualPassword = newPassword;\r\n                    }\r\n                    localStorage.setItem('username', newUsername);\r\n                    resetInputs();\r\n                    loadUserInfo();\r\n\r\n                    const successMessage = document.createElement('div');\r\n                    successMessage.textContent = 'Ãnderungen erfolgreich gespeichert!';\r\n                    successMessage.style.position = 'fixed';\r\n                    successMessage.style.top = '20px';\r\n                    successMessage.style.left = '50%';\r\n                    successMessage.style.transform = 'translateX(-50%)';\r\n                    successMessage.style.backgroundColor = '#4CAF50';\r\n                    successMessage.style.color = 'white';\r\n                    successMessage.style.padding = '10px 20px';\r\n                    successMessage.style.borderRadius = '5px';\r\n                    successMessage.style.zIndex = '10000';\r\n                    document.body.appendChild(successMessage);\r\n\r\n                    setTimeout(() => {\r\n                        document.body.removeChild(successMessage);\r\n                    }, 3000);\r\n                } else {\r\n                    alert('Fehler beim Aktualisieren der Kontoinformationen: ' + data.message);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n                alert('Ein Fehler ist aufgetreten. Bitte versuchen Sie es spÃ¤ter erneut.');\r\n            });\r\n    }\r\n\r\n    function resetInputs() {\r\n        usernameInput.value = originalUsername;\r\n        passwordInput.value = '*'.repeat(actualPassword.length);\r\n        passwordInput.type = 'password';\r\n        togglePasswordButton.querySelector('i').classList.replace('fa-eye-slash', 'fa-eye');\r\n        editButtons.forEach(button => {\r\n            button.innerHTML = '<i class=\"fas fa-edit\"></i>';\r\n            button.title = 'Bearbeiten';\r\n        });\r\n        usernameInput.readOnly = true;\r\n        passwordInput.readOnly = true;\r\n        updateSaveButtonState();\r\n    }\r\n\r\n    usernameInput.addEventListener('input', updateSaveButtonState);\r\n    passwordInput.addEventListener('input', updateSaveButtonState);\r\n});
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/src/main/resources/static/account.js b/../Element-Battle-main-public - Kopie/src/main/resources/static/account.js
--- a/../Element-Battle-main-public - Kopie/src/main/resources/static/account.js	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/src/main/resources/static/account.js	(date 1722147093090)
@@ -5,7 +5,8 @@
     const saveButton = document.querySelector('.save-btn');
     const accountForm = document.getElementById('accountForm');
     const togglePasswordButton = document.getElementById('togglePassword');
-    const formContainer = document.querySelector('.form-container');
+
+    loadLeaderboard();
 
     let originalUsername = '';
     let originalPassword = '';
@@ -123,15 +124,88 @@
                     usernameInput.value = data.username;
                     originalUsername = data.username;
                     actualPassword = data.password;
-                    passwordInput.value = '*'.repeat(actualPassword.length);
-                    originalPassword = '*'.repeat(actualPassword.length);
+                    passwordInput.value = '*'.repeat(data.password.length);
+                    originalPassword = passwordInput.value;
+
+                    loadUserStats();
+                } else {
+                    console.error('Fehler beim Laden der Benutzerinformationen:', data.message);
+                }
+            })
+            .catch(error => {
+                console.error('Fehler beim Laden der Benutzerinformationen:', error);
+            });
+    }
+
+    function loadUserStats() {
+        const username = localStorage.getItem('username');
+        if (!username) return;
+
+        fetch('/getUserStats', {
+            method: 'POST',
+            headers: {
+                'Content-Type': 'application/json',
+            },
+            body: JSON.stringify({ username: username })
+        })
+            .then(response => response.json())
+            .then(data => {
+                if (data.success) {
+                    const statsContent = document.getElementById('statsContent');
+                    const stats = data.stats;
+                    statsContent.innerHTML = `
+                    <div class="stat-item">
+                        <div class="stat-label">Siege</div>
+                        <div class="stat-value">${stats.wins || 0}</div>
+                    </div>
+                    <div class="stat-item">
+                        <div class="stat-label">Niederlagen</div>
+                        <div class="stat-value">${stats.lose || 0}</div>
+                    </div>
+                    <div class="stat-item">
+                        <div class="stat-label">Schaden</div>
+                        <div class="stat-value">${stats.damage || 0}</div>
+                    </div>
+                    <div class="stat-item">
+                        <div class="stat-label">Direkter Schaden</div>
+                        <div class="stat-value">${stats['direkt-damage'] || 0}</div>
+                    </div>
+                    <div class="stat-item">
+                        <div class="stat-label">Coins</div>
+                        <div class="stat-value">${stats.coins || 0}</div>
+                    </div>
+                    <div class="stat-item">
+                        <div class="stat-label">Gewinnrate</div>
+                        <div class="stat-value">${(stats.winrate || 0).toFixed(2)}%</div>
+                    </div>
+                `;
                 } else {
-                    alert('Fehler beim Laden der Benutzerinformationen.');
+                    console.error('Fehler beim Laden der Statistiken:', data.message);
                 }
             })
             .catch(error => {
-                console.error('Error:', error);
-                alert('Ein Fehler ist aufgetreten. Bitte versuchen Sie es spÃ¤ter erneut.');
+                console.error('Fehler beim Laden der Statistiken:', error);
+            });
+    }
+
+    function loadLeaderboard() {
+        fetch('/leaderboard')
+            .then(response => response.json())
+            .then(data => {
+                const leaderboardBody = document.querySelector('#leaderboardTable tbody');
+                leaderboardBody.innerHTML = '';
+                data.forEach((player, index) => {
+                    const row = document.createElement('tr');
+                    row.innerHTML = `
+                    <td>${index + 1}</td>
+                    <td>${player.username}</td>
+                    <td>${player.wins || 0}</td>
+                `;
+                    leaderboardBody.appendChild(row);
+                });
+            })
+            .catch(error => {
+                console.error('Fehler beim Laden des Leaderboards:', error);
             });
     }
 
Index: ../Element-Battle-main-public - Kopie/src/main/resources/static/account.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"de\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <link rel=\"shortcut icon\" type=\"x-icon\" href=\"1721923.png\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Account - Element Battle</title>\r\n    <link rel=\"stylesheet\" href=\"account.css\">\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\r\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n<header>\r\n    <nav>\r\n        <div class=\"nav-left\">\r\n            <img src=\"3104645.png\" alt=\"Logo\" class=\"logo\">\r\n            <h1 class=\"nav-title\">Account Management Element Battle</h1>\r\n        </div>\r\n        <div class=\"nav-buttons\">\r\n            <button onclick=\"window.location.href='game.html'\" class=\"but back-btn\">\r\n               <i class=\"fa fa-arrow-left\"></i>\r\n                <i class=\"fas fa-gamepad\"></i> ZurÃ¼ck zum Spiel\r\n            </button>\r\n        </div>\r\n    </nav>\r\n</header>\r\n<main>\r\n    <div class=\"form-container account-container\">\r\n        <h2>Konto Informationen</h2>\r\n        <form id=\"accountForm\">\r\n            <div class=\"input-group\">\r\n                <label for=\"username\">Benutzername</label>\r\n                <div class=\"input-wrapper\">\r\n                    <i class=\"fas fa-user input-icon\"></i>\r\n                    <input type=\"text\" id=\"username\" name=\"username\" readonly>\r\n                    <button type=\"button\" class=\"edit-btn\" data-target=\"username\">\r\n                        <i class=\"fas fa-edit\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"input-group\">\r\n                <label for=\"password\">Passwort</label>\r\n                <div class=\"input-wrapper\">\r\n                    <i class=\"fas fa-lock input-icon\"></i>\r\n                    <input type=\"password\" id=\"password\" name=\"password\" readonly>\r\n                    <button type=\"button\" class=\"edit-btn\" data-target=\"password\">\r\n                        <i class=\"fas fa-edit\"></i>\r\n                    </button>\r\n                    <button type=\"button\" class=\"toggle-password\" id=\"togglePassword\">\r\n                        <i class=\"fas fa-eye\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <button type=\"submit\" class=\"but save-btn\" disabled>Ãnderungen speichern</button>\r\n        </form>\r\n    </div>\r\n</main>\r\n\r\n<script src=\"account.js\"></script>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Element-Battle-main-public - Kopie/src/main/resources/static/account.html b/../Element-Battle-main-public - Kopie/src/main/resources/static/account.html
--- a/../Element-Battle-main-public - Kopie/src/main/resources/static/account.html	(revision 5230df5ee7ecb520d194922b4f3dec16613c46c9)
+++ b/../Element-Battle-main-public - Kopie/src/main/resources/static/account.html	(date 1722147940679)
@@ -6,53 +6,77 @@
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <title>Account - Element Battle</title>
     <link rel="stylesheet" href="account.css">
-    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
+    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;700&display=swap" rel="stylesheet">
     <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
 </head>
 <body>
+<div class="particles"></div>
 <header>
     <nav>
         <div class="nav-left">
             <img src="3104645.png" alt="Logo" class="logo">
-            <h1 class="nav-title">Account Management Element Battle</h1>
+            <h1 class="nav-title">Element Battle</h1>
         </div>
         <div class="nav-buttons">
             <button onclick="window.location.href='game.html'" class="but back-btn">
-               <i class="fa fa-arrow-left"></i>
-                <i class="fas fa-gamepad"></i> ZurÃ¼ck zum Spiel
+                <i class="fas fa-arrow-left"></i>
+                <i class="fas fa-gamepad"></i>
+                ZurÃ¼ck zum Spiel
             </button>
         </div>
     </nav>
 </header>
 <main>
-    <div class="form-container account-container">
-        <h2>Konto Informationen</h2>
-        <form id="accountForm">
-            <div class="input-group">
-                <label for="username">Benutzername</label>
-                <div class="input-wrapper">
-                    <i class="fas fa-user input-icon"></i>
-                    <input type="text" id="username" name="username" readonly>
-                    <button type="button" class="edit-btn" data-target="username">
-                        <i class="fas fa-edit"></i>
-                    </button>
-                </div>
-            </div>
-            <div class="input-group">
-                <label for="password">Passwort</label>
-                <div class="input-wrapper">
-                    <i class="fas fa-lock input-icon"></i>
-                    <input type="password" id="password" name="password" readonly>
-                    <button type="button" class="edit-btn" data-target="password">
-                        <i class="fas fa-edit"></i>
-                    </button>
-                    <button type="button" class="toggle-password" id="togglePassword">
-                        <i class="fas fa-eye"></i>
-                    </button>
-                </div>
-            </div>
-            <button type="submit" class="but save-btn" disabled>Ãnderungen speichern</button>
-        </form>
+    <div class="content-wrapper">
+        <div class="form-container account-container">
+            <h2><i class="fas fa-user-circle"></i> Konto Informationen</h2>
+            <form id="accountForm">
+                <div class="input-group">
+                    <label for="username">Benutzername</label>
+                    <div class="input-wrapper">
+                        <i class="fas fa-user input-icon"></i>
+                        <input type="text" id="username" name="username" readonly>
+                        <button type="button" class="edit-btn" data-target="username">
+                            <i class="fas fa-edit"></i>
+                        </button>
+                    </div>
+                </div>
+                <div class="input-group">
+                    <label for="password">Passwort</label>
+                    <div class="input-wrapper">
+                        <i class="fas fa-lock input-icon"></i>
+                        <input type="password" id="password" name="password" readonly>
+                        <button type="button" class="edit-btn" data-target="password">
+                            <i class="fas fa-edit"></i>
+                        </button>
+                        <button type="button" class="toggle-password" id="togglePassword">
+                            <i class="fas fa-eye"></i>
+                        </button>
+                    </div>
+                </div>
+                <button type="submit" class="but save-btn" disabled>Ãnderungen speichern</button>
+            </form>
+        </div>
+        <div class="stats-container">
+            <h2><i class="fas fa-chart-bar"></i> Spielstatistiken</h2>
+            <div id="statsContent" class="stats-grid">
+                <p>Lade Statistiken...</p>
+            </div>
+        </div>
+        <div class="leaderboard-container">
+            <h2><i class="fas fa-trophy"></i> Leaderboard</h2>
+            <table id="leaderboardTable">
+                <thead>
+                <tr>
+                    <th>Rang</th>
+                    <th>Benutzername</th>
+                    <th>Siege</th>
+                </tr>
+                </thead>
+                <tbody>
+                </tbody>
+            </table>
+        </div>
     </div>
 </main>
 
diff --git a/../Element-Battle-main-public - Kopie/build/libs/cards.json b/../Element-Battle-main-public - Kopie/build/libs/cards.json
deleted file mode 100644
